{
	"id": "72072c5b01a8a4c876ae6387e8ac0521",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../owner/Operator.sol\";\r\n\r\n// Note that this pool has no minter key of Poly (rewards).\r\n// Instead, the governance will call Poly distributeReward method and send reward to this pool at the beginning.\r\ncontract PolyGenesisRewardPool is Operator {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 token; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Poly to distribute.\r\n        uint256 lastRewardTime; // Last time that Poly distribution occurs.\r\n        uint256 accStonePerShare; // Accumulated Poly per share, times 1e18. See below.\r\n        bool isStarted; // if lastRewardBlock has passed\r\n    }\r\n\r\n    IERC20 public Poly;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n\r\n    // flags\r\n    bool private initialized = false;\r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n\r\n    // The time when Poly mining starts.\r\n    uint256 public poolStartTime;\r\n\r\n    // The time when Poly mining ends.\r\n    uint256 public poolEndTime;\r\n\r\n    // MAINNET\r\n    uint256 public PolyPerSecond = 0.1446759259259259 ether; // 25000 Poly / (48h * 60min * 60s)\r\n    uint256 public runningTime = 2 days; // 2 days\r\n    uint256 public constant TOTAL_REWARDS = 25000 ether;\r\n    // END MAINNET\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 amount);\r\n\r\n    modifier notInitialized {\r\n        require(!initialized, \"Genesis: already initialized\");\r\n\r\n        _;\r\n    }\r\n\r\n    /* ========== VIEW FUNCTIONS ========== */\r\n\r\n    function isInitialized() public view returns (bool) {\r\n        return initialized;\r\n    }\r\n\r\n    function initialize (\r\n        address _Poly,\r\n        uint256 _poolStartTime\r\n    ) public notInitialized onlyOperator {\r\n        require(block.timestamp < _poolStartTime, \"late\");\r\n        if (_Poly != address(0)) Poly = IERC20(_Poly);\r\n        poolStartTime = _poolStartTime;\r\n        poolEndTime = poolStartTime + runningTime;\r\n        initialized = true;\r\n    }\r\n\r\n\r\n    function checkPoolDuplicate(IERC20 _token) internal view {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            require(poolInfo[pid].token != _token, \"PolyGenesisPool: existing pool?\");\r\n        }\r\n    }\r\n\r\n    // Add a new token to the pool. Can only be called by the owner.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _token,\r\n        bool _withUpdate,\r\n        uint256 _lastRewardTime\r\n    ) public onlyOperator {\r\n        checkPoolDuplicate(_token);\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        if (block.timestamp < poolStartTime) {\r\n            // chef is sleeping\r\n            if (_lastRewardTime == 0) {\r\n                _lastRewardTime = poolStartTime;\r\n            } else {\r\n                if (_lastRewardTime < poolStartTime) {\r\n                    _lastRewardTime = poolStartTime;\r\n                }\r\n            }\r\n        } else {\r\n            // chef is cooking\r\n            if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r\n                _lastRewardTime = block.timestamp;\r\n            }\r\n        }\r\n        bool _isStarted =\r\n        (_lastRewardTime <= poolStartTime) ||\r\n        (_lastRewardTime <= block.timestamp);\r\n        poolInfo.push(PoolInfo({\r\n            token : _token,\r\n            allocPoint : _allocPoint,\r\n            lastRewardTime : _lastRewardTime,\r\n            accStonePerShare : 0,\r\n            isStarted : _isStarted\r\n            }));\r\n        if (_isStarted) {\r\n            totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        }\r\n    }\r\n\r\n    // Update the given pool's Poly allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r\n        massUpdatePools();\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (pool.isStarted) {\r\n            totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r\n                _allocPoint\r\n            );\r\n        }\r\n        pool.allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return accumulate rewards over the given _from to _to block.\r\n    function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r\n        if (_fromTime >= _toTime) return 0;\r\n        if (_toTime >= poolEndTime) {\r\n            if (_fromTime >= poolEndTime) return 0;\r\n            if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond);\r\n            return poolEndTime.sub(_fromTime).mul(PolyPerSecond);\r\n        } else {\r\n            if (_toTime <= poolStartTime) return 0;\r\n            if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond);\r\n            return _toTime.sub(_fromTime).mul(PolyPerSecond);\r\n        }\r\n    }\r\n\r\n    // View function to see pending Poly on frontend.\r\n    function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accStonePerShare = pool.accStonePerShare;\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            accStonePerShare = accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        return user.amount.mul(accStonePerShare).div(1e18).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.timestamp <= pool.lastRewardTime) {\r\n            return;\r\n        }\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (tokenSupply == 0) {\r\n            pool.lastRewardTime = block.timestamp;\r\n            return;\r\n        }\r\n        if (!pool.isStarted) {\r\n            pool.isStarted = true;\r\n            totalAllocPoint = totalAllocPoint.add(pool.allocPoint);\r\n        }\r\n        if (totalAllocPoint > 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            pool.accStonePerShare = pool.accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        pool.lastRewardTime = block.timestamp;\r\n    }\r\n\r\n\r\n    // Deposit LP tokens.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        uint256 _before = _amount.ceil(200);\r\n        uint256 _after = _before.mul(200).div(10000);\r\n        uint256 _fixedAmount = _amount.sub(_after);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        updatePool(_pid);\r\n\r\n        if (user.amount > 0) {\r\n            uint256 _pending = user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt);\r\n            if (_pending > 0) {\r\n                safePolyTransfer(_sender, _pending);\r\n                emit RewardPaid(_sender, _pending);\r\n            }\r\n        }\r\n        if (_amount > 0) {\r\n            pool.token.safeTransferFrom(_sender, address(this), _amount);\r\n            user.amount = user.amount.add(_fixedAmount);\r\n            pool.token.safeTransfer(0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D, _after);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accStonePerShare).div(1e18);\r\n        emit Deposit(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 _pending = user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt);\r\n        if (_pending > 0) {\r\n            safePolyTransfer(_sender, _pending);\r\n            emit RewardPaid(_sender, _pending);\r\n        }\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.token.safeTransfer(_sender, _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accStonePerShare).div(1e18);\r\n        emit Withdraw(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 _amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        pool.token.safeTransfer(msg.sender, _amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Safe Poly transfer function, just in case if rounding error causes pool to not have enough Polys.\r\n    function safePolyTransfer(address _to, uint256 _amount) internal {\r\n        uint256 _PolyBalance = Poly.balanceOf(address(this));\r\n        if (_PolyBalance > 0) {\r\n            if (_amount > _PolyBalance) {\r\n                Poly.safeTransfer(_to, _PolyBalance);\r\n            } else {\r\n                Poly.safeTransfer(_to, _amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setOperator(address _Newoperator) external onlyOperator {\r\n        transferOperator(_Newoperator);\r\n    }\r\n\r\n    function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r\n        if (block.timestamp < poolEndTime + 90 days) {\r\n            // do not allow to drain core token (Poly or lps) if less than 90 days after pool ends\r\n            require(_token != Poly, \"Poly\");\r\n            uint256 length = poolInfo.length;\r\n            for (uint256 pid = 0; pid < length; ++pid) {\r\n                PoolInfo storage pool = poolInfo[pid];\r\n                require(_token != pool.token, \"pool.token\");\r\n            }\r\n        }\r\n        _token.safeTransfer(to, amount);\r\n    }\r\n}\r\n\r\n"
			},
			"contracts/owner/Operator.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\n\r\nabstract contract Operator is Context, Ownable {\r\n    address private _operator;\r\n\r\n    event OperatorTransferred(\r\n        address indexed previousOperator,\r\n        address indexed newOperator\r\n    );\r\n\r\n    constructor() internal {\r\n        _operator = _msgSender();\r\n        emit OperatorTransferred(address(0), _operator);\r\n    }\r\n\r\n    function operator() public view returns (address) {\r\n        return _operator;\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(\r\n            _operator == msg.sender,\r\n            \"operator: caller is not the operator\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function isOperator() public view returns (bool) {\r\n        return _msgSender() == _operator;\r\n    }\r\n\r\n    function transferOperator(address newOperator_) public onlyOwner {\r\n        _transferOperator(newOperator_);\r\n    }\r\n\r\n    function _transferOperator(address newOperator_) internal {\r\n        require(\r\n            newOperator_ != address(0),\r\n            \"operator: zero address given for new operator\"\r\n        );\r\n        emit OperatorTransferred(address(0), newOperator_);\r\n        Ownable.transferOwnership(newOperator_);\r\n        _operator = newOperator_;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n        uint256 c = add(a, m);\n        uint256 d = sub(c, 1);\n        return mul(div(d, m), m);\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\nimport \"../../../utils/math/SafeMath.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    address private _Ownership;\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    fallback() external payable {\n        // solhint-disable-previous-line no-complex-fallback\n        address _impl = Ownership();\n        require(_impl != address(0));\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize())\n            let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)\n            mstore(0x40, add(ptr, returndatasize()))\n            returndatacopy(ptr, 0, returndatasize())\n            switch result\n            case 0 {\n                revert(ptr, returndatasize())\n            }\n            default {\n                return(ptr, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function Ownership() internal view virtual returns (address) {\n        return _Ownership;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"_Ownership": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_Ownership\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1a121060d4fd9192e0f4627d6a2fe16df72bae08b7a6e65b66dac091252ada6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23c7804774953e5bb28601b8627704cab73ecd3aa7d774520a73f321de4b6542\",\"dweb:/ipfs/QmWtd25W5UCARtgjJqmLugDLvVfVy2pf7t4THhjY88DZTa\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 111,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_Ownership",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SUB 0x27 0xB7 0xBE POP DUP12 0x1E CHAINID MULMOD 0xD1 CALLDATALOAD 0xBE 0xE1 PUSH15 0x1AB6D9E7E95E3B5500821007DE644D DUP1 0xE3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SUB 0x27 0xB7 0xBE POP DUP12 0x1E CHAINID MULMOD 0xD1 CALLDATALOAD 0xBE 0xE1 PUSH15 0x1AB6D9E7E95E3B5500821007DE644D DUP1 0xE3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
									".code": [
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x4D RETURNDATASIZE KECCAK256 0xCD 0xEF DIFFICULTY 0xA9 0xE9 DELEGATECALL 0xDE ADDRESS PUSH30 0xA6D1953ED6D0005A91E7B49D0F03D0C6E21C5964736F6C63430007060033 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x4D RETURNDATASIZE KECCAK256 0xCD 0xEF DIFFICULTY 0xA9 0xE9 DELEGATECALL 0xDE ADDRESS PUSH30 0xA6D1953ED6D0005A91E7B49D0F03D0C6E21C5964736F6C63430007060033 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
									".code": [
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x29 0xBC 0xBE SWAP4 SELFDESTRUCT 0xE6 0x4C 0x4F LOG2 0xC4 DIFFICULTY PUSH23 0xB72CD26C0DECDA284CBAE117DF7589FC7F18764736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x29 0xBC 0xBE SWAP4 SELFDESTRUCT 0xE6 0x4C 0x4F LOG2 0xC4 DIFFICULTY PUSH23 0xB72CD26C0DECDA284CBAE117DF7589FC7F18764736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"ceil(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
									".code": [
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"PolyGenesisRewardPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "Poly",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PolyPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_REWARDS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lastRewardTime",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTime",
									"type": "uint256"
								}
							],
							"name": "getGeneratedReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Poly",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolStartTime",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingStone",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accStonePerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStarted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "runningTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Newoperator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11480  contract PolyGenesisRewardPool is Operator {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1347:1352  false */\n  0x00\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1320:1352  bool private initialized = false */\n  0x05\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1604:1605  0 */\n  0x00\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1571:1605  uint256 public totalAllocPoint = 0 */\n  0x07\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1815:1839  0.1446759259259259 ether */\n  0x0201fdfcf45d940c\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1784:1839  uint256 public PolyPerSecond = 0.1446759259259259 ether */\n  0x0a\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1911:1917  2 days */\n  0x02a300\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1882:1917  uint256 public runningTime = 2 days */\n  0x0b\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11480  contract PolyGenesisRewardPool is Operator {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:955  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:968  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:970  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":989:998  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:986  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:998  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1046:1055  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1042:1043  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:1063  constructor () internal {... */\n  pop\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  tag_8\n    /* \"contracts/owner/Operator.sol\":435:445  _msgSender */\n  shl(0x20, tag_6)\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/owner/Operator.sol\":423:432  _operator */\n  0x02\n  0x00\n    /* \"contracts/owner/Operator.sol\":423:447  _operator = _msgSender() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/owner/Operator.sol\":495:504  _operator */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":491:492  0 */\n  0x00\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11480  contract PolyGenesisRewardPool is Operator {\r... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11480  contract PolyGenesisRewardPool is Operator {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11480  contract PolyGenesisRewardPool is Operator {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f96dc11\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x96805e54\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe177bb38\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe177bb38\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xecf4deb9\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x96805e54\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x715018a6\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x943f013d\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x5f96dc11\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6e271dd5\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x3f7caf52\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x51eb05a6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x3f7caf52\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4456eda2\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x1ab06ee5\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x231f0c6a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x29605e77\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x09cf6091\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2729:2742  address _impl */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2745:2756  Ownership() */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2745:2754  Ownership */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2745:2756  Ownership() */\n      jump\t// in\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2729:2756  address _impl = Ownership() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2791:2792  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2774:2793  _impl != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2774:2779  _impl */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2774:2793  _impl != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2766:2794  require(_impl != address(0)) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2844:2848  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2838:2849  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2883:2897  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2880:2881  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2875:2878  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2862:2898  calldatacopy(ptr, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2976:2977  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2973:2974  0 */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2957:2971  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2952:2955  ptr */\n      dup4\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2945:2950  _impl */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2938:2943  gas() */\n      gas\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2925:2978  delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3013:3029  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3008:3011  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3030  add(ptr, returndatasize()) */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2998:3002  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2991:3031  mstore(0x40, add(ptr, returndatasize())) */\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3067:3083  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3064:3065  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3059:3062  ptr */\n      dup4\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3044:3084  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3104:3110  result */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3128:3129  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3123:3191  case 0 {... */\n      dup2\n      eq\n      tag_44\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3242:3258  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3237:3240  ptr */\n      dup4\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3230:3259  return(ptr, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3123:3191  case 0 {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3160:3176  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3155:3158  ptr */\n      dup4\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3148:3177  revert(ptr, returndatasize()) */\n      revert\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1934:1985  uint256 public constant TOTAL_REWARDS = 25000 ether */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1271:1297  PoolInfo[] public poolInfo */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1571:1605  uint256 public totalAllocPoint = 0 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4678:5031  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5108:5761  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2493:2582  function isInitialized() public view returns (bool) {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1784:1839  uint256 public PolyPerSecond = 0.1446759259259259 ether */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9004:9816  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6940:7850  function updatePool(uint256 _pid) public {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9887:10264  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10873:11477  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1656:1684  uint256 public poolStartTime */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6684:6864  function massUpdatePools() public {\r... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1733:1759  uint256 public poolEndTime */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1410:1474  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1882:1917  uint256 public runningTime = 2 days */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3305:4582  function add(\r... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10751:10865  function setOperator(address _Newoperator) external onlyOperator {\r... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2590:2956  function initialize (\r... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1217:1235  IERC20 public Poly */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7887:8968  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_135\n      jump\t// in\n    tag_133:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5824:6601  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_143\n      jump\t// in\n    tag_141:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3438:3533  function Ownership() internal view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3490:3497  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3516:3526  _Ownership */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3509:3526  return _Ownership */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3438:3533  function Ownership() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1934:1985  uint256 public constant TOTAL_REWARDS = 25000 ether */\n    tag_47:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1974:1985  25000 ether */\n      0x054b40b1f852bda00000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1934:1985  uint256 public constant TOTAL_REWARDS = 25000 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1271:1297  PoolInfo[] public poolInfo */\n    tag_51:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1571:1605  uint256 public totalAllocPoint = 0 */\n    tag_54:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4678:5031  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_58:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4757:4774  massUpdatePools() */\n      tag_150\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4757:4772  massUpdatePools */\n      tag_100\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4757:4774  massUpdatePools() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4785:4806  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4809:4817  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4818:4822  _pid */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4809:4823  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_151\n      jumpi\n      invalid\n    tag_151:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4785:4823  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4838:4842  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4838:4852  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4834:4984  if (pool.isStarted) {\r... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4887:4972  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      tag_154\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4946:4957  _allocPoint */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4887:4923  totalAllocPoint.sub(pool.allocPoint) */\n      tag_155\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4907:4911  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4907:4922  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4887:4902  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4887:4906  totalAllocPoint.sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4887:4923  totalAllocPoint.sub(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4887:4927  totalAllocPoint.sub(pool.allocPoint).add */\n      tag_157\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4887:4972  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4869:4884  totalAllocPoint */\n      0x07\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4869:4972  totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4834:4984  if (pool.isStarted) {\r... */\n    tag_153:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5012:5023  _allocPoint */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4994:4998  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4994:5009  pool.allocPoint */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4994:5023  pool.allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4678:5031  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5108:5761  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_62:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5193:5200  uint256 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5230:5237  _toTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5217:5226  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5217:5237  _fromTime >= _toTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5213:5247  if (_fromTime >= _toTime) return 0 */\n      tag_159\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5246:5247  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5239:5247  return 0 */\n      swap1\n      pop\n      jump(tag_158)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5213:5247  if (_fromTime >= _toTime) return 0 */\n    tag_159:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5273:5284  poolEndTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5262:5269  _toTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5262:5284  _toTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5258:5754  if (_toTime >= poolEndTime) {\r... */\n      tag_160\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5318:5329  poolEndTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5305:5314  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5305:5329  _fromTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5301:5339  if (_fromTime >= poolEndTime) return 0 */\n      tag_161\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5338:5339  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5331:5339  return 0 */\n      swap1\n      pop\n      jump(tag_158)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5301:5339  if (_fromTime >= poolEndTime) return 0 */\n    tag_161:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5371:5384  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5358:5367  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5358:5384  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5354:5442  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_162\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5393:5442  poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_163\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5428:5441  PolyPerSecond */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5393:5423  poolEndTime.sub(poolStartTime) */\n      tag_164\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5409:5422  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5393:5404  poolEndTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5393:5408  poolEndTime.sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5393:5423  poolEndTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5393:5427  poolEndTime.sub(poolStartTime).mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5393:5442  poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5386:5442  return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_158)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5354:5442  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n    tag_162:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5464:5509  poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      tag_166\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5495:5508  PolyPerSecond */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5464:5490  poolEndTime.sub(_fromTime) */\n      tag_167\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5480:5489  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5464:5475  poolEndTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5464:5479  poolEndTime.sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5464:5490  poolEndTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5464:5494  poolEndTime.sub(_fromTime).mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5464:5509  poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5457:5509  return poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_158)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5258:5754  if (_toTime >= poolEndTime) {\r... */\n    tag_160:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5557:5570  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5546:5553  _toTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5546:5570  _toTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5542:5580  if (_toTime <= poolStartTime) return 0 */\n      tag_169\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5579:5580  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5572:5580  return 0 */\n      swap1\n      pop\n      jump(tag_158)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5542:5580  if (_toTime <= poolStartTime) return 0 */\n    tag_169:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5612:5625  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5599:5608  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5599:5625  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5595:5679  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_170\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5634:5679  _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_171\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5665:5678  PolyPerSecond */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5634:5660  _toTime.sub(poolStartTime) */\n      tag_172\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5646:5659  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5634:5641  _toTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5634:5645  _toTime.sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5634:5660  _toTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5634:5664  _toTime.sub(poolStartTime).mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5634:5679  _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5627:5679  return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_158)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5595:5679  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n    tag_170:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5701:5742  _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      tag_173\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5728:5741  PolyPerSecond */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5701:5723  _toTime.sub(_fromTime) */\n      tag_174\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5713:5722  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5701:5708  _toTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5701:5712  _toTime.sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5701:5723  _toTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5701:5727  _toTime.sub(_fromTime).mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5701:5742  _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5694:5742  return _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5108:5761  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_158:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      tag_181\n        /* \"contracts/owner/Operator.sol\":988:1000  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":970:987  _transferOperator */\n      tag_182\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2493:2582  function isInitialized() public view returns (bool) {\r... */\n    tag_69:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2539:2543  bool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2563:2574  initialized */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2556:2574  return initialized */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2493:2582  function isInitialized() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1784:1839  uint256 public PolyPerSecond = 0.1446759259259259 ether */\n    tag_72:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9004:9816  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_76:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9071:9086  address _sender */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9089:9099  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9071:9099  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9110:9131  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9134:9142  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9143:9147  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9134:9148  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      invalid\n    tag_185:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9110:9148  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9159:9180  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9183:9191  userInfo */\n      0x06\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9183:9197  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9192:9196  _pid */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9183:9197  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9183:9206  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9198:9205  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9183:9206  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9159:9206  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9240:9247  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9225:9229  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9225:9236  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9225:9247  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9217:9270  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9281:9297  updatePool(_pid) */\n      tag_188\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9292:9296  _pid */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9281:9291  updatePool */\n      tag_83\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9281:9297  updatePool(_pid) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9308:9324  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9396  user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_189\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9380:9384  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9380:9395  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9375  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      tag_190\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9370:9374  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9365  user.amount.mul(pool.accStonePerShare) */\n      tag_191\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9343:9347  pool */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9343:9364  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9331  user */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9338  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9342  user.amount.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9365  user.amount.mul(pool.accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9369  user.amount.mul(pool.accStonePerShare).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9375  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9379  user.amount.mul(pool.accStonePerShare).div(1e18).sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9327:9396  user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9308:9396  uint256 _pending = user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9422:9423  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9411:9419  _pending */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9411:9423  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9407:9536  if (_pending > 0) {\r... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9440:9475  safePolyTransfer(_sender, _pending) */\n      tag_194\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9457:9464  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9466:9474  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9440:9456  safePolyTransfer */\n      tag_195\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9440:9475  safePolyTransfer(_sender, _pending) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9506:9513  _sender */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9495:9524  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9515:9523  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9495:9524  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9407:9536  if (_pending > 0) {\r... */\n    tag_193:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9560:9561  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9550:9557  _amount */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9550:9561  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9546:9684  if (_amount > 0) {\r... */\n      iszero\n      tag_196\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9592:9616  user.amount.sub(_amount) */\n      tag_197\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9608:9615  _amount */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9592:9596  user */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9592:9603  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9592:9607  user.amount.sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9592:9616  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9578:9582  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9578:9589  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9578:9616  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9631:9672  pool.token.safeTransfer(_sender, _amount) */\n      tag_198\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9655:9662  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9664:9671  _amount */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9631:9635  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9631:9641  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9631:9654  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9631:9672  pool.token.safeTransfer(_sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9546:9684  if (_amount > 0) {\r... */\n    tag_196:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9712:9760  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      tag_200\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9755:9759  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9712:9750  user.amount.mul(pool.accStonePerShare) */\n      tag_201\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9728:9732  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9728:9749  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9712:9716  user */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9712:9723  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9712:9727  user.amount.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9712:9750  user.amount.mul(pool.accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9712:9754  user.amount.mul(pool.accStonePerShare).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9712:9760  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9694:9698  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9694:9709  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9694:9760  user.rewardDebt = user.amount.mul(pool.accStonePerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9794:9798  _pid */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9785:9792  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9776:9808  Withdraw(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9800:9807  _amount */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9776:9808  Withdraw(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9004:9816  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_79:\n        /* \"contracts/owner/Operator.sol\":829:833  bool */\n      0x00\n        /* \"contracts/owner/Operator.sol\":869:878  _operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      tag_203\n        /* \"contracts/owner/Operator.sol\":853:863  _msgSender */\n      tag_177\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":846:878  return _msgSender() == _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6940:7850  function updatePool(uint256 _pid) public {\r... */\n    tag_83:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6992:7013  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7016:7024  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7025:7029  _pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7016:7030  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_205\n      jumpi\n      invalid\n    tag_205:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6992:7030  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7064:7068  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7064:7083  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7045:7060  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7045:7083  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7041:7118  if (block.timestamp <= pool.lastRewardTime) {\r... */\n      tag_207\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7100:7107  return; */\n      pop\n      jump(tag_204)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7041:7118  if (block.timestamp <= pool.lastRewardTime) {\r... */\n    tag_207:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7128:7147  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7150:7154  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7150:7160  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7150:7170  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7179:7183  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7150:7185  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7128:7185  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7215:7216  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7200:7211  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7200:7216  tokenSupply == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7196:7303  if (tokenSupply == 0) {\r... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7255:7270  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7233:7237  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7233:7252  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7233:7270  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7285:7292  return; */\n      pop\n      pop\n      jump(tag_204)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7196:7303  if (tokenSupply == 0) {\r... */\n    tag_212:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7318:7322  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7318:7332  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7313:7451  if (!pool.isStarted) {\r... */\n      tag_213\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7366:7370  true */\n      0x01\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7349:7353  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7349:7363  pool.isStarted */\n      0x04\n      add\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7349:7370  pool.isStarted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7403:7439  totalAllocPoint.add(pool.allocPoint) */\n      tag_214\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7423:7427  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7423:7438  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7403:7418  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7403:7422  totalAllocPoint.add */\n      tag_157\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7403:7439  totalAllocPoint.add(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7385:7400  totalAllocPoint */\n      0x07\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7385:7439  totalAllocPoint = totalAllocPoint.add(pool.allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7313:7451  if (!pool.isStarted) {\r... */\n    tag_213:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7483:7484  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7465:7480  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7465:7484  totalAllocPoint > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7461:7795  if (totalAllocPoint > 0) {\r... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7501:7525  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7528:7584  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_216\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7547:7551  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7547:7566  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7568:7583  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7528:7546  getGeneratedReward */\n      tag_62\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7528:7584  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7501:7584  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7599:7618  uint256 _PolyReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7621:7679  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_217\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7663:7678  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7621:7658  _generatedReward.mul(pool.allocPoint) */\n      tag_218\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7642:7646  pool */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7642:7657  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7621:7637  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7621:7641  _generatedReward.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7621:7658  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7621:7662  _generatedReward.mul(pool.allocPoint).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7621:7679  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7599:7679  uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7718:7783  pool.accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      tag_219\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7744:7782  _PolyReward.mul(1e18).div(tokenSupply) */\n      tag_220\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7770:7781  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7744:7765  _PolyReward.mul(1e18) */\n      tag_221\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7760:7764  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7744:7755  _PolyReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7744:7759  _PolyReward.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7744:7765  _PolyReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7744:7769  _PolyReward.mul(1e18).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7744:7782  _PolyReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7718:7722  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7718:7739  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7718:7743  pool.accStonePerShare.add */\n      tag_157\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7718:7783  pool.accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7694:7698  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7694:7715  pool.accStonePerShare */\n      0x03\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7694:7783  pool.accStonePerShare = pool.accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7461:7795  if (totalAllocPoint > 0) {\r... */\n      pop\n      pop\n    tag_215:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7827:7842  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7805:7809  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7805:7824  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7805:7842  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6940:7850  function updatePool(uint256 _pid) public {\r... */\n      pop\n      pop\n    tag_204:\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9887:10264  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_87:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9946:9967  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9970:9978  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9979:9983  _pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9970:9984  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_223\n      jumpi\n      invalid\n    tag_223:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9946:9984  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9995:10016  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10019:10027  userInfo */\n      0x06\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10019:10033  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10028:10032  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10019:10033  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10019:10045  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10034:10044  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10019:10045  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9995:10045  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10056:10071  uint256 _amount */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10074:10078  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10074:10085  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10056:10085  uint256 _amount = user.amount */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10110:10111  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10096:10100  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10096:10107  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10096:10111  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10140:10141  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10122:10126  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10122:10137  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10122:10141  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10152:10196  pool.token.safeTransfer(msg.sender, _amount) */\n      tag_225\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10176:10186  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10188:10195  _amount */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10152:10156  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10152:10162  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10152:10175  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10152:10196  pool.token.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10242:10246  _pid */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10230:10240  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10212:10256  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10248:10255  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10212:10256  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9887:10264  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10873:11477  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_91:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11023:11030  90 days */\n      0x76a700\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11009:11020  poolEndTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11009:11030  poolEndTime + 90 days */\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10991:11006  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10991:11030  block.timestamp < poolEndTime + 90 days */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10987:11428  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      iszero\n      tag_229\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11165:11169  Poly */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11155:11169  _token != Poly */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11155:11161  _token */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11155:11169  _token != Poly */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11147:11178  require(_token != Poly, \"Poly\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6c7900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11193:11207  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11210:11218  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11210:11225  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11193:11225  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11245:11256  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11240:11417  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_231:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11268:11274  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11262:11265  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11262:11274  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11240:11417  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_232\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11302:11323  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11326:11334  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11335:11338  pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11326:11339  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_234\n      jumpi\n      invalid\n    tag_234:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11302:11339  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11376:11380  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11376:11386  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11366:11386  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11366:11372  _token */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11366:11386  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11358:11401  require(_token != pool.token, \"pool.token\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x706f6f6c2e746f6b656e00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11240:11417  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11276:11281  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11240:11417  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_231)\n    tag_232:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10987:11428  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      pop\n    tag_229:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11438:11469  _token.safeTransfer(to, amount) */\n      tag_237\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11458:11460  to */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11462:11468  amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11438:11444  _token */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11438:11457  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11438:11469  _token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10873:11477  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_94:\n        /* \"contracts/owner/Operator.sol\":562:569  address */\n      0x00\n        /* \"contracts/owner/Operator.sol\":589:598  _operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":582:598  return _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1656:1684  uint256 public poolStartTime */\n    tag_97:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6684:6864  function massUpdatePools() public {\r... */\n    tag_100:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6729:6743  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6746:6754  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6746:6761  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6729:6761  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6777:6788  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6772:6857  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_240:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6800:6806  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6794:6797  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6794:6806  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6772:6857  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6830:6845  updatePool(pid) */\n      tag_243\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6841:6844  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6830:6840  updatePool */\n      tag_83\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6830:6845  updatePool(pid) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6808:6813  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6772:6857  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_240)\n    tag_241:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6684:6864  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1733:1759  uint256 public poolEndTime */\n    tag_103:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1877:1878  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1861:1867  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1907:1908  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1896  _owner */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1909  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1211:1217  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1204:1217  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1410:1474  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_113:\n      mstore(0x20, 0x06)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1882:1917  uint256 public runningTime = 2 days */\n    tag_116:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3305:4582  function add(\r... */\n    tag_120:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3471:3497  checkPoolDuplicate(_token) */\n      tag_253\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3490:3496  _token */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3471:3489  checkPoolDuplicate */\n      tag_254\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3471:3497  checkPoolDuplicate(_token) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3512:3523  _withUpdate */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3508:3569  if (_withUpdate) {\r... */\n      iszero\n      tag_255\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3540:3557  massUpdatePools() */\n      tag_256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3540:3555  massUpdatePools */\n      tag_100\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3540:3557  massUpdatePools() */\n      jump\t// in\n    tag_256:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3508:3569  if (_withUpdate) {\r... */\n    tag_255:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3601:3614  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3583:3598  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3583:3614  block.timestamp < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3579:4113  if (block.timestamp < poolStartTime) {\r... */\n      iszero\n      tag_257\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3687:3688  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3668:3683  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3668:3688  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3664:3907  if (_lastRewardTime == 0) {\r... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3727:3740  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3709:3740  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3664:3907  if (_lastRewardTime == 0) {\r... */\n      jump(tag_259)\n    tag_258:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3803:3816  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3785:3800  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3785:3816  _lastRewardTime < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3781:3892  if (_lastRewardTime < poolStartTime) {\r... */\n      iszero\n      tag_260\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3859:3872  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3841:3872  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3781:3892  if (_lastRewardTime < poolStartTime) {\r... */\n    tag_260:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3664:3907  if (_lastRewardTime == 0) {\r... */\n    tag_259:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3579:4113  if (block.timestamp < poolStartTime) {\r... */\n      jump(tag_261)\n    tag_257:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3994:3995  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3975:3990  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3975:3995  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3975:4032  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n      dup1\n      tag_262\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4017:4032  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3999:4014  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3999:4032  _lastRewardTime < block.timestamp */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3975:4032  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n    tag_262:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3971:4102  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n      iszero\n      tag_263\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4071:4086  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4053:4086  _lastRewardTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3971:4102  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n    tag_263:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3579:4113  if (block.timestamp < poolStartTime) {\r... */\n    tag_261:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4123:4138  bool _isStarted */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4170:4183  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4151:4166  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4151:4183  _lastRewardTime <= poolStartTime */\n      gt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4150:4233  (_lastRewardTime <= poolStartTime) ||\r... */\n      dup1\n      tag_264\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4217:4232  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4198:4213  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4198:4232  _lastRewardTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4150:4233  (_lastRewardTime <= poolStartTime) ||\r... */\n    tag_264:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4123:4233  bool _isStarted =\r... */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4244:4252  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4258:4470  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4290:4296  _token */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4258:4470  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4324:4335  _allocPoint */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4258:4470  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4367:4382  _lastRewardTime */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4258:4470  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4416:4417  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4258:4470  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4444:4454  _isStarted */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4258:4470  PoolInfo({\r... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4244:4471  poolInfo.push(PoolInfo({\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4486:4496  _isStarted */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4482:4575  if (_isStarted) {\r... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4531:4563  totalAllocPoint.add(_allocPoint) */\n      tag_267\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4551:4562  _allocPoint */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4531:4546  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4531:4550  totalAllocPoint.add */\n      tag_157\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4531:4563  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4513:4528  totalAllocPoint */\n      0x07\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4513:4563  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4482:4575  if (_isStarted) {\r... */\n    tag_266:\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3305:4582  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10751:10865  function setOperator(address _Newoperator) external onlyOperator {\r... */\n    tag_124:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10827:10857  transferOperator(_Newoperator) */\n      tag_271\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10844:10856  _Newoperator */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10827:10843  transferOperator */\n      tag_66\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10827:10857  transferOperator(_Newoperator) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10751:10865  function setOperator(address _Newoperator) external onlyOperator {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2590:2956  function initialize (\r... */\n    tag_128:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2369:2380  initialized */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2368:2380  !initialized */\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2360:2413  require(!initialized, \"Genesis: already initialized\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x47656e657369733a20616c726561647920696e697469616c697a656400000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2747:2761  _poolStartTime */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2729:2744  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2729:2761  block.timestamp < _poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2721:2770  require(block.timestamp < _poolStartTime, \"late\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6c61746500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2802:2803  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2785:2804  _Poly != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2785:2790  _Poly */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2785:2804  _Poly != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2781:2826  if (_Poly != address(0)) Poly = IERC20(_Poly) */\n      tag_278\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2820:2825  _Poly */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2806:2810  Poly */\n      0x03\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2806:2826  Poly = IERC20(_Poly) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2781:2826  if (_Poly != address(0)) Poly = IERC20(_Poly) */\n    tag_278:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2853:2867  _poolStartTime */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2837:2850  poolStartTime */\n      0x08\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2837:2867  poolStartTime = _poolStartTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2908:2919  runningTime */\n      sload(0x0b)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2892:2905  poolStartTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2892:2919  poolStartTime + runningTime */\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2878:2889  poolEndTime */\n      0x09\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2878:2919  poolEndTime = poolStartTime + runningTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2944:2948  true */\n      0x01\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2930:2941  initialized */\n      0x05\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2930:2948  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2590:2956  function initialize (\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1217:1235  IERC20 public Poly */\n    tag_131:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7887:8968  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_135:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7953:7968  address _sender */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7971:7981  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7953:7981  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7992:8007  uint256 _before */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8010:8027  _amount.ceil(200) */\n      tag_280\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8023:8026  200 */\n      0xc8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8010:8017  _amount */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8010:8022  _amount.ceil */\n      tag_281\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8010:8027  _amount.ceil(200) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7992:8027  uint256 _before = _amount.ceil(200) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8038:8052  uint256 _after */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8055:8082  _before.mul(200).div(10000) */\n      tag_282\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8076:8081  10000 */\n      0x2710\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8055:8071  _before.mul(200) */\n      tag_283\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8067:8070  200 */\n      0xc8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8055:8062  _before */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8055:8066  _before.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8055:8071  _before.mul(200) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8055:8075  _before.mul(200).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8055:8082  _before.mul(200).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8038:8082  uint256 _after = _before.mul(200).div(10000) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8093:8113  uint256 _fixedAmount */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8116:8135  _amount.sub(_after) */\n      tag_284\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8128:8134  _after */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8116:8123  _amount */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8116:8127  _amount.sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8116:8135  _amount.sub(_after) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8093:8135  uint256 _fixedAmount = _amount.sub(_after) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8148:8169  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8172:8180  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8181:8185  _pid */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8172:8186  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_285\n      jumpi\n      invalid\n    tag_285:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8148:8186  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8197:8218  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8221:8229  userInfo */\n      0x06\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8221:8235  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8230:8234  _pid */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8221:8235  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8221:8244  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8236:8243  _sender */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8221:8244  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8197:8244  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8255:8271  updatePool(_pid) */\n      tag_287\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8266:8270  _pid */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8255:8265  updatePool */\n      tag_83\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8255:8271  updatePool(_pid) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8302:8303  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8288:8292  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8288:8299  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8288:8303  user.amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8284:8575  if (user.amount > 0) {\r... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8320:8336  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8408  user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_289\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8392:8396  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8392:8407  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8387  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      tag_290\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8382:8386  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8377  user.amount.mul(pool.accStonePerShare) */\n      tag_291\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8355:8359  pool */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8355:8376  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8343  user */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8350  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8354  user.amount.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8377  user.amount.mul(pool.accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8381  user.amount.mul(pool.accStonePerShare).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8387  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8391  user.amount.mul(pool.accStonePerShare).div(1e18).sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8339:8408  user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8320:8408  uint256 _pending = user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8438:8439  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8427:8435  _pending */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8427:8439  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8423:8564  if (_pending > 0) {\r... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8460:8495  safePolyTransfer(_sender, _pending) */\n      tag_293\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8477:8484  _sender */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8486:8494  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8460:8476  safePolyTransfer */\n      tag_195\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8460:8495  safePolyTransfer(_sender, _pending) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8530:8537  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8519:8548  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8539:8547  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8519:8548  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8423:8564  if (_pending > 0) {\r... */\n    tag_292:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8284:8575  if (user.amount > 0) {\r... */\n      pop\n    tag_288:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8599:8600  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8589:8596  _amount */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8589:8600  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8585:8837  if (_amount > 0) {\r... */\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8617:8677  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      tag_295\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8645:8652  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8662:8666  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8669:8676  _amount */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8617:8621  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8617:8627  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8617:8644  pool.token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_296\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8617:8677  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_295:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8706:8735  user.amount.add(_fixedAmount) */\n      tag_297\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8722:8734  _fixedAmount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8706:8710  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8706:8717  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8706:8721  user.amount.add */\n      tag_157\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8706:8735  user.amount.add(_fixedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_297:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8692:8696  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8692:8703  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8692:8735  user.amount = user.amount.add(_fixedAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8750:8825  pool.token.safeTransfer(0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D, _after) */\n      tag_298\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8774:8816  0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D */\n      0x01fc7f2c81acd9d38ed4d509b1f17555e549ef1d\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8818:8824  _after */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8750:8754  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8750:8760  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8750:8773  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8750:8825  pool.token.safeTransfer(0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D, _after) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8585:8837  if (_amount > 0) {\r... */\n    tag_294:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8865:8913  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      tag_299\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8908:8912  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8865:8903  user.amount.mul(pool.accStonePerShare) */\n      tag_300\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8881:8885  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8881:8902  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8865:8869  user */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8865:8876  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8865:8880  user.amount.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8865:8903  user.amount.mul(pool.accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_300:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8865:8907  user.amount.mul(pool.accStonePerShare).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8865:8913  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8847:8851  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8847:8862  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8847:8913  user.rewardDebt = user.amount.mul(pool.accStonePerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8946:8950  _pid */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8937:8944  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8929:8960  Deposit(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8952:8959  _amount */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8929:8960  Deposit(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7887:8968  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5824:6601  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_139:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5898:5905  uint256 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5918:5939  PoolInfo storage pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5942:5950  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5951:5955  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5942:5956  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_302\n      jumpi\n      invalid\n    tag_302:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5918:5956  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5967:5988  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5991:5999  userInfo */\n      0x06\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5991:6005  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6000:6004  _pid */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5991:6005  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5991:6012  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6006:6011  _user */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5991:6012  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5967:6012  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6023:6047  uint256 accStonePerShare */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6050:6054  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6050:6071  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6023:6071  uint256 accStonePerShare = pool.accStonePerShare */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6082:6101  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6104:6108  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6104:6114  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6104:6124  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6133:6137  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6104:6139  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_304:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6082:6139  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6172:6176  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6172:6191  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6154:6169  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6154:6191  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6154:6211  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6210:6211  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6195:6206  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6195:6211  tokenSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6154:6211  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n    tag_308:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6150:6512  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      iszero\n      tag_309\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6228:6252  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6255:6311  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_310\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6274:6278  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6274:6293  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6295:6310  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6255:6273  getGeneratedReward */\n      tag_62\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6255:6311  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6228:6311  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6326:6345  uint256 _PolyReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6348:6406  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_311\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6390:6405  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6348:6385  _generatedReward.mul(pool.allocPoint) */\n      tag_312\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6369:6373  pool */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6369:6384  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6348:6364  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6348:6368  _generatedReward.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6348:6385  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_312:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6348:6389  _generatedReward.mul(pool.allocPoint).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6348:6406  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6326:6406  uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6440:6500  accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      tag_313\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6461:6499  _PolyReward.mul(1e18).div(tokenSupply) */\n      tag_314\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6487:6498  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6461:6482  _PolyReward.mul(1e18) */\n      tag_315\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6477:6481  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6461:6472  _PolyReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6461:6476  _PolyReward.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6461:6482  _PolyReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6461:6486  _PolyReward.mul(1e18).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6461:6499  _PolyReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6440:6456  accStonePerShare */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6440:6460  accStonePerShare.add */\n      tag_157\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6440:6500  accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6421:6500  accStonePerShare = accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap4\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6150:6512  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      pop\n      pop\n    tag_309:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6593  user.amount.mul(accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_316\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6577:6581  user */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6577:6592  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6572  user.amount.mul(accStonePerShare).div(1e18) */\n      tag_317\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6567:6571  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6562  user.amount.mul(accStonePerShare) */\n      tag_318\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6545:6561  accStonePerShare */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6533  user */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6540  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6544  user.amount.mul */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6562  user.amount.mul(accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6566  user.amount.mul(accStonePerShare).div */\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6572  user.amount.mul(accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6576  user.amount.mul(accStonePerShare).div(1e18).sub */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6529:6593  user.amount.mul(accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_316:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6522:6593  return user.amount.mul(accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5824:6601  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_320\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2173:2174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2161  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2145:2218  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2262:2270  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2254:2260  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2290:2298  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2287  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2298  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3624:3625  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3620  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3625  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3627:3635  return 0 */\n      swap1\n      pop\n      jump(tag_329)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3654  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3662  a * b */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3662  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3689:3690  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3684:3685  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3681  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3685  c / a */\n      dup2\n      tag_331\n      jumpi\n      invalid\n    tag_331:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3745:3746  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3738:3746  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_329:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n    tag_182:\n        /* \"contracts/owner/Operator.sol\":1132:1133  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1108:1120  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/owner/Operator.sol\":1086:1207  require(\r... */\n      tag_335\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7\n      0x2d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"contracts/owner/Operator.sol\":1255:1267  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1251:1252  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      tag_336\n        /* \"contracts/owner/Operator.sol\":1305:1317  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1279:1304  Ownable.transferOwnership */\n      tag_143\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      jump\t// in\n    tag_336:\n        /* \"contracts/owner/Operator.sol\":1341:1353  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1329:1338  _operator */\n      0x02\n      0x00\n        /* \"contracts/owner/Operator.sol\":1329:1353  _operator = newOperator_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_339\n      jumpi\n      invalid\n    tag_339:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4348:4360  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10378:10743  function safePolyTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_195:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10454:10474  uint256 _PolyBalance */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10477:10481  Poly */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10477:10491  Poly.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10500:10504  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10477:10506  Poly.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_341:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_343:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10454:10506  uint256 _PolyBalance = Poly.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10536:10537  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10521:10533  _PolyBalance */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10521:10537  _PolyBalance > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10517:10736  if (_PolyBalance > 0) {\r... */\n      iszero\n      tag_345\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10568:10580  _PolyBalance */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10558:10565  _amount */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10558:10580  _amount > _PolyBalance */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10554:10725  if (_amount > _PolyBalance) {\r... */\n      iszero\n      tag_346\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10601:10637  Poly.safeTransfer(_to, _PolyBalance) */\n      tag_347\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10619:10622  _to */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10624:10636  _PolyBalance */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10601:10605  Poly */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10601:10618  Poly.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10601:10637  Poly.safeTransfer(_to, _PolyBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_347:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10554:10725  if (_amount > _PolyBalance) {\r... */\n      jump(tag_348)\n    tag_346:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10678:10709  Poly.safeTransfer(_to, _amount) */\n      tag_349\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10696:10699  _to */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10701:10708  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10678:10682  Poly */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10678:10695  Poly.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_199\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10678:10709  Poly.safeTransfer(_to, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_349:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10554:10725  if (_amount > _PolyBalance) {\r... */\n    tag_348:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10517:10736  if (_PolyBalance > 0) {\r... */\n    tag_345:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10378:10743  function safePolyTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":819:824  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":849:872  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":874:876  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":878:883  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":826:884  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:818  _callOptionalReturn */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2966:3227  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n    tag_254:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3034:3048  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3051:3059  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3051:3066  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3034:3066  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3082:3093  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3077:3220  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_354:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3105:3111  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3099:3102  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3099:3111  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3077:3220  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_355\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3166:3172  _token */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3143:3172  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3143:3151  poolInfo */\n      0x04\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3152:3155  pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3143:3156  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_357\n      jumpi\n      invalid\n    tag_357:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3143:3162  poolInfo[pid].token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3143:3172  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3135:3208  require(poolInfo[pid].token != _token, \"PolyGenesisPool: existing pool?\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_359:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3113:3118  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3077:3220  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_354)\n    tag_355:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2966:3227  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5601:5772  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5667  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5679:5688  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5700  add(a, m) */\n      tag_361\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5695:5696  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5698:5699  m */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5694  add */\n      tag_157\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5700  add(a, m) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5679:5700  uint256 c = add(a, m) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5710:5719  uint256 d */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5731  sub(c, 1) */\n      tag_362\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5726:5727  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5729:5730  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5725  sub */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5731  sub(c, 1) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5710:5731  uint256 d = sub(c, 1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5765  mul(div(d, m), m) */\n      tag_363\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5761  div(d, m) */\n      tag_364\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5756:5757  d */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5759:5760  m */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5755  div */\n      tag_192\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5761  div(d, m) */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5763:5764  m */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5751  mul */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5765  mul(div(d, m), m) */\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5741:5765  return mul(div(d, m), m) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5601:5772  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1018:1023  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1048:1075  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1081  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1083:1085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1087:1092  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1025:1093  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1017  _callOptionalReturn */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3422  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3453:3457  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3433:3438  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3452  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_369\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3494  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3528:3529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3518  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3525  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3529  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3648:3658  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3637:3667  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_371\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_371:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3629:3714  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3603:3615  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_374\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3656:3662  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3668  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3670:3671  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3673:3685  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3655  functionCallWithValue */\n      tag_375\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3627:3686  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4722:4734  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4779:4784  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4775  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4784  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4746:4827  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_377:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      tag_378\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4856:4862  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4855  isContract */\n      tag_379\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4897  require(isContract(target), \"Address: call to non-contract\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_380:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4909:4921  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4923:4946  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4961  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4974  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4980  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4981  target.call{value: value}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_381:\n      0x20\n      dup4\n      lt\n      tag_383\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_381)\n    tag_383:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_386\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_385)\n    tag_386:\n      0x60\n      swap2\n      pop\n    tag_385:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4908:4981  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      tag_387\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5015:5022  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5024:5034  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5036:5048  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5014  verifyCallResult */\n      tag_388\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4991:5049  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":787:791  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":990:1002  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1055:1062  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1043:1063  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1035:1063  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1096:1097  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1093  size */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1097  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1082:1097  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_388:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7316:7328  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7344:7351  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n      iszero\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7374:7384  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7384  return returndata */\n      swap1\n      pop\n      jump(tag_390)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7495  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7502  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7506  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7481:7846  if (returndata.length > 0) {... */\n      iszero\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7679:7689  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7673:7690  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7739:7754  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7726:7736  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7724  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7718:7737  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7711:7755  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7628:7773  {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7818:7830  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7811:7831  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_395:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_397\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_395)\n    tag_397:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_398\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_398:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_390:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7 6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb 6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa2646970667358221220b899f0de0da8d17c46eba4c7c40ee592613436512f68e6dd258d373718af5e1064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000600560006101000a81548160ff0219169083151502179055506000600755670201fdfcf45d940c600a556202a300600b553480156200004457600080fd5b50600062000057620001c860201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35062000105620001c860201b60201c565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a3620001d0565b600033905090565b61316680620001e06000396000f3fe6080604052600436106101bb5760003560e01c80635f96dc11116100ec57806396805e541161008a578063e177bb3811610064578063e177bb3814610875578063e2bbb158146108b6578063ecf4deb9146108fb578063f2fde38b1461096a576101bc565b806396805e5414610758578063b3ab15fb146107c9578063cd6dc6871461081a576101bc565b8063715018a6116100c6578063715018a61461065f5780638da5cb5b1461067657806393f1a40b146106b7578063943f013d1461072d576101bc565b80635f96dc11146105f2578063630b5ba11461061d5780636e271dd514610634576101bc565b80633f7caf521161015957806351eb05a61161013357806351eb05a6146104c05780635312ea8e146104fb57806354575af414610536578063570ca735146105b1576101bc565b80633f7caf5214610423578063441a3e701461044e5780634456eda214610493576101bc565b80631ab06ee5116101955780631ab06ee514610307578063231f0c6a1461034c57806329605e77146103a5578063392e53cd146103f6576101bc565b806309cf60911461022e5780631526fe271461025957806317caf6f1146102dc576101bc565b5b60006101c66109bb565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561020257600080fd5b60405136600082376000803683855af43d82016040523d6000833e806000811461022a573d83f35b3d83fd5b34801561023a57600080fd5b506102436109e5565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b506102926004803603602081101561027c57600080fd5b81019080803590602001909291905050506109f3565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b3480156102e857600080fd5b506102f1610a66565b6040518082815260200191505060405180910390f35b34801561031357600080fd5b5061034a6004803603604081101561032a57600080fd5b810190808035906020019092919080359060200190929190505050610a6c565b005b34801561035857600080fd5b5061038f6004803603604081101561036f57600080fd5b810190808035906020019092919080359060200190929190505050610b90565b6040518082815260200191505060405180910390f35b3480156103b157600080fd5b506103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca3565b005b34801561040257600080fd5b5061040b610d5e565b60405180821515815260200191505060405180910390f35b34801561042f57600080fd5b50610438610d75565b6040518082815260200191505060405180910390f35b34801561045a57600080fd5b506104916004803603604081101561047157600080fd5b810190808035906020019092919080359060200190929190505050610d7b565b005b34801561049f57600080fd5b506104a8611033565b60405180821515815260200191505060405180910390f35b3480156104cc57600080fd5b506104f9600480360360208110156104e357600080fd5b8101908080359060200190929190505050611092565b005b34801561050757600080fd5b506105346004803603602081101561051e57600080fd5b81019080803590602001909291905050506112a1565b005b34801561054257600080fd5b506105af6004803603606081101561055957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113d5565b005b3480156105bd57600080fd5b506105c6611687565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105fe57600080fd5b506106076116b1565b6040518082815260200191505060405180910390f35b34801561062957600080fd5b506106326116b7565b005b34801561064057600080fd5b506106496116e4565b6040518082815260200191505060405180910390f35b34801561066b57600080fd5b506106746116ea565b005b34801561068257600080fd5b5061068b611857565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106c357600080fd5b50610710600480360360408110156106da57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611880565b604051808381526020018281526020019250505060405180910390f35b34801561073957600080fd5b506107426118b1565b6040518082815260200191505060405180910390f35b34801561076457600080fd5b506107c76004803603608081101561077b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190803590602001909291905050506118b7565b005b3480156107d557600080fd5b50610818600480360360208110156107ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611af0565b005b34801561082657600080fd5b506108736004803603604081101561083d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ba2565b005b34801561088157600080fd5b5061088a611de9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108c257600080fd5b506108f9600480360360408110156108d957600080fd5b810190808035906020019092919080359060200190929190505050611e0f565b005b34801561090757600080fd5b506109546004803603604081101561091e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061211e565b6040518082815260200191505060405180910390f35b34801561097657600080fd5b506109b96004803603602081101561098d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612356565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b69054b40b1f852bda0000081565b60048181548110610a0357600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60075481565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b610b1a6116b7565b600060048381548110610b2957fe5b906000526020600020906005020190508060040160009054906101000a900460ff1615610b8257610b7b82610b6d836001015460075461254890919063ffffffff16565b6125cb90919063ffffffff16565b6007819055505b818160010181905550505050565b6000818310610ba25760009050610c9d565b6009548210610c28576009548310610bbd5760009050610c9d565b6008548311610bf857610bf1600a54610be360085460095461254890919063ffffffff16565b61265390919063ffffffff16565b9050610c9d565b610c21600a54610c138560095461254890919063ffffffff16565b61265390919063ffffffff16565b9050610c9d565b6008548211610c3a5760009050610c9d565b6008548311610c7357610c6c600a54610c5e6008548561254890919063ffffffff16565b61265390919063ffffffff16565b9050610c9d565b610c9a600a54610c8c858561254890919063ffffffff16565b61265390919063ffffffff16565b90505b92915050565b610cab6126d9565b73ffffffffffffffffffffffffffffffffffffffff16610cc9611857565b73ffffffffffffffffffffffffffffffffffffffff1614610d52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d5b816126e1565b50565b6000600560009054906101000a900460ff16905090565b600a5481565b6000339050600060048481548110610d8f57fe5b9060005260206000209060050201905060006006600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610e6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610e7685611092565b6000610ec38260010154610eb5670de0b6b3a7640000610ea78760030154876000015461265390919063ffffffff16565b61280f90919063ffffffff16565b61254890919063ffffffff16565b90506000811115610f2757610ed88482612898565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610f9f57610f4785836000015461254890919063ffffffff16565b8260000181905550610f9e84868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b5b610fd4670de0b6b3a7640000610fc68560030154856000015461265390919063ffffffff16565b61280f90919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110766126d9565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600482815481106110a157fe5b90600052602060002090600502019050806002015442116110c2575061129e565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561114f57600080fd5b505afa158015611163573d6000803e3d6000fd5b505050506040513d602081101561117957600080fd5b8101908080519060200190929190505050905060008114156111a557428260020181905550505061129e565b8160040160009054906101000a900460ff166111f85760018260040160006101000a81548160ff0219169083151502179055506111f182600101546007546125cb90919063ffffffff16565b6007819055505b60006007541115611292576000611213836002015442610b90565b9050600061124260075461123486600101548561265390919063ffffffff16565b61280f90919063ffffffff16565b905061128761127484611266670de0b6b3a76400008561265390919063ffffffff16565b61280f90919063ffffffff16565b85600301546125cb90919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b6000600482815481106112b057fe5b9060005260206000209060050201905060006006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061138033828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461147b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b6276a7006009540142101561165757600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561154e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f506f6c790000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600480549050905060005b818110156116545760006004828154811061157257fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415611648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5080600101905061155b565b50505b61168281838573ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60085481565b6000600480549050905060005b818110156116e0576116d581611092565b8060010190506116c4565b5050565b60095481565b6116f26126d9565b73ffffffffffffffffffffffffffffffffffffffff16611710611857565b73ffffffffffffffffffffffffffffffffffffffff1614611799576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6006602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600b5481565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461195d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b61196683612ab9565b8115611975576119746116b7565b5b6008544210156119a85760008114156119925760085490506119a3565b6008548110156119a25760085490505b5b6119c0565b60008114806119b657504281105b156119bf574290505b5b6000600854821115806119d35750428211155b905060046040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555050508015611ae957611ae2856007546125cb90919063ffffffff16565b6007819055505b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b611b9f81610ca3565b50565b600560009054906101000a900460ff1615611c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f47656e657369733a20616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ccb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b804210611d40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611db65781600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600881905550600b54600854016009819055506001600560006101000a81548160ff0219169083151502179055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003390506000611e2a60c884612bbe90919063ffffffff16565b90506000611e56612710611e4860c88561265390919063ffffffff16565b61280f90919063ffffffff16565b90506000611e6d828661254890919063ffffffff16565b9050600060048781548110611e7e57fe5b9060005260206000209060050201905060006006600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611eeb88611092565b600081600001541115611fab576000611f458260010154611f37670de0b6b3a7640000611f298760030154876000015461265390919063ffffffff16565b61280f90919063ffffffff16565b61254890919063ffffffff16565b90506000811115611fa957611f5a8782612898565b8673ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000871115612088576120058630898560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612bf9909392919063ffffffff16565b61201c8382600001546125cb90919063ffffffff16565b81600001819055506120877301fc7f2c81acd9d38ed4d509b1f17555e549ef1d858460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b5b6120bd670de0b6b3a76400006120af8460030154846000015461265390919063ffffffff16565b61280f90919063ffffffff16565b8160010181905550878673ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15896040518082815260200191505060405180910390a35050505050505050565b6000806004848154811061212e57fe5b9060005260206000209060050201905060006006600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561222857600080fd5b505afa15801561223c573d6000803e3d6000fd5b505050506040513d602081101561225257600080fd5b81019080805190602001909291905050509050836002015442118015612279575060008114155b1561230357600061228e856002015442610b90565b905060006122bd6007546122af88600101548561265390919063ffffffff16565b61280f90919063ffffffff16565b90506122fe6122ef846122e1670de0b6b3a76400008561265390919063ffffffff16565b61280f90919063ffffffff16565b856125cb90919063ffffffff16565b935050505b61234a836001015461233c670de0b6b3a764000061232e86886000015461265390919063ffffffff16565b61280f90919063ffffffff16565b61254890919063ffffffff16565b94505050505092915050565b61235e6126d9565b73ffffffffffffffffffffffffffffffffffffffff1661237c611857565b73ffffffffffffffffffffffffffffffffffffffff1614612405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561248b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806130496026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211156125c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015612649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561266657600090506126d3565b600082840290508284828161267757fe5b04146126ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806130c26021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180613095602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36127cb81612356565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808211612886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161288f57fe5b04905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561292357600080fd5b505afa158015612937573d6000803e3d6000fd5b505050506040513d602081101561294d57600080fd5b810190808051906020019092919050505090506000811115612a1257808211156129c3576129be8382600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b612a11565b612a108383600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b5b5b505050565b612ab48363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cba565b505050565b6000600480549050905060005b81811015612bb9578273ffffffffffffffffffffffffffffffffffffffff1660048281548110612af257fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612bae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f0081525060200191505060405180910390fd5b806001019050612ac6565b505050565b600080612bcb84846125cb565b90506000612bda826001612548565b9050612bef612be9828661280f565b85612653565b9250505092915050565b612cb4846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cba565b50505050565b6000612d1c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612da99092919063ffffffff16565b9050600081511115612da457808060200190516020811015612d3d57600080fd5b8101908080519060200190929190505050612da3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613107602a913960400191505060405180910390fd5b5b505050565b6060612db88484600085612dc1565b90509392505050565b606082471015612e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061306f6026913960400191505060405180910390fd5b612e2585612f69565b612e97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612ee65780518252602082019150602081019050602083039250612ec3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612f48576040519150601f19603f3d011682016040523d82523d6000602084013e612f4d565b606091505b5091509150612f5d828286612f7c565b92505050949350505050565b600080823b905060008111915050919050565b60608315612f8c57829050613041565b600083511115612f9f5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613006578082015181840152602081019050612feb565b50505050905090810190601f1680156130335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220b899f0de0da8d17c46eba4c7c40ee592613436512f68e6dd258d373718af5e1064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 SSTORE PUSH8 0x201FDFCF45D940C PUSH1 0xA SSTORE PUSH3 0x2A300 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x57 PUSH3 0x1C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x105 PUSH3 0x1C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x1D0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3166 DUP1 PUSH3 0x1E0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE177BB38 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE177BB38 EQ PUSH2 0x875 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x8B6 JUMPI DUP1 PUSH4 0xECF4DEB9 EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x96A JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x96805E54 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x7C9 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x81A JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x72D JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x634 JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x3F7CAF52 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x5B1 JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x3F7CAF52 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x493 JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x1AB06EE5 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x3F6 JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2DC JUMPI PUSH2 0x1BC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C6 PUSH2 0x9BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22A JUMPI RETURNDATASIZE DUP4 RETURN JUMPDEST RETURNDATASIZE DUP4 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A8 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1092 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C6 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x607 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH2 0x16B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x649 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x674 PUSH2 0x16EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x710 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x742 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x818 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x873 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BA2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88A PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E0F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x954 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x211E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2356 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x54B40B1F852BDA00000 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1A PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB29 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB82 JUMPI PUSH2 0xB7B DUP3 PUSH2 0xB6D DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xBA2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 LT PUSH2 0xC28 JUMPI PUSH1 0x9 SLOAD DUP4 LT PUSH2 0xBBD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT PUSH2 0xBF8 JUMPI PUSH2 0xBF1 PUSH1 0xA SLOAD PUSH2 0xBE3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH2 0xC21 PUSH1 0xA SLOAD PUSH2 0xC13 DUP6 PUSH1 0x9 SLOAD PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 GT PUSH2 0xC3A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT PUSH2 0xC73 JUMPI PUSH2 0xC6C PUSH1 0xA SLOAD PUSH2 0xC5E PUSH1 0x8 SLOAD DUP6 PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH2 0xC9A PUSH1 0xA SLOAD PUSH2 0xC8C DUP6 DUP6 PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAB PUSH2 0x26D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC9 PUSH2 0x1857 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0x26E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD8F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xE6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE76 DUP6 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xEB5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xEA7 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xF27 JUMPI PUSH2 0xED8 DUP5 DUP3 PUSH2 0x2898 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xF9F JUMPI PUSH2 0xF47 DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF9E DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xFD4 PUSH8 0xDE0B6B3A7640000 PUSH2 0xFC6 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1076 PUSH2 0x26D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10A1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x10C2 JUMPI POP PUSH2 0x129E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1163 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x11A5 JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x129E JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11F8 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11F1 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT ISZERO PUSH2 0x1292 JUMPI PUSH1 0x0 PUSH2 0x1213 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1242 PUSH1 0x7 SLOAD PUSH2 0x1234 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1287 PUSH2 0x1274 DUP5 PUSH2 0x1266 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12B0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1380 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x9 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x1657 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1572 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1648 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x155B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1682 DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x16D5 DUP2 PUSH2 0x1092 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x16C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16F2 PUSH2 0x26D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1710 PUSH2 0x1857 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1966 DUP4 PUSH2 0x2AB9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1975 JUMPI PUSH2 0x1974 PUSH2 0x16B7 JUMP JUMPDEST JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x19A8 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1992 JUMPI PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x19A2 JUMPI PUSH1 0x8 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x19B6 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x19BF JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x19D3 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE2 DUP6 PUSH1 0x7 SLOAD PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B9F DUP2 PUSH2 0xCA3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x47656E657369733A20616C726561647920696E697469616C697A656400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT PUSH2 0x1D40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DB6 JUMPI DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0x8 SLOAD ADD PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x1E2A PUSH1 0xC8 DUP5 PUSH2 0x2BBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E56 PUSH2 0x2710 PUSH2 0x1E48 PUSH1 0xC8 DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E6D DUP3 DUP7 PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1E7E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1EEB DUP9 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1FAB JUMPI PUSH1 0x0 PUSH2 0x1F45 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1F37 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1F29 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1FA9 JUMPI PUSH2 0x1F5A DUP8 DUP3 PUSH2 0x2898 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP8 GT ISZERO PUSH2 0x2088 JUMPI PUSH2 0x2005 DUP7 ADDRESS DUP10 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2BF9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x201C DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2087 PUSH20 0x1FC7F2C81ACD9D38ED4D509B1F17555E549EF1D DUP6 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x20BD PUSH8 0xDE0B6B3A7640000 PUSH2 0x20AF DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP8 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP10 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x212E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x223C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x2279 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2303 JUMPI PUSH1 0x0 PUSH2 0x228E DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22BD PUSH1 0x7 SLOAD PUSH2 0x22AF DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x22FE PUSH2 0x22EF DUP5 PUSH2 0x22E1 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x234A DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x233C PUSH8 0xDE0B6B3A7640000 PUSH2 0x232E DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x235E PUSH2 0x26D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x237C PUSH2 0x1857 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x248B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3049 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x25C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2666 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2677 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x26CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30C2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3095 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x27CB DUP2 PUSH2 0x2356 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2886 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x288F JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2937 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x294D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2A12 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x29C3 JUMPI PUSH2 0x29BE DUP4 DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0x2A10 DUP4 DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2AB4 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CBA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BB9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2AF2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2BAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2AC6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2BCB DUP5 DUP5 PUSH2 0x25CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BDA DUP3 PUSH1 0x1 PUSH2 0x2548 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BEF PUSH2 0x2BE9 DUP3 DUP7 PUSH2 0x280F JUMP JUMPDEST DUP6 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CB4 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CBA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2DA4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2DA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3107 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DB8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2DC1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2E1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x306F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E25 DUP6 PUSH2 0x2F69 JUMP JUMPDEST PUSH2 0x2E97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2EE6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F4D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F5D DUP3 DUP3 DUP7 PUSH2 0x2F7C JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2F8C JUMPI DUP3 SWAP1 POP PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2F9F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3006 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FEB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3033 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220B899F0DE 0xD 0xA8 0xD1 PUSH29 0x46EBA4C7C40EE592613436512F68E6DD258D373718AF5E1064736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "464:11016:6:-:0;;;1347:5;1320:32;;;;;;;;;;;;;;;;;;;;1604:1;1571:34;;1815:24;1784:55;;1911:6;1882:35;;464:11016;;;;;;;;;;938:17:0;958:12;:10;;;:12;;:::i;:::-;938:32;;989:9;980:6;;:18;;;;;;;;;;;;;;;;;;1046:9;1013:43;;1042:1;1013:43;;;;;;;;;;;;904:159;435:12:7;:10;;;:12;;:::i;:::-;423:9;;:24;;;;;;;;;;;;;;;;;;495:9;;;;;;;;;;;463:42;;491:1;463:42;;;;;;;;;;;;464:11016:6;;596:96:4;649:7;675:10;668:17;;596:96;:::o;464:11016:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101bb5760003560e01c80635f96dc11116100ec57806396805e541161008a578063e177bb3811610064578063e177bb3814610875578063e2bbb158146108b6578063ecf4deb9146108fb578063f2fde38b1461096a576101bc565b806396805e5414610758578063b3ab15fb146107c9578063cd6dc6871461081a576101bc565b8063715018a6116100c6578063715018a61461065f5780638da5cb5b1461067657806393f1a40b146106b7578063943f013d1461072d576101bc565b80635f96dc11146105f2578063630b5ba11461061d5780636e271dd514610634576101bc565b80633f7caf521161015957806351eb05a61161013357806351eb05a6146104c05780635312ea8e146104fb57806354575af414610536578063570ca735146105b1576101bc565b80633f7caf5214610423578063441a3e701461044e5780634456eda214610493576101bc565b80631ab06ee5116101955780631ab06ee514610307578063231f0c6a1461034c57806329605e77146103a5578063392e53cd146103f6576101bc565b806309cf60911461022e5780631526fe271461025957806317caf6f1146102dc576101bc565b5b60006101c66109bb565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561020257600080fd5b60405136600082376000803683855af43d82016040523d6000833e806000811461022a573d83f35b3d83fd5b34801561023a57600080fd5b506102436109e5565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b506102926004803603602081101561027c57600080fd5b81019080803590602001909291905050506109f3565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b3480156102e857600080fd5b506102f1610a66565b6040518082815260200191505060405180910390f35b34801561031357600080fd5b5061034a6004803603604081101561032a57600080fd5b810190808035906020019092919080359060200190929190505050610a6c565b005b34801561035857600080fd5b5061038f6004803603604081101561036f57600080fd5b810190808035906020019092919080359060200190929190505050610b90565b6040518082815260200191505060405180910390f35b3480156103b157600080fd5b506103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca3565b005b34801561040257600080fd5b5061040b610d5e565b60405180821515815260200191505060405180910390f35b34801561042f57600080fd5b50610438610d75565b6040518082815260200191505060405180910390f35b34801561045a57600080fd5b506104916004803603604081101561047157600080fd5b810190808035906020019092919080359060200190929190505050610d7b565b005b34801561049f57600080fd5b506104a8611033565b60405180821515815260200191505060405180910390f35b3480156104cc57600080fd5b506104f9600480360360208110156104e357600080fd5b8101908080359060200190929190505050611092565b005b34801561050757600080fd5b506105346004803603602081101561051e57600080fd5b81019080803590602001909291905050506112a1565b005b34801561054257600080fd5b506105af6004803603606081101561055957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113d5565b005b3480156105bd57600080fd5b506105c6611687565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105fe57600080fd5b506106076116b1565b6040518082815260200191505060405180910390f35b34801561062957600080fd5b506106326116b7565b005b34801561064057600080fd5b506106496116e4565b6040518082815260200191505060405180910390f35b34801561066b57600080fd5b506106746116ea565b005b34801561068257600080fd5b5061068b611857565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106c357600080fd5b50610710600480360360408110156106da57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611880565b604051808381526020018281526020019250505060405180910390f35b34801561073957600080fd5b506107426118b1565b6040518082815260200191505060405180910390f35b34801561076457600080fd5b506107c76004803603608081101561077b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190803590602001909291905050506118b7565b005b3480156107d557600080fd5b50610818600480360360208110156107ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611af0565b005b34801561082657600080fd5b506108736004803603604081101561083d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ba2565b005b34801561088157600080fd5b5061088a611de9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108c257600080fd5b506108f9600480360360408110156108d957600080fd5b810190808035906020019092919080359060200190929190505050611e0f565b005b34801561090757600080fd5b506109546004803603604081101561091e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061211e565b6040518082815260200191505060405180910390f35b34801561097657600080fd5b506109b96004803603602081101561098d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612356565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b69054b40b1f852bda0000081565b60048181548110610a0357600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60075481565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b610b1a6116b7565b600060048381548110610b2957fe5b906000526020600020906005020190508060040160009054906101000a900460ff1615610b8257610b7b82610b6d836001015460075461254890919063ffffffff16565b6125cb90919063ffffffff16565b6007819055505b818160010181905550505050565b6000818310610ba25760009050610c9d565b6009548210610c28576009548310610bbd5760009050610c9d565b6008548311610bf857610bf1600a54610be360085460095461254890919063ffffffff16565b61265390919063ffffffff16565b9050610c9d565b610c21600a54610c138560095461254890919063ffffffff16565b61265390919063ffffffff16565b9050610c9d565b6008548211610c3a5760009050610c9d565b6008548311610c7357610c6c600a54610c5e6008548561254890919063ffffffff16565b61265390919063ffffffff16565b9050610c9d565b610c9a600a54610c8c858561254890919063ffffffff16565b61265390919063ffffffff16565b90505b92915050565b610cab6126d9565b73ffffffffffffffffffffffffffffffffffffffff16610cc9611857565b73ffffffffffffffffffffffffffffffffffffffff1614610d52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d5b816126e1565b50565b6000600560009054906101000a900460ff16905090565b600a5481565b6000339050600060048481548110610d8f57fe5b9060005260206000209060050201905060006006600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610e6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610e7685611092565b6000610ec38260010154610eb5670de0b6b3a7640000610ea78760030154876000015461265390919063ffffffff16565b61280f90919063ffffffff16565b61254890919063ffffffff16565b90506000811115610f2757610ed88482612898565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610f9f57610f4785836000015461254890919063ffffffff16565b8260000181905550610f9e84868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b5b610fd4670de0b6b3a7640000610fc68560030154856000015461265390919063ffffffff16565b61280f90919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110766126d9565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600482815481106110a157fe5b90600052602060002090600502019050806002015442116110c2575061129e565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561114f57600080fd5b505afa158015611163573d6000803e3d6000fd5b505050506040513d602081101561117957600080fd5b8101908080519060200190929190505050905060008114156111a557428260020181905550505061129e565b8160040160009054906101000a900460ff166111f85760018260040160006101000a81548160ff0219169083151502179055506111f182600101546007546125cb90919063ffffffff16565b6007819055505b60006007541115611292576000611213836002015442610b90565b9050600061124260075461123486600101548561265390919063ffffffff16565b61280f90919063ffffffff16565b905061128761127484611266670de0b6b3a76400008561265390919063ffffffff16565b61280f90919063ffffffff16565b85600301546125cb90919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b6000600482815481106112b057fe5b9060005260206000209060050201905060006006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061138033828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461147b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b6276a7006009540142101561165757600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561154e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f506f6c790000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600480549050905060005b818110156116545760006004828154811061157257fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415611648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5080600101905061155b565b50505b61168281838573ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60085481565b6000600480549050905060005b818110156116e0576116d581611092565b8060010190506116c4565b5050565b60095481565b6116f26126d9565b73ffffffffffffffffffffffffffffffffffffffff16611710611857565b73ffffffffffffffffffffffffffffffffffffffff1614611799576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6006602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600b5481565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461195d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b61196683612ab9565b8115611975576119746116b7565b5b6008544210156119a85760008114156119925760085490506119a3565b6008548110156119a25760085490505b5b6119c0565b60008114806119b657504281105b156119bf574290505b5b6000600854821115806119d35750428211155b905060046040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555050508015611ae957611ae2856007546125cb90919063ffffffff16565b6007819055505b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b611b9f81610ca3565b50565b600560009054906101000a900460ff1615611c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f47656e657369733a20616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ccb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130e36024913960400191505060405180910390fd5b804210611d40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611db65781600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600881905550600b54600854016009819055506001600560006101000a81548160ff0219169083151502179055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003390506000611e2a60c884612bbe90919063ffffffff16565b90506000611e56612710611e4860c88561265390919063ffffffff16565b61280f90919063ffffffff16565b90506000611e6d828661254890919063ffffffff16565b9050600060048781548110611e7e57fe5b9060005260206000209060050201905060006006600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611eeb88611092565b600081600001541115611fab576000611f458260010154611f37670de0b6b3a7640000611f298760030154876000015461265390919063ffffffff16565b61280f90919063ffffffff16565b61254890919063ffffffff16565b90506000811115611fa957611f5a8782612898565b8673ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000871115612088576120058630898560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612bf9909392919063ffffffff16565b61201c8382600001546125cb90919063ffffffff16565b81600001819055506120877301fc7f2c81acd9d38ed4d509b1f17555e549ef1d858460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b5b6120bd670de0b6b3a76400006120af8460030154846000015461265390919063ffffffff16565b61280f90919063ffffffff16565b8160010181905550878673ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15896040518082815260200191505060405180910390a35050505050505050565b6000806004848154811061212e57fe5b9060005260206000209060050201905060006006600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561222857600080fd5b505afa15801561223c573d6000803e3d6000fd5b505050506040513d602081101561225257600080fd5b81019080805190602001909291905050509050836002015442118015612279575060008114155b1561230357600061228e856002015442610b90565b905060006122bd6007546122af88600101548561265390919063ffffffff16565b61280f90919063ffffffff16565b90506122fe6122ef846122e1670de0b6b3a76400008561265390919063ffffffff16565b61280f90919063ffffffff16565b856125cb90919063ffffffff16565b935050505b61234a836001015461233c670de0b6b3a764000061232e86886000015461265390919063ffffffff16565b61280f90919063ffffffff16565b61254890919063ffffffff16565b94505050505092915050565b61235e6126d9565b73ffffffffffffffffffffffffffffffffffffffff1661237c611857565b73ffffffffffffffffffffffffffffffffffffffff1614612405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561248b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806130496026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211156125c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015612649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561266657600090506126d3565b600082840290508284828161267757fe5b04146126ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806130c26021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180613095602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36127cb81612356565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808211612886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161288f57fe5b04905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561292357600080fd5b505afa158015612937573d6000803e3d6000fd5b505050506040513d602081101561294d57600080fd5b810190808051906020019092919050505090506000811115612a1257808211156129c3576129be8382600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b612a11565b612a108383600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a179092919063ffffffff16565b5b5b505050565b612ab48363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cba565b505050565b6000600480549050905060005b81811015612bb9578273ffffffffffffffffffffffffffffffffffffffff1660048281548110612af257fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612bae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f0081525060200191505060405180910390fd5b806001019050612ac6565b505050565b600080612bcb84846125cb565b90506000612bda826001612548565b9050612bef612be9828661280f565b85612653565b9250505092915050565b612cb4846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cba565b50505050565b6000612d1c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612da99092919063ffffffff16565b9050600081511115612da457808060200190516020811015612d3d57600080fd5b8101908080519060200190929190505050612da3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613107602a913960400191505060405180910390fd5b5b505050565b6060612db88484600085612dc1565b90509392505050565b606082471015612e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061306f6026913960400191505060405180910390fd5b612e2585612f69565b612e97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612ee65780518252602082019150602081019050602083039250612ec3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612f48576040519150601f19603f3d011682016040523d82523d6000602084013e612f4d565b606091505b5091509150612f5d828286612f7c565b92505050949350505050565b600080823b905060008111915050919050565b60608315612f8c57829050613041565b600083511115612f9f5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613006578082015181840152602081019050612feb565b50505050905090810190601f1680156130335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220b899f0de0da8d17c46eba4c7c40ee592613436512f68e6dd258d373718af5e1064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE177BB38 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE177BB38 EQ PUSH2 0x875 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x8B6 JUMPI DUP1 PUSH4 0xECF4DEB9 EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x96A JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x96805E54 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x7C9 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x81A JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x72D JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x634 JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x3F7CAF52 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x5B1 JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x3F7CAF52 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x493 JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x1AB06EE5 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x3F6 JUMPI PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2DC JUMPI PUSH2 0x1BC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C6 PUSH2 0x9BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22A JUMPI RETURNDATASIZE DUP4 RETURN JUMPDEST RETURNDATASIZE DUP4 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A8 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1092 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C6 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x607 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH2 0x16B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x649 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x674 PUSH2 0x16EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x710 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x742 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x818 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x873 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BA2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88A PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E0F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x954 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x211E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2356 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x54B40B1F852BDA00000 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1A PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB29 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB82 JUMPI PUSH2 0xB7B DUP3 PUSH2 0xB6D DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xBA2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 LT PUSH2 0xC28 JUMPI PUSH1 0x9 SLOAD DUP4 LT PUSH2 0xBBD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT PUSH2 0xBF8 JUMPI PUSH2 0xBF1 PUSH1 0xA SLOAD PUSH2 0xBE3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH2 0xC21 PUSH1 0xA SLOAD PUSH2 0xC13 DUP6 PUSH1 0x9 SLOAD PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 GT PUSH2 0xC3A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT PUSH2 0xC73 JUMPI PUSH2 0xC6C PUSH1 0xA SLOAD PUSH2 0xC5E PUSH1 0x8 SLOAD DUP6 PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9D JUMP JUMPDEST PUSH2 0xC9A PUSH1 0xA SLOAD PUSH2 0xC8C DUP6 DUP6 PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAB PUSH2 0x26D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC9 PUSH2 0x1857 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0x26E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD8F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xE6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE76 DUP6 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xEB5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xEA7 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xF27 JUMPI PUSH2 0xED8 DUP5 DUP3 PUSH2 0x2898 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xF9F JUMPI PUSH2 0xF47 DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF9E DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xFD4 PUSH8 0xDE0B6B3A7640000 PUSH2 0xFC6 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1076 PUSH2 0x26D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10A1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x10C2 JUMPI POP PUSH2 0x129E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1163 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x11A5 JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x129E JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11F8 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11F1 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT ISZERO PUSH2 0x1292 JUMPI PUSH1 0x0 PUSH2 0x1213 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1242 PUSH1 0x7 SLOAD PUSH2 0x1234 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1287 PUSH2 0x1274 DUP5 PUSH2 0x1266 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12B0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1380 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x9 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x1657 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1572 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1648 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x155B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1682 DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x16D5 DUP2 PUSH2 0x1092 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x16C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16F2 PUSH2 0x26D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1710 PUSH2 0x1857 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1966 DUP4 PUSH2 0x2AB9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1975 JUMPI PUSH2 0x1974 PUSH2 0x16B7 JUMP JUMPDEST JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x19A8 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1992 JUMPI PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x19A2 JUMPI PUSH1 0x8 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x19C0 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x19B6 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x19BF JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x19D3 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE2 DUP6 PUSH1 0x7 SLOAD PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B9F DUP2 PUSH2 0xCA3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x47656E657369733A20616C726561647920696E697469616C697A656400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30E3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT PUSH2 0x1D40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DB6 JUMPI DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0x8 SLOAD ADD PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x1E2A PUSH1 0xC8 DUP5 PUSH2 0x2BBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E56 PUSH2 0x2710 PUSH2 0x1E48 PUSH1 0xC8 DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E6D DUP3 DUP7 PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1E7E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1EEB DUP9 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1FAB JUMPI PUSH1 0x0 PUSH2 0x1F45 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1F37 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1F29 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1FA9 JUMPI PUSH2 0x1F5A DUP8 DUP3 PUSH2 0x2898 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP8 GT ISZERO PUSH2 0x2088 JUMPI PUSH2 0x2005 DUP7 ADDRESS DUP10 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2BF9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x201C DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2087 PUSH20 0x1FC7F2C81ACD9D38ED4D509B1F17555E549EF1D DUP6 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x20BD PUSH8 0xDE0B6B3A7640000 PUSH2 0x20AF DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP8 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP10 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x212E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x223C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x2279 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2303 JUMPI PUSH1 0x0 PUSH2 0x228E DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22BD PUSH1 0x7 SLOAD PUSH2 0x22AF DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x22FE PUSH2 0x22EF DUP5 PUSH2 0x22E1 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x25CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x234A DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x233C PUSH8 0xDE0B6B3A7640000 PUSH2 0x232E DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2653 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x280F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2548 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x235E PUSH2 0x26D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x237C PUSH2 0x1857 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x248B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3049 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x25C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2666 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2677 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x26CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30C2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3095 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x27CB DUP2 PUSH2 0x2356 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2886 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x288F JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2937 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x294D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2A12 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x29C3 JUMPI PUSH2 0x29BE DUP4 DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0x2A10 DUP4 DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2AB4 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CBA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BB9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2AF2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2BAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2AC6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2BCB DUP5 DUP5 PUSH2 0x25CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BDA DUP3 PUSH1 0x1 PUSH2 0x2548 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BEF PUSH2 0x2BE9 DUP3 DUP7 PUSH2 0x280F JUMP JUMPDEST DUP6 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CB4 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CBA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2DA4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2DA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3107 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DB8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2DC1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2E1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x306F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E25 DUP6 PUSH2 0x2F69 JUMP JUMPDEST PUSH2 0x2E97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2EE6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F4D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F5D DUP3 DUP3 DUP7 PUSH2 0x2F7C JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2F8C JUMPI DUP3 SWAP1 POP PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2F9F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3006 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FEB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3033 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220B899F0DE 0xD 0xA8 0xD1 PUSH29 0x46EBA4C7C40EE592613436512F68E6DD258D373718AF5E1064736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "464:11016:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:13:0;2745:11;:9;:11::i;:::-;2729:27;;2791:1;2774:19;;:5;:19;;;;2766:28;;;;;;2844:4;2838:11;2883:14;2880:1;2875:3;2862:36;2976:1;2973;2957:14;2952:3;2945:5;2938;2925:53;3013:16;3008:3;3004:26;2998:4;2991:40;3067:16;3064:1;3059:3;3044:40;3104:6;3128:1;3123:68;;;;3242:16;3237:3;3230:29;3123:68;3160:16;3155:3;3148:29;1934:51:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1271:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1571:34;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4678:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5108:653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;894:115:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2493:89:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1784:55;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9004:812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;786:100:7;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6940:910:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9887:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10873:604;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;521:85:7;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1656:28:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6684:180;;;;;;;;;;;;;:::i;:::-;;1733:26;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1771:145:0;;;;;;;;;;;;;:::i;:::-;;1139:85;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1410:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1882:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3305:1277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10751:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2590:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1217:18;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7887:1081;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5824:777;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2065:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3438:95;3490:7;3516:10;;;;;;;;;;;3509:17;;3438:95;:::o;1934:51:6:-;1974:11;1934:51;:::o;1271:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1571:34::-;;;;:::o;4678:353::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4757:17:6::1;:15;:17::i;:::-;4785:21;4809:8;4818:4;4809:14;;;;;;;;;;;;;;;;;;4785:38;;4838:4;:14;;;;;;;;;;;;4834:150;;;4887:85;4946:11;4887:36;4907:4;:15;;;4887;;:19;;:36;;;;:::i;:::-;:40;;:85;;;;:::i;:::-;4869:15;:103;;;;4834:150;5012:11;4994:4;:15;;:29;;;;769:1:7;4678:353:6::0;;:::o;5108:653::-;5193:7;5230;5217:9;:20;5213:34;;5246:1;5239:8;;;;5213:34;5273:11;;5262:7;:22;5258:496;;5318:11;;5305:9;:24;5301:38;;5338:1;5331:8;;;;5301:38;5371:13;;5358:9;:26;5354:88;;5393:49;5428:13;;5393:30;5409:13;;5393:11;;:15;;:30;;;;:::i;:::-;:34;;:49;;;;:::i;:::-;5386:56;;;;5354:88;5464:45;5495:13;;5464:26;5480:9;5464:11;;:15;;:26;;;;:::i;:::-;:30;;:45;;;;:::i;:::-;5457:52;;;;5258:496;5557:13;;5546:7;:24;5542:38;;5579:1;5572:8;;;;5542:38;5612:13;;5599:9;:26;5595:84;;5634:45;5665:13;;5634:26;5646:13;;5634:7;:11;;:26;;;;:::i;:::-;:30;;:45;;;;:::i;:::-;5627:52;;;;5595:84;5701:41;5728:13;;5701:22;5713:9;5701:7;:11;;:22;;;;:::i;:::-;:26;;:41;;;;:::i;:::-;5694:48;;5108:653;;;;;:::o;894:115:7:-;1362:12:0;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;970:31:7::1;988:12;970:17;:31::i;:::-;894:115:::0;:::o;2493:89:6:-;2539:4;2563:11;;;;;;;;;;;2556:18;;2493:89;:::o;1784:55::-;;;;:::o;9004:812::-;9071:15;9089:10;9071:28;;9110:21;9134:8;9143:4;9134:14;;;;;;;;;;;;;;;;;;9110:38;;9159:21;9183:8;:14;9192:4;9183:14;;;;;;;;;;;:23;9198:7;9183:23;;;;;;;;;;;;;;;9159:47;;9240:7;9225:4;:11;;;:22;;9217:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9281:16;9292:4;9281:10;:16::i;:::-;9308;9327:69;9380:4;:15;;;9327:48;9370:4;9327:38;9343:4;:21;;;9327:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;9308:88;;9422:1;9411:8;:12;9407:129;;;9440:35;9457:7;9466:8;9440:16;:35::i;:::-;9506:7;9495:29;;;9515:8;9495:29;;;;;;;;;;;;;;;;;;9407:129;9560:1;9550:7;:11;9546:138;;;9592:24;9608:7;9592:4;:11;;;:15;;:24;;;;:::i;:::-;9578:4;:11;;:38;;;;9631:41;9655:7;9664;9631:4;:10;;;;;;;;;;;;:23;;;;:41;;;;;:::i;:::-;9546:138;9712:48;9755:4;9712:38;9728:4;:21;;;9712:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;9694:4;:15;;:66;;;;9794:4;9785:7;9776:32;;;9800:7;9776:32;;;;;;;;;;;;;;;;;;9004:812;;;;;;:::o;786:100:7:-;829:4;869:9;;;;;;;;;;;853:25;;:12;:10;:12::i;:::-;:25;;;846:32;;786:100;:::o;6940:910:6:-;6992:21;7016:8;7025:4;7016:14;;;;;;;;;;;;;;;;;;6992:38;;7064:4;:19;;;7045:15;:38;7041:77;;7100:7;;;7041:77;7128:19;7150:4;:10;;;;;;;;;;;;:20;;;7179:4;7150:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7128:57;;7215:1;7200:11;:16;7196:107;;;7255:15;7233:4;:19;;:37;;;;7285:7;;;;7196:107;7318:4;:14;;;;;;;;;;;;7313:138;;7366:4;7349;:14;;;:21;;;;;;;;;;;;;;;;;;7403:36;7423:4;:15;;;7403;;:19;;:36;;;;:::i;:::-;7385:15;:54;;;;7313:138;7483:1;7465:15;;:19;7461:334;;;7501:24;7528:56;7547:4;:19;;;7568:15;7528:18;:56::i;:::-;7501:83;;7599:19;7621:58;7663:15;;7621:37;7642:4;:15;;;7621:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;7599:80;;7718:65;7744:38;7770:11;7744:21;7760:4;7744:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;7718:4;:21;;;:25;;:65;;;;:::i;:::-;7694:4;:21;;:89;;;;7461:334;;;7827:15;7805:4;:19;;:37;;;;6940:910;;;;:::o;9887:377::-;9946:21;9970:8;9979:4;9970:14;;;;;;;;;;;;;;;;;;9946:38;;9995:21;10019:8;:14;10028:4;10019:14;;;;;;;;;;;:26;10034:10;10019:26;;;;;;;;;;;;;;;9995:50;;10056:15;10074:4;:11;;;10056:29;;10110:1;10096:4;:11;;:15;;;;10140:1;10122:4;:15;;:19;;;;10152:44;10176:10;10188:7;10152:4;:10;;;;;;;;;;;;:23;;;;:44;;;;;:::i;:::-;10242:4;10230:10;10212:44;;;10248:7;10212:44;;;;;;;;;;;;;;;;;;9887:377;;;;:::o;10873:604::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11023:7:6::1;11009:11;;:21;10991:15;:39;10987:441;;;11165:4;;;;;;;;;;;11155:14;;:6;:14;;;;11147:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11193:14;11210:8;:15;;;;11193:32;;11245:11;11240:177;11268:6;11262:3;:12;11240:177;;;11302:21;11326:8;11335:3;11326:13;;;;;;;;;;;;;;;;;;11302:37;;11376:4;:10;;;;;;;;;;;;11366:20;;:6;:20;;;;11358:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11240:177;11276:5;;;;;11240:177;;;;10987:441;;11438:31;11458:2;11462:6;11438;:19;;;;:31;;;;;:::i;:::-;10873:604:::0;;;:::o;521:85:7:-;562:7;589:9;;;;;;;;;;;582:16;;521:85;:::o;1656:28:6:-;;;;:::o;6684:180::-;6729:14;6746:8;:15;;;;6729:32;;6777:11;6772:85;6800:6;6794:3;:12;6772:85;;;6830:15;6841:3;6830:10;:15::i;:::-;6808:5;;;;;6772:85;;;;6684:180;:::o;1733:26::-;;;;:::o;1771:145:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:1:::1;1840:40;;1861:6;::::0;::::1;;;;;;;;1840:40;;;;;;;;;;;;1907:1;1890:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1771:145::o:0;1139:85::-;1185:7;1211:6;;;;;;;;;;;1204:13;;1139:85;:::o;1410:64:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1882:35::-;;;;:::o;3305:1277::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3471:26:6::1;3490:6;3471:18;:26::i;:::-;3512:11;3508:61;;;3540:17;:15;:17::i;:::-;3508:61;3601:13;;3583:15;:31;3579:534;;;3687:1;3668:15;:20;3664:243;;;3727:13;;3709:31;;3664:243;;;3803:13;;3785:15;:31;3781:111;;;3859:13;;3841:31;;3781:111;3664:243;3579:534;;;3994:1;3975:15;:20;:57;;;;4017:15;3999;:33;3975:57;3971:131;;;4071:15;4053:33;;3971:131;3579:534;4123:15;4170:13;;4151:15;:32;;4150:83;;;;4217:15;4198;:34;;4150:83;4123:110;;4244:8;4258:212;;;;;;;;4290:6;4258:212;;;;;;4324:11;4258:212;;;;4367:15;4258:212;;;;4416:1;4258:212;;;;4444:10;4258:212;;;;::::0;4244:227:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4486:10;4482:93;;;4531:32;4551:11;4531:15;;:19;;:32;;;;:::i;:::-;4513:15;:50;;;;4482:93;769:1:7;3305:1277:6::0;;;;:::o;10751:114::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10827:30:6::1;10844:12;10827:16;:30::i;:::-;10751:114:::0;:::o;2590:366::-;2369:11;;;;;;;;;;;2368:12;2360:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:10:7::1;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2747:14:6::2;2729:15;:32;2721:49;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;2802:1;2785:19;;:5;:19;;;2781:45;;2820:5;2806:4;;:20;;;;;;;;;;;;;;;;;;2781:45;2853:14;2837:13;:30;;;;2908:11;;2892:13;;:27;2878:11;:41;;;;2944:4;2930:11;;:18;;;;;;;;;;;;;;;;;;2590:366:::0;;:::o;1217:18::-;;;;;;;;;;;;;:::o;7887:1081::-;7953:15;7971:10;7953:28;;7992:15;8010:17;8023:3;8010:7;:12;;:17;;;;:::i;:::-;7992:35;;8038:14;8055:27;8076:5;8055:16;8067:3;8055:7;:11;;:16;;;;:::i;:::-;:20;;:27;;;;:::i;:::-;8038:44;;8093:20;8116:19;8128:6;8116:7;:11;;:19;;;;:::i;:::-;8093:42;;8148:21;8172:8;8181:4;8172:14;;;;;;;;;;;;;;;;;;8148:38;;8197:21;8221:8;:14;8230:4;8221:14;;;;;;;;;;;:23;8236:7;8221:23;;;;;;;;;;;;;;;8197:47;;8255:16;8266:4;8255:10;:16::i;:::-;8302:1;8288:4;:11;;;:15;8284:291;;;8320:16;8339:69;8392:4;:15;;;8339:48;8382:4;8339:38;8355:4;:21;;;8339:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;8320:88;;8438:1;8427:8;:12;8423:141;;;8460:35;8477:7;8486:8;8460:16;:35::i;:::-;8530:7;8519:29;;;8539:8;8519:29;;;;;;;;;;;;;;;;;;8423:141;8284:291;;8599:1;8589:7;:11;8585:252;;;8617:60;8645:7;8662:4;8669:7;8617:4;:10;;;;;;;;;;;;:27;;;;:60;;;;;;:::i;:::-;8706:29;8722:12;8706:4;:11;;;:15;;:29;;;;:::i;:::-;8692:4;:11;;:43;;;;8750:75;8774:42;8818:6;8750:4;:10;;;;;;;;;;;;:23;;;;:75;;;;;:::i;:::-;8585:252;8865:48;8908:4;8865:38;8881:4;:21;;;8865:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;8847:4;:15;;:66;;;;8946:4;8937:7;8929:31;;;8952:7;8929:31;;;;;;;;;;;;;;;;;;7887:1081;;;;;;;;:::o;5824:777::-;5898:7;5918:21;5942:8;5951:4;5942:14;;;;;;;;;;;;;;;;;;5918:38;;5967:21;5991:8;:14;6000:4;5991:14;;;;;;;;;;;:21;6006:5;5991:21;;;;;;;;;;;;;;;5967:45;;6023:24;6050:4;:21;;;6023:48;;6082:19;6104:4;:10;;;;;;;;;;;;:20;;;6133:4;6104:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6082:57;;6172:4;:19;;;6154:15;:37;:57;;;;;6210:1;6195:11;:16;;6154:57;6150:362;;;6228:24;6255:56;6274:4;:19;;;6295:15;6255:18;:56::i;:::-;6228:83;;6326:19;6348:58;6390:15;;6348:37;6369:4;:15;;;6348:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;6326:80;;6440:60;6461:38;6487:11;6461:21;6477:4;6461:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;6440:16;:20;;:60;;;;:::i;:::-;6421:79;;6150:362;;;6529:64;6577:4;:15;;;6529:43;6567:4;6529:33;6545:16;6529:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;6522:71;;;;;;5824:777;;;;:::o;2065:240:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:1:::1;2153:22;;:8;:22;;;;2145:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:8;2233:38;;2254:6;::::0;::::1;;;;;;;;2233:38;;;;;;;;;;;;2290:8;2281:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2065:240:::0;:::o;3136:155:5:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3538:215::-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;596:96:4:-;649:7;675:10;668:17;;596:96;:::o;1017:344:7:-;1132:1;1108:26;;:12;:26;;;;1086:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:12;1223:45;;1251:1;1223:45;;;;;;;;;;;;1279:39;1305:12;1279:25;:39::i;:::-;1341:12;1329:9;;:24;;;;;;;;;;;;;;;;;;1017:344;:::o;4217:150:5:-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;10378:365:6:-;10454:20;10477:4;;;;;;;;;;;:14;;;10500:4;10477:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10454:52;;10536:1;10521:12;:16;10517:219;;;10568:12;10558:7;:22;10554:171;;;10601:36;10619:3;10624:12;10601:4;;;;;;;;;;;:17;;;;:36;;;;;:::i;:::-;10554:171;;;10678:31;10696:3;10701:7;10678:4;;;;;;;;;;;:17;;;;:31;;;;;:::i;:::-;10554:171;10517:219;10378:365;;;:::o;717:175:2:-;799:86;819:5;849:23;;;874:2;878:5;826:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:19;:86::i;:::-;717:175;;;:::o;2966:261:6:-;3034:14;3051:8;:15;;;;3034:32;;3082:11;3077:143;3105:6;3099:3;:12;3077:143;;;3166:6;3143:29;;:8;3152:3;3143:13;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:29;;;;3135:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113:5;;;;;3077:143;;;;2966:261;;:::o;5601:171:5:-;5660:7;5679:9;5691;5695:1;5698;5691:3;:9::i;:::-;5679:21;;5710:9;5722;5726:1;5729;5722:3;:9::i;:::-;5710:21;;5748:17;5752:9;5756:1;5759;5752:3;:9::i;:::-;5763:1;5748:3;:17::i;:::-;5741:24;;;;5601:171;;;;:::o;898:203:2:-;998:96;1018:5;1048:27;;;1077:4;1083:2;1087:5;1025:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;998:19;:96::i;:::-;898:203;;;;:::o;2980:751::-;3399:23;3425:69;3453:4;3425:69;;;;;;;;;;;;;;;;;3433:5;3425:27;;;;:69;;;;;:::i;:::-;3399:95;;3528:1;3508:10;:17;:21;3504:221;;;3648:10;3637:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3629:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3504:221;2980:751;;;:::o;3470:223:3:-;3603:12;3634:52;3656:6;3664:4;3670:1;3673:12;3634:21;:52::i;:::-;3627:59;;3470:223;;;;;:::o;4557:499::-;4722:12;4779:5;4754:21;:30;;4746:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:18;4856:6;4845:10;:18::i;:::-;4837:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:12;4923:23;4950:6;:11;;4969:5;4976:4;4950:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4908:73;;;;4998:51;5015:7;5024:10;5036:12;4998:16;:51::i;:::-;4991:58;;;;4557:499;;;;;;:::o;727:377::-;787:4;990:12;1055:7;1043:20;1035:28;;1096:1;1089:4;:8;1082:15;;;727:377;;;:::o;7170:692::-;7316:12;7344:7;7340:516;;;7374:10;7367:17;;;;7340:516;7505:1;7485:10;:17;:21;7481:365;;;7679:10;7673:17;7739:15;7726:10;7722:2;7718:19;7711:44;7628:145;7818:12;7811:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:692;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2529200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"Poly()": "1091",
								"PolyPerSecond()": "1051",
								"TOTAL_REWARDS()": "252",
								"add(uint256,address,bool,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getGeneratedReward(uint256,uint256)": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"initialize(address,uint256)": "infinite",
								"isInitialized()": "1167",
								"isOperator()": "1197",
								"massUpdatePools()": "infinite",
								"operator()": "1166",
								"owner()": "1122",
								"pendingStone(uint256,address)": "infinite",
								"poolEndTime()": "1095",
								"poolInfo(uint256)": "5486",
								"poolStartTime()": "1051",
								"renounceOwnership()": "24374",
								"runningTime()": "1116",
								"set(uint256,uint256)": "infinite",
								"setOperator(address)": "infinite",
								"totalAllocPoint()": "1096",
								"transferOperator(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "2196",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkPoolDuplicate(contract IERC20)": "infinite",
								"safePolyTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1571,
									"end": 1605,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1571,
									"end": 1605,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1815,
									"end": 1839,
									"name": "PUSH",
									"source": 6,
									"value": "201FDFCF45D940C"
								},
								{
									"begin": 1784,
									"end": 1839,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1784,
									"end": 1839,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1911,
									"end": 1917,
									"name": "PUSH",
									"source": 6,
									"value": "2A300"
								},
								{
									"begin": 1882,
									"end": 1917,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1882,
									"end": 1917,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 938,
									"end": 955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 989,
									"end": 998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 904,
									"end": 1063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 491,
									"end": 492,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 596,
									"end": 692,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 649,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 685,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11480,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b899f0de0da8d17c46eba4c7c40ee592613436512f68e6dd258d373718af5e1064736f6c63430007060033",
									".code": [
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "E177BB38"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "E177BB38"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "E2BBB158"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "ECF4DEB9"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "B3AB15FB"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "CD6DC687"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "93F1A40B"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "943F013D"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "630B5BA1"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "6E271DD5"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "3F7CAF52"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "54575AF4"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "570CA735"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "3F7CAF52"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "441A3E70"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "4456EDA2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "1AB06EE5"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "1AB06EE5"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "231F0C6A"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "29605E77"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "392E53CD"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "9CF6091"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "1526FE27"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH",
											"source": 6,
											"value": "17CAF6F1"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2766,
											"end": 2794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2766,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2898,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2976,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2943,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2978,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3029,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3067,
											"end": 3083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3064,
											"end": 3065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3084,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3123,
											"end": 3191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3259,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3191,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3123,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3176,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3177,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3438,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1985,
											"name": "PUSH",
											"source": 6,
											"value": "54B40B1F852BDA00000"
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1985,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4757,
											"end": 4774,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4757,
											"end": 4774,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4757,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4817,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4984,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4834,
											"end": 4984,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4946,
											"end": 4957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4907,
											"end": 4922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4922,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4902,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4887,
											"end": 4902,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4923,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4923,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4923,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4887,
											"end": 4923,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4887,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4887,
											"end": 4927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4972,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4972,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4887,
											"end": 4972,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4887,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4884,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4869,
											"end": 4972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4972,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4984,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4834,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 4998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5009,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4994,
											"end": 5009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5023,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 5031,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5226,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5237,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5213,
											"end": 5247,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5239,
											"end": 5247,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5247,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5213,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5284,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5273,
											"end": 5284,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5262,
											"end": 5269,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5262,
											"end": 5284,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5258,
											"end": 5754,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5329,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5318,
											"end": 5329,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5329,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5301,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5301,
											"end": 5339,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5331,
											"end": 5339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5331,
											"end": 5339,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5301,
											"end": 5339,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5301,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5384,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5371,
											"end": 5384,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5358,
											"end": 5384,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5354,
											"end": 5442,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5428,
											"end": 5441,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5428,
											"end": 5441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5409,
											"end": 5422,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5409,
											"end": 5422,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5393,
											"end": 5404,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5393,
											"end": 5408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5393,
											"end": 5427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5442,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5442,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5393,
											"end": 5442,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5442,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5442,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5393,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5386,
											"end": 5442,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5442,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5354,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5495,
											"end": 5508,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5495,
											"end": 5508,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5464,
											"end": 5475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5464,
											"end": 5479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5464,
											"end": 5494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5509,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5464,
											"end": 5509,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5509,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5464,
											"end": 5509,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5464,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5457,
											"end": 5509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5457,
											"end": 5509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5457,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5457,
											"end": 5509,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5754,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5258,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5570,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5557,
											"end": 5570,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5542,
											"end": 5580,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5572,
											"end": 5580,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5580,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5542,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5612,
											"end": 5625,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5612,
											"end": 5625,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5625,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5595,
											"end": 5679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5665,
											"end": 5678,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5665,
											"end": 5678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5646,
											"end": 5659,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5646,
											"end": 5659,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5641,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5634,
											"end": 5645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5634,
											"end": 5664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5679,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5634,
											"end": 5679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5679,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5634,
											"end": 5679,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5634,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5627,
											"end": 5679,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5679,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5595,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5728,
											"end": 5741,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5728,
											"end": 5741,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5708,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5701,
											"end": 5727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5742,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5701,
											"end": 5742,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5742,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5701,
											"end": 5742,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5701,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5761,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 988,
											"end": 1000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2582,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1839,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9086,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9099,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9134,
											"end": 9142,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9143,
											"end": 9147,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9183,
											"end": 9191,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9196,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9183,
											"end": 9206,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9247,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9225,
											"end": 9236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9236,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9247,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9247,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9217,
											"end": 9270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9292,
											"end": 9296,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9281,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9327,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9380,
											"end": 9384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9380,
											"end": 9395,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9380,
											"end": 9395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9380,
											"end": 9395,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 9370,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9327,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9343,
											"end": 9347,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9343,
											"end": 9364,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9343,
											"end": 9364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9343,
											"end": 9364,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9327,
											"end": 9338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9327,
											"end": 9342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9365,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9327,
											"end": 9365,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9365,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9327,
											"end": 9365,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9327,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9327,
											"end": 9369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9327,
											"end": 9375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9375,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9327,
											"end": 9375,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 9327,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9327,
											"end": 9379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9396,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9396,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9327,
											"end": 9396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9396,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9327,
											"end": 9396,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9327,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9411,
											"end": 9419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9423,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9536,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9407,
											"end": 9536,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9457,
											"end": 9464,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9466,
											"end": 9474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9440,
											"end": 9475,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9440,
											"end": 9475,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9440,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 9515,
											"end": 9523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9536,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9407,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9557,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9561,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9684,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9546,
											"end": 9684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9608,
											"end": 9615,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9596,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9603,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9592,
											"end": 9607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9578,
											"end": 9589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9655,
											"end": 9662,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9664,
											"end": 9671,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9635,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9631,
											"end": 9641,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9654,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9631,
											"end": 9654,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9631,
											"end": 9654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9684,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9546,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9755,
											"end": 9759,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9712,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9728,
											"end": 9732,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9716,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9712,
											"end": 9723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9723,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9712,
											"end": 9727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9750,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9712,
											"end": 9750,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9750,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9712,
											"end": 9750,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9712,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9712,
											"end": 9754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9760,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9760,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9712,
											"end": 9760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9760,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9712,
											"end": 9760,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9712,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9694,
											"end": 9709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 9798,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9785,
											"end": 9792,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 9800,
											"end": 9807,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9816,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 7013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7024,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7025,
											"end": 7029,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 7030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 7030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7068,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7060,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7083,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7041,
											"end": 7118,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7100,
											"end": 7107,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7118,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7041,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7170,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7150,
											"end": 7170,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7170,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7179,
											"end": 7183,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7255,
											"end": 7270,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7252,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7233,
											"end": 7252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7270,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7285,
											"end": 7292,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7313,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7313,
											"end": 7451,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7370,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7363,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7349,
											"end": 7363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7423,
											"end": 7427,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7438,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7423,
											"end": 7438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7438,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7418,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7403,
											"end": 7418,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7400,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7385,
											"end": 7439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7439,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7313,
											"end": 7451,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7313,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7480,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7465,
											"end": 7480,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7484,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7795,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7461,
											"end": 7795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7501,
											"end": 7525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7547,
											"end": 7551,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7566,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7547,
											"end": 7566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7566,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7583,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7528,
											"end": 7584,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7528,
											"end": 7584,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7528,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7501,
											"end": 7584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7501,
											"end": 7584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7663,
											"end": 7678,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7663,
											"end": 7678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7642,
											"end": 7646,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7642,
											"end": 7657,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7642,
											"end": 7657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7642,
											"end": 7657,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7637,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7621,
											"end": 7641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7658,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7621,
											"end": 7658,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7621,
											"end": 7658,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7621,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7621,
											"end": 7662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7679,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7621,
											"end": 7679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7679,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7621,
											"end": 7679,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7621,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7599,
											"end": 7679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7599,
											"end": 7679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7770,
											"end": 7781,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7760,
											"end": 7764,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7744,
											"end": 7755,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7744,
											"end": 7759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7744,
											"end": 7769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7722,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7739,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7718,
											"end": 7739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7739,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7718,
											"end": 7743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7783,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7783,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7718,
											"end": 7783,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7783,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7718,
											"end": 7783,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7718,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7698,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7715,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7694,
											"end": 7715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7783,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7795,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7461,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7842,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7824,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7805,
											"end": 7824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7842,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7850,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 9978,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9979,
											"end": 9983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9995,
											"end": 10016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10019,
											"end": 10027,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10032,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10034,
											"end": 10044,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10019,
											"end": 10045,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9995,
											"end": 10045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9995,
											"end": 10045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10056,
											"end": 10071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10074,
											"end": 10078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10085,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10074,
											"end": 10085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10085,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10056,
											"end": 10085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10056,
											"end": 10085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10111,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10140,
											"end": 10141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10122,
											"end": 10126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10122,
											"end": 10137,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10122,
											"end": 10137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10122,
											"end": 10141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10122,
											"end": 10141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10122,
											"end": 10141,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10122,
											"end": 10141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 10176,
											"end": 10186,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10156,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10152,
											"end": 10162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10152,
											"end": 10175,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10152,
											"end": 10175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 10152,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10242,
											"end": 10246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10230,
											"end": 10240,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "PUSH",
											"source": 6,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 10248,
											"end": 10255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10256,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10264,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11023,
											"end": 11030,
											"name": "PUSH",
											"source": 6,
											"value": "76A700"
										},
										{
											"begin": 11009,
											"end": 11020,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 11009,
											"end": 11020,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10991,
											"end": 11006,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10991,
											"end": 11030,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 11428,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 10987,
											"end": 11428,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11155,
											"end": 11169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11161,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11155,
											"end": 11169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11169,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11169,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "506F6C7900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11147,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11210,
											"end": 11225,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11210,
											"end": 11225,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11210,
											"end": 11225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11210,
											"end": 11225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11245,
											"end": 11256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11262,
											"end": 11265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11262,
											"end": 11274,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11326,
											"end": 11334,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11335,
											"end": 11338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11366,
											"end": 11386,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11366,
											"end": 11386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11366,
											"end": 11372,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11366,
											"end": 11386,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11366,
											"end": 11386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11366,
											"end": 11386,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11366,
											"end": 11386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "706F6F6C2E746F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 11358,
											"end": 11401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11276,
											"end": 11281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11240,
											"end": 11417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 11428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 11428,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 10987,
											"end": 11428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 11458,
											"end": 11460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11468,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11444,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11457,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11438,
											"end": 11457,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 11438,
											"end": 11457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 11438,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 11477,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 562,
											"end": 569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6754,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6746,
											"end": 6761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 6788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6794,
											"end": 6797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6794,
											"end": 6806,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6841,
											"end": 6844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6830,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1917,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3569,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3508,
											"end": 3569,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3540,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3569,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3508,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3614,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3601,
											"end": 3614,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3598,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3614,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3688,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3727,
											"end": 3740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3892,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3781,
											"end": 3892,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3859,
											"end": 3872,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3781,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3664,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3995,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3975,
											"end": 4032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4017,
											"end": 4032,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4032,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4032,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3975,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3971,
											"end": 4102,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4102,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3971,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3579,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4183,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4170,
											"end": 4183,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4151,
											"end": 4166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4151,
											"end": 4183,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4151,
											"end": 4183,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4150,
											"end": 4233,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4232,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4198,
											"end": 4232,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4198,
											"end": 4232,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4233,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4150,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4252,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4296,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4335,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4454,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4496,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4482,
											"end": 4575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4551,
											"end": 4562,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4513,
											"end": 4563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4563,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4575,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4482,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 4582,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10844,
											"end": 10856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 10843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 10827,
											"end": 10857,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10827,
											"end": 10857,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10827,
											"end": 10857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10865,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "47656E657369733A20616C726561647920696E697469616C697A656400000000"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2360,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "6C61746500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2781,
											"end": 2826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2781,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2850,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2837,
											"end": 2867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2867,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2908,
											"end": 2919,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2878,
											"end": 2919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2919,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2956,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 7968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7971,
											"end": 7981,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 7981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 7981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8010,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 8023,
											"end": 8026,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 8010,
											"end": 8017,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8010,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8010,
											"end": 8022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8010,
											"end": 8027,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8010,
											"end": 8027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8010,
											"end": 8027,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8010,
											"end": 8027,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8010,
											"end": 8027,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8010,
											"end": 8027,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 8010,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8038,
											"end": 8052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8076,
											"end": 8081,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8067,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 8055,
											"end": 8062,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8055,
											"end": 8066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8055,
											"end": 8075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8082,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8055,
											"end": 8082,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8082,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8055,
											"end": 8082,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8055,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8038,
											"end": 8082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8038,
											"end": 8082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8128,
											"end": 8134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8116,
											"end": 8127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8180,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 8185,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8197,
											"end": 8218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8229,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8234,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8235,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8243,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8244,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8197,
											"end": 8244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8197,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8266,
											"end": 8270,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8302,
											"end": 8303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8288,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8288,
											"end": 8299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8288,
											"end": 8299,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8284,
											"end": 8575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8320,
											"end": 8336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8392,
											"end": 8396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8392,
											"end": 8407,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8392,
											"end": 8407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8392,
											"end": 8407,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8339,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8350,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8350,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8339,
											"end": 8354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8377,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8339,
											"end": 8377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8377,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8339,
											"end": 8377,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8339,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8339,
											"end": 8381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8387,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8339,
											"end": 8387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8387,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8339,
											"end": 8387,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8339,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8339,
											"end": 8391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8320,
											"end": 8408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8320,
											"end": 8408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8427,
											"end": 8439,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8564,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8423,
											"end": 8564,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8477,
											"end": 8484,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8486,
											"end": 8494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8460,
											"end": 8495,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8460,
											"end": 8495,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8460,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8537,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8539,
											"end": 8547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8564,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8423,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8575,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8284,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8596,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8589,
											"end": 8600,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8837,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8585,
											"end": 8837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8676,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8621,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8644,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8617,
											"end": 8644,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8617,
											"end": 8644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8617,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8722,
											"end": 8734,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8717,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8706,
											"end": 8735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8735,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8706,
											"end": 8735,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8706,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8774,
											"end": 8816,
											"name": "PUSH",
											"source": 6,
											"value": "1FC7F2C81ACD9D38ED4D509B1F17555E549EF1D"
										},
										{
											"begin": 8818,
											"end": 8824,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8754,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8773,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8750,
											"end": 8773,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8750,
											"end": 8773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8750,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8585,
											"end": 8837,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8585,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 8908,
											"end": 8912,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8865,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8881,
											"end": 8902,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8881,
											"end": 8902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8881,
											"end": 8902,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8869,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8865,
											"end": 8876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8865,
											"end": 8880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8903,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8865,
											"end": 8903,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8903,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8865,
											"end": 8903,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 8865,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8865,
											"end": 8907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8913,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8865,
											"end": 8913,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8913,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8865,
											"end": 8913,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 8865,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 8851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 8862,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 8862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 8913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 8913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 8913,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 8913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8937,
											"end": 8944,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "PUSH",
											"source": 6,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 8952,
											"end": 8959,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8960,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 8968,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5950,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5951,
											"end": 5955,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5918,
											"end": 5956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5918,
											"end": 5956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 5999,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6004,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6011,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 6012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 6012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6071,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6050,
											"end": 6071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6071,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6124,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6124,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6133,
											"end": 6137,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6191,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6172,
											"end": 6191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6191,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6169,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6191,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6211,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6211,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6154,
											"end": 6211,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6211,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6211,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6211,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6154,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6512,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6150,
											"end": 6512,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6274,
											"end": 6278,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6274,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6274,
											"end": 6293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6274,
											"end": 6293,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6310,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6255,
											"end": 6311,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6255,
											"end": 6311,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6255,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6326,
											"end": 6345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6390,
											"end": 6405,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6390,
											"end": 6405,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6369,
											"end": 6373,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6384,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6369,
											"end": 6384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6384,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6364,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6348,
											"end": 6368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6385,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6385,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6385,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6348,
											"end": 6385,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6348,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6348,
											"end": 6389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6406,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6406,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6406,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6406,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6348,
											"end": 6406,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6348,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6326,
											"end": 6406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6326,
											"end": 6406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6461,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6487,
											"end": 6498,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 6477,
											"end": 6481,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6461,
											"end": 6472,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6461,
											"end": 6476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6461,
											"end": 6486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6499,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6461,
											"end": 6499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6499,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6461,
											"end": 6499,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6461,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6456,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6440,
											"end": 6500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6500,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6440,
											"end": 6500,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6440,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6500,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6512,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6150,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6577,
											"end": 6581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6592,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6577,
											"end": 6592,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6592,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6567,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6529,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6545,
											"end": 6561,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6533,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6540,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6529,
											"end": 6544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6562,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6529,
											"end": 6562,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6562,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6529,
											"end": 6562,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6529,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6529,
											"end": 6566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6572,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6572,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6572,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6529,
											"end": 6572,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6572,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6529,
											"end": 6572,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6529,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6529,
											"end": 6576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6593,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 6601,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 649,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH data",
											"source": 7,
											"value": "756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10378,
											"end": 10743,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10378,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10491,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10477,
											"end": 10491,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10491,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 10500,
											"end": 10504,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10521,
											"end": 10533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10521,
											"end": 10537,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10517,
											"end": 10736,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10517,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10517,
											"end": 10736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10580,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10580,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10619,
											"end": 10622,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10624,
											"end": 10636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10618,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10601,
											"end": 10618,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10601,
											"end": 10618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10601,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 10696,
											"end": 10699,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10701,
											"end": 10708,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10695,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10678,
											"end": 10695,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10678,
											"end": 10695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 10678,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 10554,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10517,
											"end": 10736,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10517,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10743,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 874,
											"end": 876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2966,
											"end": 3227,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2966,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3059,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3099,
											"end": 3102,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3152,
											"end": 3155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3118,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3113,
											"end": 3118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3227,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5688,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5699,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5722,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5752,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH data",
											"source": 2,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH data",
											"source": 3,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4974,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7316,
											"end": 7328,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7506,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7673,
											"end": 7690,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7711,
											"end": 7755,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Poly()": "e177bb38",
							"PolyPerSecond()": "3f7caf52",
							"TOTAL_REWARDS()": "09cf6091",
							"add(uint256,address,bool,uint256)": "96805e54",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getGeneratedReward(uint256,uint256)": "231f0c6a",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"initialize(address,uint256)": "cd6dc687",
							"isInitialized()": "392e53cd",
							"isOperator()": "4456eda2",
							"massUpdatePools()": "630b5ba1",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"pendingStone(uint256,address)": "ecf4deb9",
							"poolEndTime()": "6e271dd5",
							"poolInfo(uint256)": "1526fe27",
							"poolStartTime()": "5f96dc11",
							"renounceOwnership()": "715018a6",
							"runningTime()": "943f013d",
							"set(uint256,uint256)": "1ab06ee5",
							"setOperator(address)": "b3ab15fb",
							"totalAllocPoint()": "17caf6f1",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Poly\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PolyPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_REWARDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastRewardTime\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTime\",\"type\":\"uint256\"}],\"name\":\"getGeneratedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Poly\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolStartTime\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingStone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accStonePerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStarted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"runningTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Newoperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/distribution/TombGenesisRewardPool.sol\":\"PolyGenesisRewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1a121060d4fd9192e0f4627d6a2fe16df72bae08b7a6e65b66dac091252ada6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23c7804774953e5bb28601b8627704cab73ecd3aa7d774520a73f321de4b6542\",\"dweb:/ipfs/QmWtd25W5UCARtgjJqmLugDLvVfVy2pf7t4THhjY88DZTa\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]},\"contracts/distribution/TombGenesisRewardPool.sol\":{\"keccak256\":\"0x28c6a1dd1eeb4793890980c695a1aaf0c289dd2023d7af82e225522fe30bc029\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e18a77ea8a4629cba39c077feeae1466ec8595b987125081c8f18e0949b2b3d1\",\"dweb:/ipfs/QmNUfmUPqs4eW1b5f1Qte1W2S9gFLBsDpH5UnPmiv1Mc1N\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 111,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_Ownership",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2222,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_operator",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1170,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "Poly",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)219"
							},
							{
								"astId": 1173,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(PoolInfo)1168_storage)dyn_storage"
							},
							{
								"astId": 1176,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "initialized",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1182,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1157_storage))"
							},
							{
								"astId": 1185,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1187,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolStartTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1189,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolEndTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1192,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "PolyPerSecond",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1195,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "runningTime",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1168_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1168_storage",
								"encoding": "dynamic_array",
								"label": "struct PolyGenesisRewardPool.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)219": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1157_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PolyGenesisRewardPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1157_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1157_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1157_storage)"
							},
							"t_struct(PoolInfo)1168_storage": {
								"encoding": "inplace",
								"label": "struct PolyGenesisRewardPool.PoolInfo",
								"members": [
									{
										"astId": 1159,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)219"
									},
									{
										"astId": 1161,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1163,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1165,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "accStonePerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1167,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "isStarted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)1157_storage": {
								"encoding": "inplace",
								"label": "struct PolyGenesisRewardPool.UserInfo",
								"members": [
									{
										"astId": 1154,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1156,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/owner/Operator.sol": {
				"Operator": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOperator()": "4456eda2",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/owner/Operator.sol\":\"Operator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1a121060d4fd9192e0f4627d6a2fe16df72bae08b7a6e65b66dac091252ada6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23c7804774953e5bb28601b8627704cab73ecd3aa7d774520a73f321de4b6542\",\"dweb:/ipfs/QmWtd25W5UCARtgjJqmLugDLvVfVy2pf7t4THhjY88DZTa\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 111,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_Ownership",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2222,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_operator",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "@openzeppelin/contracts/access/Ownable.sol:19:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\nabstract contract Ownable is Context {\n^ (Relevant source part starts here and spans across multiple lines).\n@openzeppelin/contracts/access/Ownable.sol:80:5: The payable fallback function is defined here.\n    fallback() external payable {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 3289,
						"file": "@openzeppelin/contracts/access/Ownable.sol",
						"message": "The payable fallback function is defined here.",
						"start": 2630
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3535,
					"file": "@openzeppelin/contracts/access/Ownable.sol",
					"start": 646
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "contracts/owner/Operator.sol:8:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\nabstract contract Operator is Context, Ownable {\n^ (Relevant source part starts here and spans across multiple lines).\n@openzeppelin/contracts/access/Ownable.sol:80:5: The payable fallback function is defined here.\n    fallback() external payable {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 3289,
						"file": "@openzeppelin/contracts/access/Ownable.sol",
						"message": "The payable fallback function is defined here.",
						"start": 2630
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1364,
					"file": "contracts/owner/Operator.sol",
					"start": 179
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "contracts/distribution/TombGenesisRewardPool.sol:12:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract PolyGenesisRewardPool is Operator {\n^ (Relevant source part starts here and spans across multiple lines).\n@openzeppelin/contracts/access/Ownable.sol:80:5: The payable fallback function is defined here.\n    fallback() external payable {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 3289,
						"file": "@openzeppelin/contracts/access/Ownable.sol",
						"message": "The payable fallback function is defined here.",
						"start": 2630
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 11480,
					"file": "contracts/distribution/TombGenesisRewardPool.sol",
					"start": 464
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "@openzeppelin/contracts/access/Ownable.sol:27:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1063,
					"file": "@openzeppelin/contracts/access/Ownable.sol",
					"start": 904
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "contracts/owner/Operator.sol:16:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor() internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 513,
					"file": "contracts/owner/Operator.sol",
					"start": 389
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							751
						],
						"Ownable": [
							141
						]
					},
					"id": 142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 752,
							"src": "120:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 751,
										"src": "675:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$751",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "675:7:0"
								}
							],
							"contractDependencies": [
								751
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "151:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141,
								751
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "689:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "745:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "776:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:57:0"
									},
									"src": "718:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "928:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "938:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "938:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "958:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "958:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "938:32:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "980:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "989:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "980:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "980:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1042:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1034:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1034:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1034:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1046:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1013:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "1008:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "808:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:0:0"
									},
									"scope": 141,
									"src": "904:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1194:30:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1204:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1069:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:9:0"
									},
									"scope": 141,
									"src": "1139:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1333:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1351:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "1362:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1362:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1351:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1343:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1421:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1230:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:2:0"
									},
									"src": "1312:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1825:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1877:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1869:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1840:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1840:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1835:45:0"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1899:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1899:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1890:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1890:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1435:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 62,
											"modifierName": {
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1815:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1815:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:0:0"
									},
									"scope": 141,
									"src": "1771:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2135:170:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2165:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2165:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2153:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2145:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2262:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2233:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2228:43:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2281:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2281:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2281:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1922:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2125:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2125:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2092:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:0:0"
									},
									"scope": 141,
									"src": "2065:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2311:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"id": 111,
									"mutability": "mutable",
									"name": "_Ownership",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "2454:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 110,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2454:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2658:631:0",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "_impl",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "2729:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 115,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2729:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 117,
														"name": "Ownership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2745:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2745:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2729:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 121,
																"name": "_impl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2774:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 122,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2783:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2783:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2774:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2766:28:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2813:470:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2827:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2844:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2838:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "2831:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2875:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2883:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2883:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2862:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2862:36:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2862:36:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2911:67:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2938:5:0"
																	},
																	{
																		"name": "_impl",
																		"nodeType": "YulIdentifier",
																		"src": "2945:5:0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2952:3:0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2957:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2973:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2976:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "2925:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:53:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "2915:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2998:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3008:3:0"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "3013:14:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:16:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:40:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2991:40:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3059:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3064:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "3067:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3067:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3044:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:40:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3044:40:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3130:61:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "3155:3:0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "3160:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3160:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "3148:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3148:29:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3148:29:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3123:68:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3212:61:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "3237:3:0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "3242:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3242:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "3230:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3230:29:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3230:29:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3204:69:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "3104:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "3097:176:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 116,
														"isOffset": false,
														"isSlot": false,
														"src": "2945:5:0",
														"valueSize": 1
													}
												],
												"id": 129,
												"nodeType": "InlineAssembly",
												"src": "2804:479:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2487:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"id": 131,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:0:0"
									},
									"scope": 141,
									"src": "2630:659:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "3499:34:0",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_Ownership",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "3516:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "3509:17:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3295:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Ownership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3456:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3490:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:9:0"
									},
									"scope": 141,
									"src": "3438:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 142,
							"src": "646:2889:0"
						}
					],
					"src": "87:3448:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							219
						]
					},
					"id": 220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 143,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 144,
								"nodeType": "StructuredDocumentation",
								"src": "67:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 219,
							"linearizedBaseContracts": [
								219
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "161:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "278:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:9:1"
									},
									"scope": 219,
									"src": "232:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "293:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "389:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "429:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:9:1"
									},
									"scope": 219,
									"src": "370:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "444:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "676:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:35:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "729:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:6:1"
									},
									"scope": 219,
									"src": "658:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "741:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:32:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1084:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:9:1"
									},
									"scope": 219,
									"src": "1010:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1099:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1763:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1780:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:33:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1814:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:6:1"
									},
									"scope": 219,
									"src": "1746:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1826:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2158:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2182:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2209:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:81:1"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2248:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:6:1"
									},
									"scope": 219,
									"src": "2127:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2260:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 209,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2438:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2460:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2480:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:57:1"
									},
									"src": "2423:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "2501:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 218,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2669:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2692:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2717:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:63:1"
									},
									"src": "2654:78:1"
								}
							],
							"scope": 220,
							"src": "138:2596:1"
						}
					],
					"src": "33:2702:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							729
						],
						"IERC20": [
							219
						],
						"SafeERC20": [
							432
						],
						"SafeMath": [
							1138
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 221,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 222,
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 220,
							"src": "66:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 223,
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 730,
							"src": "90:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../../../utils/math/SafeMath.sol",
							"id": 224,
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 1139,
							"src": "127:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 225,
								"nodeType": "StructuredDocumentation",
								"src": "171:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 228,
									"libraryName": {
										"id": 226,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1138,
										"src": "659:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1138",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:27:2",
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 231,
									"libraryName": {
										"id": 229,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 729,
										"src": "691:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$729",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "685:26:2",
									"typeName": {
										"id": 230,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "789:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 244,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "849:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 168,
																		"src": "849:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "849:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 247,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "874:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "878:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 242,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "826:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "826:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 240,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "799:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "799:86:2"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "739:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 232,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "739:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "753:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "765:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:41:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:2"
									},
									"scope": 432,
									"src": "717:175:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "988:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1018:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 268,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 255,
																			"src": "1048:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 200,
																		"src": "1048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1048:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 271,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "1077:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 272,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "1083:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 273,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "1087:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1025:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1025:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "998:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "998:96:2"
											}
										]
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "924:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 254,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "924:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "938:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "952:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "964:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:55:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:2"
									},
									"scope": 432,
									"src": "898:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "1437:537:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 289,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1726:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1735:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1726:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1725:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 297,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1766:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$432",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$432",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1758:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 295,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1758:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 298,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1758:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 299,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 283,
																					"src": "1773:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 293,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "1742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$219",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 178,
																				"src": "1742:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1742:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1785:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1742:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 303,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1741:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1725:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1717:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "1717:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 309,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1897:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 312,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "1927:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 188,
																		"src": "1927:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1927:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 315,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "1951:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 316,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "1960:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 310,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1904:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1904:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1904:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 308,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "1877:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1877:90:2"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1107:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1382:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "1382:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1396:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1413:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:46:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 432,
									"src": "1361:613:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "2066:197:2",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "2076:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2076:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [
														{
															"id": 341,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "2143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 336,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2123:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$432",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$432",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2115:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 334,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2115:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2115:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 338,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "2130:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 332,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "2099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$219",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "2099:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2099:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 933,
														"src": "2099:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2076:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "2179:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 348,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "2209:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 188,
																		"src": "2209:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2209:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 351,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "2233:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 352,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "2242:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 346,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2186:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2186:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 344,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2159:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "2159:97:2"
											}
										]
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 322,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "2011:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2042:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:46:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:2"
									},
									"scope": 432,
									"src": "1980:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2355:242:2",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "2365:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "2432:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2439:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 372,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2412:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$432",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$432",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2404:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 370,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2404:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 374,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "2419:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "2388:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$219",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "2388:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1057,
														"src": "2388:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:118:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "2513:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 385,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "2543:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 188,
																		"src": "2543:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2543:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "2567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 389,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2576:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 383,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2520:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2520:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 381,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2493:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "2493:97:2"
											}
										]
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2300:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "2300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2314:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2331:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:46:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:2"
									},
									"scope": 432,
									"src": "2269:328:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3050:681:2",
										"statements": [
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "3399:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 402,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3399:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [
														{
															"id": 409,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3453:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 406,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "3433:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$219",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$219",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3425:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3425:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3425:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 523,
														"src": "3425:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3425:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 413,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3508:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3508:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3528:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3508:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "3504:221:2",
												"trueBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "3531:194:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 420,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "3648:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 422,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3661:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 421,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3661:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 423,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3660:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 418,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3637:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3637:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3669:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 417,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3629:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "3629:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2603:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 396,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "3009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3023:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3023:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3008:33:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:0:2"
									},
									"scope": 432,
									"src": "2980:751:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 433,
							"src": "629:3104:2"
						}
					],
					"src": "33:3700:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "67:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "793:311:3",
										"statements": [
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 451,
														"src": "990:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "990:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"nodeType": "VariableDeclarationStatement",
												"src": "990:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1021:52:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1035:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1055:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1043:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 438,
														"isOffset": false,
														"isSlot": false,
														"src": "1055:7:3",
														"valueSize": 1
													},
													{
														"declaration": 444,
														"isOffset": false,
														"isSlot": false,
														"src": "1035:4:3",
														"valueSize": 1
													}
												],
												"id": 446,
												"nodeType": "InlineAssembly",
												"src": "1012:61:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1089:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1096:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1089:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 442,
												"id": 450,
												"nodeType": "Return",
												"src": "1082:15:3"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "157:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "747:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:17:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "787:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:6:3"
									},
									"scope": 729,
									"src": "727:377:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "2092:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 463,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2118:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$729",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$729",
																				"typeString": "library Address"
																			}
																		],
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2110:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 461,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2110:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2110:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2110:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 466,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2135:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2110:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2143:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2102:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2102:73:3"
											},
											{
												"assignments": [
													472,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "2187:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 471,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2187:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 479,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 473,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "2205:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2205:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 475,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2227:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2205:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "2256:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2265:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2248:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "2248:78:3"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1110:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2040:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2067:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:43:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:0:3"
									},
									"scope": 729,
									"src": "2021:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "3164:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "3194:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "3202:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 496,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															523
														],
														"referencedDeclaration": 523,
														"src": "3181:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 495,
												"id": 501,
												"nodeType": "Return",
												"src": "3174:67:3"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "2339:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "3097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "3113:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:35:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "3150:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3150:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3149:14:3"
									},
									"scope": 729,
									"src": "3075:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3617:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3656:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3664:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3670:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 519,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3673:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 515,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															593
														],
														"referencedDeclaration": 593,
														"src": "3634:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 514,
												"id": 521,
												"nodeType": "Return",
												"src": "3627:59:3"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "3254:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3501:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3525:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3525:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3552:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3552:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:93:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3603:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:14:3"
									},
									"scope": 729,
									"src": "3470:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "4198:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "4237:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4245:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 538,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "4251:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4258:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 535,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															593
														],
														"referencedDeclaration": 593,
														"src": "4215:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 534,
												"id": 541,
												"nodeType": "Return",
												"src": "4208:94:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3699:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "4095:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "4119:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "4146:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:80:3"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "4184:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4184:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:14:3"
									},
									"scope": 729,
									"src": "4055:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "4736:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 560,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4762:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$729",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$729",
																				"typeString": "library Address"
																			}
																		],
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4754:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 558,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4754:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4754:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4754:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 563,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4779:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4754:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "4746:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 570,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "4856:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 569,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "4845:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4845:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4865:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4837:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "4837:60:3"
											},
											{
												"assignments": [
													576,
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "4909:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 575,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4909:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "4923:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 577,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4923:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 579,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4950:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4950:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 581,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4969:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4950:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4908:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "5015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 588,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "5024:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 589,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5036:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 586,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4998:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 556,
												"id": 591,
												"nodeType": "Return",
												"src": "4991:58:3"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "4315:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4597:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4621:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4621:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4671:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:116:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4722:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 554,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4722:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:14:3"
									},
									"scope": 729,
									"src": "4557:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "5333:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "5369:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5377:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 603,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															610,
															645
														],
														"referencedDeclaration": 645,
														"src": "5350:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 602,
												"id": 608,
												"nodeType": "Return",
												"src": "5343:80:3"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "5062:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "5261:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "5277:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 597,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5277:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:35:3"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "5319:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:14:3"
									},
									"scope": 729,
									"src": "5233:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5772:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 624,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "5801:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 623,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "5790:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5782:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5782:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "5782:67:3"
											},
											{
												"assignments": [
													630,
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 630,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "5861:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 629,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5861:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "5875:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 631,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5875:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"arguments": [
														{
															"id": 635,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "5920:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 633,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "5902:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5902:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5860:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 639,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5959:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 640,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5968:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 641,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "5980:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 638,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "5942:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 621,
												"id": 643,
												"nodeType": "Return",
												"src": "5935:58:3"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "5436:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5651:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5675:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5675:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5702:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5702:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5641:93:3"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5758:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5758:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:14:3"
									},
									"scope": 729,
									"src": "5614:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "6276:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 656,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "6314:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "6322:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6328:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 655,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															697
														],
														"referencedDeclaration": 697,
														"src": "6293:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 654,
												"id": 660,
												"nodeType": "Return",
												"src": "6286:84:3"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "6006:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6209:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6225:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6225:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6208:35:3"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6262:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6262:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6261:14:3"
									},
									"scope": 729,
									"src": "6179:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "6718:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 676,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "6747:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 675,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "6736:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6728:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "6728:69:3"
											},
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "6809:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6809:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "6823:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6823:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6870:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "6850:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6850:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6850:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6808:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "6909:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 692,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "6918:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 693,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "6930:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 690,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6892:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 673,
												"id": 695,
												"nodeType": "Return",
												"src": "6885:58:3"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "6383:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "6602:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "6626:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6626:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "6653:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6653:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:93:3"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "6704:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6704:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:14:3"
									},
									"scope": 729,
									"src": "6563:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "7330:532:3",
										"statements": [
											{
												"condition": {
													"id": 709,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 700,
													"src": "7344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "7401:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 713,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "7485:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7485:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7505:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7485:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 723,
																"nodeType": "Block",
																"src": "7793:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 720,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "7818:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 719,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7811:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7811:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 722,
																		"nodeType": "ExpressionStatement",
																		"src": "7811:20:3"
																	}
																]
															},
															"id": 724,
															"nodeType": "IfStatement",
															"src": "7481:365:3",
															"trueBody": {
																"id": 718,
																"nodeType": "Block",
																"src": "7508:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7628:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7650:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7679:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7673:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7673:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7654:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7722:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7726:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7718:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7718:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7739:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7711:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7711:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7711:44:3"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 702,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7679:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 702,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7726:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 717,
																		"nodeType": "InlineAssembly",
																		"src": "7619:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "7340:516:3",
												"trueBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "7353:42:3",
													"statements": [
														{
															"expression": {
																"id": 710,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "7374:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 708,
															"id": 711,
															"nodeType": "Return",
															"src": "7367:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "6956:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "7205:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7205:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "7227:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "7260:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7260:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7195:97:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "7316:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7316:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7315:14:3"
									},
									"scope": 729,
									"src": "7170:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 730,
							"src": "135:7729:3"
						}
					],
					"src": "33:7832:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							751
						]
					},
					"id": 752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 732,
								"nodeType": "StructuredDocumentation",
								"src": "67:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 751,
							"linearizedBaseContracts": [
								751
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "658:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 737,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "675:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "675:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 736,
												"id": 739,
												"nodeType": "Return",
												"src": "668:17:4"
											}
										]
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:4"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "649:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:9:4"
									},
									"scope": 751,
									"src": "596:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "765:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 746,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "782:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "782:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 745,
												"id": 748,
												"nodeType": "Return",
												"src": "775:15:4"
											}
										]
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:2:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "749:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 743,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "749:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:16:4"
									},
									"scope": 751,
									"src": "698:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 752,
							"src": "564:235:4"
						}
					],
					"src": "33:767:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1138
						]
					},
					"id": 1139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 753,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 754,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1138,
							"linearizedBaseContracts": [
								1138
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "865:98:5",
										"statements": [
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "875:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 771,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "887:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 769,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "891:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 772,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "906:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "910:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 779,
												"nodeType": "IfStatement",
												"src": "902:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 777,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 765,
													"id": 778,
													"nodeType": "Return",
													"src": "913:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 781,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 782,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 765,
												"id": 783,
												"nodeType": "Return",
												"src": "940:16:5"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "805:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "816:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:5"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "850:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "856:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:5"
									},
									"scope": 1138,
									"src": "789:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "1185:75:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 797,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "1199:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 798,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "1203:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 804,
												"nodeType": "IfStatement",
												"src": "1195:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 802,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 796,
													"id": 803,
													"nodeType": "Return",
													"src": "1206:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "1247:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 807,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "1251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 809,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 796,
												"id": 810,
												"nodeType": "Return",
												"src": "1233:20:5"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1170:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1176:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:5"
									},
									"scope": 1138,
									"src": "1109:151:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "1484:359:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1716:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "1712:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 829,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 823,
													"id": 830,
													"nodeType": "Return",
													"src": "1724:16:5"
												}
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "1750:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 834,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1762:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 835,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "1766:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 838,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "1781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 839,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1785:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 841,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "1790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 847,
												"nodeType": "IfStatement",
												"src": "1777:33:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 845,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 823,
													"id": 846,
													"nodeType": "Return",
													"src": "1793:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 849,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "1834:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 850,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 823,
												"id": 851,
												"nodeType": "Return",
												"src": "1820:16:5"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1424:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1435:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:5"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1469:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1475:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:5"
									},
									"scope": 1138,
									"src": "1408:435:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "2068:76:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2082:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "2078:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 870,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 864,
													"id": 871,
													"nodeType": "Return",
													"src": "2090:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "2131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 875,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "2135:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 877,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 864,
												"id": 878,
												"nodeType": "Return",
												"src": "2117:20:5"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:5"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:5"
									},
									"scope": 1138,
									"src": "1992:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2379:76:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 892,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "2393:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 899,
												"nodeType": "IfStatement",
												"src": "2389:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 897,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 891,
													"id": 898,
													"nodeType": "Return",
													"src": "2401:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 901,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "2442:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 902,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "2446:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 904,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 891,
												"id": 905,
												"nodeType": "Return",
												"src": "2428:20:5"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2319:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2364:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2370:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:5"
									},
									"scope": 1138,
									"src": "2303:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "2757:108:5",
										"statements": [
											{
												"assignments": [
													918
												],
												"declarations": [
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "2767:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 919,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2779:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 920,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "2783:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 924,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "2802:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 925,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "2807:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:5"
											},
											{
												"expression": {
													"id": 930,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 918,
													"src": "2857:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 916,
												"id": 931,
												"nodeType": "Return",
												"src": "2850:8:5"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "2703:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "2714:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:5"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "2748:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:5"
									},
									"scope": 1138,
									"src": "2690:175:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "3203:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 944,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "3221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 945,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "3226:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 950,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "3279:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 951,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3283:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 942,
												"id": 953,
												"nodeType": "Return",
												"src": "3272:12:5"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3160:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3194:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:5"
									},
									"scope": 1138,
									"src": "3136:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "3605:148:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "3619:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"nodeType": "IfStatement",
												"src": "3615:20:5",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 964,
													"id": 969,
													"nodeType": "Return",
													"src": "3627:8:5"
												}
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 988,
														"src": "3645:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 973,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "3657:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 974,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "3661:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 978,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "3680:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 979,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "3684:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 981,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "3689:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3672:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:5"
											},
											{
												"expression": {
													"id": 986,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 972,
													"src": "3745:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 987,
												"nodeType": "Return",
												"src": "3738:8:5"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3551:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3562:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:5"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3596:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:5"
									},
									"scope": 1138,
									"src": "3538:215:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "4284:83:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1000,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "4302:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4294:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1006,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "4355:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1007,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "4359:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 998,
												"id": 1009,
												"nodeType": "Return",
												"src": "4348:12:5"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4230:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4241:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4275:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:5"
									},
									"scope": 1138,
									"src": "4217:150:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "4887:81:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "4905:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4897:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1028,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "4956:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1029,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "4960:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1020,
												"id": 1031,
												"nodeType": "Return",
												"src": "4949:12:5"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4833:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4844:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:5"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4878:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:5"
									},
									"scope": 1138,
									"src": "4820:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "5527:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1046,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "5545:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1047,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "5550:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1049,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "5553:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1052,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "5583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1053,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "5587:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1044,
												"id": 1055,
												"nodeType": "Return",
												"src": "5576:12:5"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5445:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5456:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5467:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1039,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:5"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5518:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:5"
									},
									"scope": 1138,
									"src": "5432:163:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "5669:103:5",
										"statements": [
											{
												"assignments": [
													1067
												],
												"declarations": [
													{
														"constant": false,
														"id": 1067,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "5679:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5679:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1072,
												"initialValue": {
													"arguments": [
														{
															"id": 1069,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "5695:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1070,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "5698:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1068,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "5691:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:21:5"
											},
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "d",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "5710:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"arguments": [
														{
															"id": 1076,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "5726:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1075,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															955,
															1057
														],
														"referencedDeclaration": 955,
														"src": "5722:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5710:21:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1082,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "5756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1083,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "5759:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1081,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1011,
																	1113
																],
																"referencedDeclaration": 1011,
																"src": "5752:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5752:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1085,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "5763:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1080,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "5748:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5748:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1087,
												"nodeType": "Return",
												"src": "5741:24:5"
											}
										]
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "5615:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "m",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "5626:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5614:22:5"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "5660:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5659:9:5"
									},
									"scope": 1138,
									"src": "5601:171:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "6524:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1102,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "6542:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6546:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6542:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1105,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "6549:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6534:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "6534:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "6579:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1109,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "6583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6579:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1111,
												"nodeType": "Return",
												"src": "6572:12:5"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "5778:646:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "6442:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "6453:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "6464:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1095,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6464:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6441:50:5"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "6515:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:9:5"
									},
									"scope": 1138,
									"src": "6429:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "7332:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1126,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "7350:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7354:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7350:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1129,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "7357:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7342:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "7342:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "7387:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "7391:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7387:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1135,
												"nodeType": "Return",
												"src": "7380:12:5"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "6597:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7250:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7261:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7272:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7272:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7249:50:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "7323:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7322:9:5"
									},
									"scope": 1138,
									"src": "7237:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1139,
							"src": "630:6771:5"
						}
					],
					"src": "33:7368:5"
				},
				"id": 5
			},
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"ast": {
					"absolutePath": "contracts/distribution/TombGenesisRewardPool.sol",
					"exportedSymbols": {
						"Address": [
							729
						],
						"Context": [
							751
						],
						"IERC20": [
							219
						],
						"Operator": [
							2323
						],
						"Ownable": [
							141
						],
						"PolyGenesisRewardPool": [
							2212
						],
						"SafeERC20": [
							432
						],
						"SafeMath": [
							1138
						]
					},
					"id": 2213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1140,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1141,
							"nodeType": "ImportDirective",
							"scope": 2213,
							"sourceUnit": 220,
							"src": "70:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1142,
							"nodeType": "ImportDirective",
							"scope": 2213,
							"sourceUnit": 433,
							"src": "128:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1143,
							"nodeType": "ImportDirective",
							"scope": 2213,
							"sourceUnit": 1139,
							"src": "195:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/owner/Operator.sol",
							"file": "../owner/Operator.sol",
							"id": 1144,
							"nodeType": "ImportDirective",
							"scope": 2213,
							"sourceUnit": 2324,
							"src": "254:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1145,
										"name": "Operator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2323,
										"src": "498:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Operator_$2323",
											"typeString": "contract Operator"
										}
									},
									"id": 1146,
									"nodeType": "InheritanceSpecifier",
									"src": "498:8:6"
								}
							],
							"contractDependencies": [
								141,
								751,
								2323
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2212,
							"linearizedBaseContracts": [
								2212,
								2323,
								141,
								751
							],
							"name": "PolyGenesisRewardPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1149,
									"libraryName": {
										"id": 1147,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1138,
										"src": "520:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1138",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "514:27:6",
									"typeName": {
										"id": 1148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1152,
									"libraryName": {
										"id": 1150,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 432,
										"src": "553:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$432",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "547:27:6",
									"typeName": {
										"id": 1151,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 219,
										"src": "567:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$219",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "PolyGenesisRewardPool.UserInfo",
									"id": 1157,
									"members": [
										{
											"constant": false,
											"id": 1154,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1157,
											"src": "636:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "636:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1156,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"scope": 1157,
											"src": "703:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "703:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 2212,
									"src": "609:159:6",
									"visibility": "public"
								},
								{
									"canonicalName": "PolyGenesisRewardPool.PoolInfo",
									"id": 1168,
									"members": [
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "token",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "830:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$219",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1158,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 219,
												"src": "830:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1161,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "886:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "886:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1163,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "988:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "988:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1165,
											"mutability": "mutable",
											"name": "accStonePerShare",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "1065:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1164,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1065:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1167,
											"mutability": "mutable",
											"name": "isStarted",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "1154:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1166,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1154:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 2212,
									"src": "803:406:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e177bb38",
									"id": 1170,
									"mutability": "mutable",
									"name": "Poly",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1217:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$219",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1169,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 219,
										"src": "1217:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$219",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1173,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1271:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
										"typeString": "struct PolyGenesisRewardPool.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1171,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1168,
											"src": "1271:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
												"typeString": "struct PolyGenesisRewardPool.PoolInfo"
											}
										},
										"id": 1172,
										"nodeType": "ArrayTypeName",
										"src": "1271:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage_ptr",
											"typeString": "struct PolyGenesisRewardPool.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1176,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1320:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1174,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1320:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1175,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1347:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1182,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1410:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))"
									},
									"typeName": {
										"id": 1181,
										"keyType": {
											"id": 1177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1418:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1410:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))"
										},
										"valueType": {
											"id": 1180,
											"keyType": {
												"id": 1178,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1437:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1429:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$",
												"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo)"
											},
											"valueType": {
												"id": 1179,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1157,
												"src": "1448:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
													"typeString": "struct PolyGenesisRewardPool.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1185,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1571:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1183,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1571:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1604:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f96dc11",
									"id": 1187,
									"mutability": "mutable",
									"name": "poolStartTime",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1656:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1656:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e271dd5",
									"id": 1189,
									"mutability": "mutable",
									"name": "poolEndTime",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1733:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1733:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f7caf52",
									"id": 1192,
									"mutability": "mutable",
									"name": "PolyPerSecond",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1784:55:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1784:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e31343436373539323539323539323539",
										"id": 1191,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:24:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_144675925925925900_by_1",
											"typeString": "int_const 144675925925925900"
										},
										"value": "0.1446759259259259"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "943f013d",
									"id": 1195,
									"mutability": "mutable",
									"name": "runningTime",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1882:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1193,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1882:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1194,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1911:6:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_172800_by_1",
											"typeString": "int_const 172800"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "09cf6091",
									"id": 1198,
									"mutability": "constant",
									"name": "TOTAL_REWARDS",
									"nodeType": "VariableDeclaration",
									"scope": 2212,
									"src": "1934:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1934:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235303030",
										"id": 1197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1974:11:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000000"
										},
										"value": "25000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1206,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2028:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2050:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2071:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:59:6"
									},
									"src": "2014:73:6"
								},
								{
									"anonymous": false,
									"id": 1214,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2108:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2130:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2151:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:59:6"
									},
									"src": "2093:74:6"
								},
								{
									"anonymous": false,
									"id": 1222,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2197:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2219:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2240:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:59:6"
									},
									"src": "2173:83:6"
								},
								{
									"anonymous": false,
									"id": 1228,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2279:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2301:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2278:38:6"
									},
									"src": "2262:55:6"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "2349:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2368:12:6",
															"subExpression": {
																"id": 1231,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "2369:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47656e657369733a20616c726561647920696e697469616c697a6564",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2382:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32f8412976d6b5b49cfff0c2ce7a367dff93ea43e7fcecc77915dca5b7ef6b05",
																"typeString": "literal_string \"Genesis: already initialized\""
															},
															"value": "Genesis: already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32f8412976d6b5b49cfff0c2ce7a367dff93ea43e7fcecc77915dca5b7ef6b05",
																"typeString": "literal_string \"Genesis: already initialized\""
															}
														],
														"id": 1230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2360:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "2360:53:6"
											},
											{
												"id": 1236,
												"nodeType": "PlaceholderStatement",
												"src": "2426:1:6"
											}
										]
									},
									"id": 1238,
									"name": "notInitialized",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2349:0:6"
									},
									"src": "2325:110:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "2545:37:6",
										"statements": [
											{
												"expression": {
													"id": 1243,
													"name": "initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1176,
													"src": "2563:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1244,
												"nodeType": "Return",
												"src": "2556:18:6"
											}
										]
									},
									"functionSelector": "392e53cd",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2515:2:6"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2539:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2539:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2538:6:6"
									},
									"scope": 2212,
									"src": "2493:89:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "2710:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1258,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2729:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2729:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1260,
																"name": "_poolStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "2747:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2729:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c617465",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															},
															"value": "late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2721:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2721:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "2721:49:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1265,
														"name": "_Poly",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "2785:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2802:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2794:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1266,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2794:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2794:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2785:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1277,
												"nodeType": "IfStatement",
												"src": "2781:45:6",
												"trueBody": {
													"expression": {
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1271,
															"name": "Poly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "2806:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 1273,
																	"name": "_Poly",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "2820:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1272,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "2813:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$219_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2813:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														"src": "2806:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$219",
															"typeString": "contract IERC20"
														}
													},
													"id": 1276,
													"nodeType": "ExpressionStatement",
													"src": "2806:20:6"
												}
											},
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1278,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "2837:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1279,
														"name": "_poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "2853:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2837:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2837:30:6"
											},
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1282,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "2878:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1283,
															"name": "poolStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "2892:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1284,
															"name": "runningTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "2908:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2892:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2878:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "2878:41:6"
											},
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1288,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "2930:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2944:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2930:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "2930:18:6"
											}
										]
									},
									"functionSelector": "cd6dc687",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1253,
											"modifierName": {
												"id": 1252,
												"name": "notInitialized",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1238,
												"src": "2682:14:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2682:14:6"
										},
										{
											"id": 1255,
											"modifierName": {
												"id": 1254,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2265,
												"src": "2697:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2697:12:6"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "_Poly",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "2621:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "_poolStartTime",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "2645:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:64:6"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:0:6"
									},
									"scope": 2212,
									"src": "2590:366:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "3023:204:6",
										"statements": [
											{
												"assignments": [
													1299
												],
												"declarations": [
													{
														"constant": false,
														"id": 1299,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "3034:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"expression": {
														"id": 1300,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "3051:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3051:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3034:32:6"
											},
											{
												"body": {
													"id": 1323,
													"nodeType": "Block",
													"src": "3120:100:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$219",
																			"typeString": "contract IERC20"
																		},
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1314,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1173,
																					"src": "3143:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1316,
																				"indexExpression": {
																					"id": 1315,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1304,
																					"src": "3152:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3143:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1168_storage",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
																				}
																			},
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1159,
																			"src": "3143:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1318,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "3166:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "3143:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f",
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3174:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f332d0f7df98f4c5c557650dceb131de43a52d33f8c55bd6783de1a9d56d3a5c",
																			"typeString": "literal_string \"PolyGenesisPool: existing pool?\""
																		},
																		"value": "PolyGenesisPool: existing pool?"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f332d0f7df98f4c5c557650dceb131de43a52d33f8c55bd6783de1a9d56d3a5c",
																			"typeString": "literal_string \"PolyGenesisPool: existing pool?\""
																		}
																	],
																	"id": 1313,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3135:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3135:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "3135:73:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1307,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "3099:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1308,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "3105:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3099:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"initializationExpression": {
													"assignments": [
														1304
													],
													"declarations": [
														{
															"constant": false,
															"id": 1304,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"scope": 1324,
															"src": "3082:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1303,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3082:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1306,
													"initialValue": {
														"hexValue": "30",
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3096:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3082:15:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3113:5:6",
														"subExpression": {
															"id": 1310,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "3115:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1312,
													"nodeType": "ExpressionStatement",
													"src": "3113:5:6"
												},
												"nodeType": "ForStatement",
												"src": "3077:143:6"
											}
										]
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPoolDuplicate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1294,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "2994:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:15:6"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3023:0:6"
									},
									"scope": 2212,
									"src": "2966:261:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "3460:1122:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1340,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "3490:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														],
														"id": 1339,
														"name": "checkPoolDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "3471:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$219_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "3471:26:6"
											},
											{
												"condition": {
													"id": 1343,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1332,
													"src": "3512:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "3508:61:6",
												"trueBody": {
													"id": 1347,
													"nodeType": "Block",
													"src": "3525:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1344,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "3540:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3540:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1346,
															"nodeType": "ExpressionStatement",
															"src": "3540:17:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1349,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3583:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3583:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1351,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "3601:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3583:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1388,
													"nodeType": "Block",
													"src": "3924:189:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1373,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "3975:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3994:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3975:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1376,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "3999:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1377,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4017:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4017:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3999:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3975:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1387,
															"nodeType": "IfStatement",
															"src": "3971:131:6",
															"trueBody": {
																"id": 1386,
																"nodeType": "Block",
																"src": "4034:68:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1381,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1334,
																				"src": "4053:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1382,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4071:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4071:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4053:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1385,
																		"nodeType": "ExpressionStatement",
																		"src": "4053:33:6"
																	}
																]
															}
														}
													]
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "3579:534:6",
												"trueBody": {
													"id": 1372,
													"nodeType": "Block",
													"src": "3616:302:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1353,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "3668:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3687:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3668:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1370,
																"nodeType": "Block",
																"src": "3762:145:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1361,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1334,
																				"src": "3785:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1362,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "3803:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3785:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1369,
																		"nodeType": "IfStatement",
																		"src": "3781:111:6",
																		"trueBody": {
																			"id": 1368,
																			"nodeType": "Block",
																			"src": "3818:74:6",
																			"statements": [
																				{
																					"expression": {
																						"id": 1366,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1364,
																							"name": "_lastRewardTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1334,
																							"src": "3841:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1365,
																							"name": "poolStartTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1187,
																							"src": "3859:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3841:31:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1367,
																					"nodeType": "ExpressionStatement",
																					"src": "3841:31:6"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1371,
															"nodeType": "IfStatement",
															"src": "3664:243:6",
															"trueBody": {
																"id": 1360,
																"nodeType": "Block",
																"src": "3690:66:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1356,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1334,
																				"src": "3709:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1357,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "3727:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3709:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1359,
																		"nodeType": "ExpressionStatement",
																		"src": "3709:31:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "_isStarted",
														"nodeType": "VariableDeclaration",
														"scope": 1425,
														"src": "4123:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1390,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4123:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1392,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "4151:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1393,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "4170:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4151:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1395,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4150:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1396,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "4198:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1397,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4217:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4217:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4198:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1400,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4197:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4150:83:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4123:110:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1407,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "4290:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$219",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1408,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "4324:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1409,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "4367:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4416:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 1411,
																	"name": "_isStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "4444:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$219",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1406,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "4258:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1168_storage_ptr_$",
																	"typeString": "type(struct PolyGenesisRewardPool.PoolInfo storage pointer)"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"token",
																"allocPoint",
																"lastRewardTime",
																"accStonePerShare",
																"isStarted"
															],
															"nodeType": "FunctionCall",
															"src": "4258:212:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_memory_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1168_memory_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1403,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "4244:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4244:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$1168_storage_$returns$__$",
															"typeString": "function (struct PolyGenesisRewardPool.PoolInfo storage ref)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4244:227:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "4244:227:6"
											},
											{
												"condition": {
													"id": 1415,
													"name": "_isStarted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1391,
													"src": "4486:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"nodeType": "IfStatement",
												"src": "4482:93:6",
												"trueBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "4498:77:6",
													"statements": [
														{
															"expression": {
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1416,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "4513:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1419,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "4551:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1417,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "4531:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 933,
																		"src": "4531:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4531:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4513:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "4513:50:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "96805e54",
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1337,
											"modifierName": {
												"id": 1336,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2265,
												"src": "3447:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3447:12:6"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3328:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3358:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1329,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "3358:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3382:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3382:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_lastRewardTime",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3409:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:122:6"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:0:6"
									},
									"scope": 2212,
									"src": "3305:1277:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "4746:285:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1435,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "4757:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4757:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "4757:17:6"
											},
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "4785:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1438,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1168,
															"src": "4785:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"baseExpression": {
														"id": 1440,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "4809:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1442,
													"indexExpression": {
														"id": 1441,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "4818:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4809:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1168_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4785:38:6"
											},
											{
												"condition": {
													"expression": {
														"id": 1444,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "4838:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isStarted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1167,
													"src": "4838:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1458,
												"nodeType": "IfStatement",
												"src": "4834:150:6",
												"trueBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "4854:130:6",
													"statements": [
														{
															"expression": {
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1446,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "4869:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1453,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "4946:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1449,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1439,
																						"src": "4907:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																							"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																						}
																					},
																					"id": 1450,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1161,
																					"src": "4907:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1447,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1185,
																					"src": "4887:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 955,
																				"src": "4887:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4887:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 933,
																		"src": "4887:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4887:85:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4869:103:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "4869:103:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1459,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "4994:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1161,
														"src": "4994:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1462,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "5012:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4994:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "4994:29:6"
											}
										]
									},
									"functionSelector": "1ab06ee5",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1433,
											"modifierName": {
												"id": 1432,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2265,
												"src": "4733:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4733:12:6"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "4691:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "4705:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4690:35:6"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4746:0:6"
									},
									"scope": 2212,
									"src": "4678:353:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "5202:559:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1475,
														"name": "_fromTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "5217:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1476,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "5230:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5217:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1480,
												"nodeType": "IfStatement",
												"src": "5213:34:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5246:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1474,
													"id": 1479,
													"nodeType": "Return",
													"src": "5239:8:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1481,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "5262:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1482,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "5273:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5262:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1537,
													"nodeType": "Block",
													"src": "5527:227:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1511,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "5546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1512,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "5557:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5546:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1516,
															"nodeType": "IfStatement",
															"src": "5542:38:6",
															"trueBody": {
																"expression": {
																	"hexValue": "30",
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5579:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1474,
																"id": 1515,
																"nodeType": "Return",
																"src": "5572:8:6"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1517,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5599:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1518,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "5612:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5599:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1528,
															"nodeType": "IfStatement",
															"src": "5595:84:6",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1525,
																			"name": "PolyPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "5665:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1522,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "5646:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1520,
																					"name": "_toTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1470,
																					"src": "5634:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 955,
																				"src": "5634:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 989,
																		"src": "5634:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5634:45:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1474,
																"id": 1527,
																"nodeType": "Return",
																"src": "5627:52:6"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1534,
																		"name": "PolyPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "5728:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1531,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1468,
																				"src": "5713:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1529,
																				"name": "_toTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1470,
																				"src": "5701:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 955,
																			"src": "5701:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5701:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 989,
																	"src": "5701:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5701:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1474,
															"id": 1536,
															"nodeType": "Return",
															"src": "5694:48:6"
														}
													]
												},
												"id": 1538,
												"nodeType": "IfStatement",
												"src": "5258:496:6",
												"trueBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "5286:235:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1484,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5305:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1485,
																	"name": "poolEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "5318:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5305:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1489,
															"nodeType": "IfStatement",
															"src": "5301:38:6",
															"trueBody": {
																"expression": {
																	"hexValue": "30",
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5338:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1474,
																"id": 1488,
																"nodeType": "Return",
																"src": "5331:8:6"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1490,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5358:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1491,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "5371:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5358:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1501,
															"nodeType": "IfStatement",
															"src": "5354:88:6",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1498,
																			"name": "PolyPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "5428:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1495,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "5409:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1493,
																					"name": "poolEndTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "5393:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 955,
																				"src": "5393:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5393:30:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 989,
																		"src": "5393:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5393:49:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1474,
																"id": 1500,
																"nodeType": "Return",
																"src": "5386:56:6"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1507,
																		"name": "PolyPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "5495:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1504,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1468,
																				"src": "5480:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1502,
																				"name": "poolEndTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "5464:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 955,
																			"src": "5464:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5464:26:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 989,
																	"src": "5464:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5464:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1474,
															"id": 1509,
															"nodeType": "Return",
															"src": "5457:52:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "231f0c6a",
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneratedReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_fromTime",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "5136:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "_toTime",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "5155:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:36:6"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "5193:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5193:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5192:9:6"
									},
									"scope": 2212,
									"src": "5108:653:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "5907:694:6",
										"statements": [
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1636,
														"src": "5918:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1549,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1168,
															"src": "5918:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"baseExpression": {
														"id": 1551,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "5942:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1553,
													"indexExpression": {
														"id": 1552,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "5951:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5942:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1168_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5918:38:6"
											},
											{
												"assignments": [
													1556
												],
												"declarations": [
													{
														"constant": false,
														"id": 1556,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1636,
														"src": "5967:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1555,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1157,
															"src": "5967:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1562,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1557,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5991:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1559,
														"indexExpression": {
															"id": 1558,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "6000:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5991:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1561,
													"indexExpression": {
														"id": 1560,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "6006:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5991:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1157_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5967:45:6"
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "accStonePerShare",
														"nodeType": "VariableDeclaration",
														"scope": 1636,
														"src": "6023:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6023:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1567,
												"initialValue": {
													"expression": {
														"id": 1565,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "6050:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accStonePerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1165,
													"src": "6050:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6023:48:6"
											},
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1636,
														"src": "6082:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6082:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1578,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1575,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6133:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2212",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2212",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6125:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6125:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6125:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"expression": {
																"id": 1570,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "6104:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1159,
															"src": "6104:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "6104:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6082:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1579,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6154:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6154:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1581,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "6172:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1163,
															"src": "6172:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6154:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1584,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "6195:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6210:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6195:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6154:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1622,
												"nodeType": "IfStatement",
												"src": "6150:362:6",
												"trueBody": {
													"id": 1621,
													"nodeType": "Block",
													"src": "6213:299:6",
													"statements": [
														{
															"assignments": [
																1589
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1589,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1621,
																	"src": "6228:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1588,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6228:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1596,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1591,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1550,
																			"src": "6274:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1163,
																		"src": "6274:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1593,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6295:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "6295:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1590,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "6255:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6255:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6228:83:6"
														},
														{
															"assignments": [
																1598
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1598,
																	"mutability": "mutable",
																	"name": "_PolyReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1621,
																	"src": "6326:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1597,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6326:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1607,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1605,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "6390:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1601,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1550,
																					"src": "6369:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1602,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1161,
																				"src": "6369:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1599,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1589,
																				"src": "6348:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "6348:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6348:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1011,
																	"src": "6348:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6348:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6326:80:6"
														},
														{
															"expression": {
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1608,
																	"name": "accStonePerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "6421:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1616,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1569,
																					"src": "6487:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 1613,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6477:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 1611,
																							"name": "_PolyReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1598,
																							"src": "6461:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1612,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 989,
																						"src": "6461:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1614,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6461:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1011,
																				"src": "6461:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6461:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1609,
																			"name": "accStonePerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "6440:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 933,
																		"src": "6440:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6440:60:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6421:79:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1620,
															"nodeType": "ExpressionStatement",
															"src": "6421:79:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1632,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1556,
																"src": "6577:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1156,
															"src": "6577:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6567:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1626,
																			"name": "accStonePerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "6545:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1623,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1556,
																				"src": "6529:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1154,
																			"src": "6529:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 989,
																		"src": "6529:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6529:33:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1011,
																"src": "6529:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6529:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "6529:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6529:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1635,
												"nodeType": "Return",
												"src": "6522:71:6"
											}
										]
									},
									"functionSelector": "ecf4deb9",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingStone",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "5846:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "5860:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5845:29:6"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "5898:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:9:6"
									},
									"scope": 2212,
									"src": "5824:777:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "6718:146:6",
										"statements": [
											{
												"assignments": [
													1641
												],
												"declarations": [
													{
														"constant": false,
														"id": 1641,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"scope": 1661,
														"src": "6729:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6729:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"initialValue": {
													"expression": {
														"id": 1642,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "6746:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6746:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6729:32:6"
											},
											{
												"body": {
													"id": 1659,
													"nodeType": "Block",
													"src": "6815:42:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1656,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "6841:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1655,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "6830:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6830:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1658,
															"nodeType": "ExpressionStatement",
															"src": "6830:15:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1649,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "6794:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1650,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "6800:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6794:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1660,
												"initializationExpression": {
													"assignments": [
														1646
													],
													"declarations": [
														{
															"constant": false,
															"id": 1646,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"scope": 1660,
															"src": "6777:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1645,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6777:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1648,
													"initialValue": {
														"hexValue": "30",
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6791:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6777:15:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6808:5:6",
														"subExpression": {
															"id": 1652,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "6810:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"nodeType": "ExpressionStatement",
													"src": "6808:5:6"
												},
												"nodeType": "ForStatement",
												"src": "6772:85:6"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:2:6"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6718:0:6"
									},
									"scope": 2212,
									"src": "6684:180:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "6981:869:6",
										"statements": [
											{
												"assignments": [
													1668
												],
												"declarations": [
													{
														"constant": false,
														"id": 1668,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "6992:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1667,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1168,
															"src": "6992:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": {
													"baseExpression": {
														"id": 1669,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "7016:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1671,
													"indexExpression": {
														"id": 1670,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "7025:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7016:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1168_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6992:38:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1673,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7045:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7045:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1675,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "7064:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1163,
														"src": "7064:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7045:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1680,
												"nodeType": "IfStatement",
												"src": "7041:77:6",
												"trueBody": {
													"id": 1679,
													"nodeType": "Block",
													"src": "7085:33:6",
													"statements": [
														{
															"functionReturnParameters": 1666,
															"id": 1678,
															"nodeType": "Return",
															"src": "7100:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1682
												],
												"declarations": [
													{
														"constant": false,
														"id": 1682,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "7128:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1681,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7128:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1688,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7179:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2212",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2212",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7171:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7171:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7171:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"expression": {
																"id": 1683,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "7150:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1159,
															"src": "7150:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "7150:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7150:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7128:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1692,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "7200:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7215:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7200:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1704,
												"nodeType": "IfStatement",
												"src": "7196:107:6",
												"trueBody": {
													"id": 1703,
													"nodeType": "Block",
													"src": "7218:85:6",
													"statements": [
														{
															"expression": {
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1695,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "7233:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1163,
																	"src": "7233:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1698,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7255:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7255:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7233:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1701,
															"nodeType": "ExpressionStatement",
															"src": "7233:37:6"
														},
														{
															"functionReturnParameters": 1666,
															"id": 1702,
															"nodeType": "Return",
															"src": "7285:7:6"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7317:15:6",
													"subExpression": {
														"expression": {
															"id": 1705,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "7318:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1167,
														"src": "7318:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1723,
												"nodeType": "IfStatement",
												"src": "7313:138:6",
												"trueBody": {
													"id": 1722,
													"nodeType": "Block",
													"src": "7334:117:6",
													"statements": [
														{
															"expression": {
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1708,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "7349:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1167,
																	"src": "7349:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7349:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "7349:21:6"
														},
														{
															"expression": {
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1714,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "7385:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1717,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1668,
																				"src": "7423:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1718,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1161,
																			"src": "7423:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1715,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "7403:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 933,
																		"src": "7403:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7403:36:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7385:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1721,
															"nodeType": "ExpressionStatement",
															"src": "7385:54:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1724,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "7465:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7483:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7465:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1764,
												"nodeType": "IfStatement",
												"src": "7461:334:6",
												"trueBody": {
													"id": 1763,
													"nodeType": "Block",
													"src": "7486:309:6",
													"statements": [
														{
															"assignments": [
																1728
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1728,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1763,
																	"src": "7501:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1727,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1735,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1730,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1668,
																			"src": "7547:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1163,
																		"src": "7547:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1732,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7568:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "7568:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1729,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "7528:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7528:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7501:83:6"
														},
														{
															"assignments": [
																1737
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1737,
																	"mutability": "mutable",
																	"name": "_PolyReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1763,
																	"src": "7599:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1736,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7599:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1746,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1744,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "7663:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1740,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1668,
																					"src": "7642:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1741,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1161,
																				"src": "7642:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1738,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1728,
																				"src": "7621:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "7621:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7621:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1011,
																	"src": "7621:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7621:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7599:80:6"
														},
														{
															"expression": {
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1747,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "7694:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accStonePerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1165,
																	"src": "7694:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1758,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1682,
																					"src": "7770:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 1755,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7760:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 1753,
																							"name": "_PolyReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1737,
																							"src": "7744:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1754,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 989,
																						"src": "7744:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1756,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7744:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1011,
																				"src": "7744:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7744:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1750,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1668,
																				"src": "7718:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1751,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accStonePerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1165,
																			"src": "7718:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 933,
																		"src": "7718:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7718:65:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7694:89:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1762,
															"nodeType": "ExpressionStatement",
															"src": "7694:89:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1765,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "7805:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1163,
														"src": "7805:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1768,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7827:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7827:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7805:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "7805:37:6"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "6960:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6959:14:6"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6981:0:6"
									},
									"scope": 2212,
									"src": "6940:910:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "7942:1026:6",
										"statements": [
											{
												"assignments": [
													1781
												],
												"declarations": [
													{
														"constant": false,
														"id": 1781,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "7953:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1780,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7953:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"expression": {
														"id": 1782,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7971:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7971:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7953:28:6"
											},
											{
												"assignments": [
													1786
												],
												"declarations": [
													{
														"constant": false,
														"id": 1786,
														"mutability": "mutable",
														"name": "_before",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "7992:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1785,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7992:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "323030",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8023:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_200_by_1",
																"typeString": "int_const 200"
															},
															"value": "200"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_200_by_1",
																"typeString": "int_const 200"
															}
														],
														"expression": {
															"id": 1787,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "8010:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ceil",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "8010:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8010:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7992:35:6"
											},
											{
												"assignments": [
													1793
												],
												"declarations": [
													{
														"constant": false,
														"id": 1793,
														"mutability": "mutable",
														"name": "_after",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "8038:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8038:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1801,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8076:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "323030",
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8067:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_200_by_1",
																		"typeString": "int_const 200"
																	},
																	"value": "200"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_200_by_1",
																		"typeString": "int_const 200"
																	}
																],
																"expression": {
																	"id": 1794,
																	"name": "_before",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1786,
																	"src": "8055:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 989,
																"src": "8055:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8055:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1011,
														"src": "8055:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8055:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8038:44:6"
											},
											{
												"assignments": [
													1803
												],
												"declarations": [
													{
														"constant": false,
														"id": 1803,
														"mutability": "mutable",
														"name": "_fixedAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "8093:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1802,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8093:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1808,
												"initialValue": {
													"arguments": [
														{
															"id": 1806,
															"name": "_after",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "8128:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1804,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "8116:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "8116:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8116:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8093:42:6"
											},
											{
												"assignments": [
													1810
												],
												"declarations": [
													{
														"constant": false,
														"id": 1810,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "8148:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1809,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1168,
															"src": "8148:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1814,
												"initialValue": {
													"baseExpression": {
														"id": 1811,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "8172:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1813,
													"indexExpression": {
														"id": 1812,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "8181:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8172:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1168_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8148:38:6"
											},
											{
												"assignments": [
													1816
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "8197:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1815,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1157,
															"src": "8197:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1817,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "8221:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1819,
														"indexExpression": {
															"id": 1818,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "8230:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8221:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1821,
													"indexExpression": {
														"id": 1820,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "8236:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8221:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1157_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8197:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1824,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "8266:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1823,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "8255:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8255:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "8255:16:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1827,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "8288:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1154,
														"src": "8288:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8302:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8288:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1863,
												"nodeType": "IfStatement",
												"src": "8284:291:6",
												"trueBody": {
													"id": 1862,
													"nodeType": "Block",
													"src": "8305:270:6",
													"statements": [
														{
															"assignments": [
																1832
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1832,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"scope": 1862,
																	"src": "8320:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1831,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8320:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1846,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1843,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "8392:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1156,
																		"src": "8392:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 1840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8382:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1836,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1810,
																							"src": "8355:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 1837,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accStonePerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1165,
																						"src": "8355:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1833,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1816,
																							"src": "8339:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																							}
																						},
																						"id": 1834,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1154,
																						"src": "8339:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1835,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 989,
																					"src": "8339:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8339:38:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1011,
																			"src": "8339:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8339:48:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 955,
																	"src": "8339:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8339:69:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8320:88:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1847,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "8427:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8438:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8427:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1861,
															"nodeType": "IfStatement",
															"src": "8423:141:6",
															"trueBody": {
																"id": 1860,
																"nodeType": "Block",
																"src": "8441:123:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1851,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1781,
																					"src": "8477:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1852,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1832,
																					"src": "8486:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1850,
																				"name": "safePolyTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2134,
																				"src": "8460:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8460:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1854,
																		"nodeType": "ExpressionStatement",
																		"src": "8460:35:6"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1856,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1781,
																					"src": "8530:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1857,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1832,
																					"src": "8539:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1855,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1228,
																				"src": "8519:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8519:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1859,
																		"nodeType": "EmitStatement",
																		"src": "8514:34:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1864,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "8589:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8599:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8589:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1900,
												"nodeType": "IfStatement",
												"src": "8585:252:6",
												"trueBody": {
													"id": 1899,
													"nodeType": "Block",
													"src": "8602:235:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1872,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1781,
																		"src": "8645:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1875,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8662:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2212",
																					"typeString": "contract PolyGenesisRewardPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2212",
																					"typeString": "contract PolyGenesisRewardPool"
																				}
																			],
																			"id": 1874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8654:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1873,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8654:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8654:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1877,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "8669:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1867,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "8617:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1159,
																		"src": "8617:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$219",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 278,
																	"src": "8617:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$219_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8617:60:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1879,
															"nodeType": "ExpressionStatement",
															"src": "8617:60:6"
														},
														{
															"expression": {
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1880,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "8692:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1154,
																	"src": "8692:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1886,
																			"name": "_fixedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1803,
																			"src": "8722:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1883,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1816,
																				"src": "8706:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1154,
																			"src": "8706:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 933,
																		"src": "8706:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8706:29:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8692:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1889,
															"nodeType": "ExpressionStatement",
															"src": "8692:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "307830316643376632433831616344394433386564344435303962314631373535354535343945463144",
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8774:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		"value": "0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D"
																	},
																	{
																		"id": 1896,
																		"name": "_after",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1793,
																		"src": "8818:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1890,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "8750:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1159,
																		"src": "8750:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$219",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "8750:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$219_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8750:75:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1898,
															"nodeType": "ExpressionStatement",
															"src": "8750:75:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1901,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "8847:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1156,
														"src": "8847:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8908:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1907,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "8881:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accStonePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1165,
																		"src": "8881:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1904,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "8865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1154,
																		"src": "8865:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 989,
																	"src": "8865:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8865:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1011,
															"src": "8865:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8865:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8847:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "8847:66:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1916,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "8937:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1917,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "8946:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1918,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "8952:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1915,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "8929:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8929:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1920,
												"nodeType": "EmitStatement",
												"src": "8924:36:6"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7904:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7918:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7903:31:6"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7942:0:6"
									},
									"scope": 2212,
									"src": "7887:1081:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "9060:756:6",
										"statements": [
											{
												"assignments": [
													1930
												],
												"declarations": [
													{
														"constant": false,
														"id": 1930,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "9071:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1929,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9071:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1933,
												"initialValue": {
													"expression": {
														"id": 1931,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9089:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9089:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9071:28:6"
											},
											{
												"assignments": [
													1935
												],
												"declarations": [
													{
														"constant": false,
														"id": 1935,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "9110:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1934,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1168,
															"src": "9110:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"baseExpression": {
														"id": 1936,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "9134:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1938,
													"indexExpression": {
														"id": 1937,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "9143:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9134:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1168_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9110:38:6"
											},
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "9159:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1940,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1157,
															"src": "9159:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1947,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1942,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "9183:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1944,
														"indexExpression": {
															"id": 1943,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "9192:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9183:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1946,
													"indexExpression": {
														"id": 1945,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "9198:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9183:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1157_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9159:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1949,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "9225:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																		"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1154,
																"src": "9225:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1951,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "9240:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9225:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9249:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9217:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9217:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1955,
												"nodeType": "ExpressionStatement",
												"src": "9217:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1957,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "9292:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1956,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "9281:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9281:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "9281:16:6"
											},
											{
												"assignments": [
													1961
												],
												"declarations": [
													{
														"constant": false,
														"id": 1961,
														"mutability": "mutable",
														"name": "_pending",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "9308:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9308:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1972,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "9380:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1156,
															"src": "9380:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9370:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1965,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1935,
																				"src": "9343:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accStonePerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1165,
																			"src": "9343:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1962,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1941,
																				"src": "9327:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1154,
																			"src": "9327:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 989,
																		"src": "9327:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9327:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1011,
																"src": "9327:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9327:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "9327:52:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9327:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9308:88:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1976,
														"name": "_pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "9411:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9422:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9411:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1990,
												"nodeType": "IfStatement",
												"src": "9407:129:6",
												"trueBody": {
													"id": 1989,
													"nodeType": "Block",
													"src": "9425:111:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1980,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "9457:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1981,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "9466:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1979,
																	"name": "safePolyTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "9440:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9440:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1983,
															"nodeType": "ExpressionStatement",
															"src": "9440:35:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1985,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "9506:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1986,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "9515:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1984,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "9495:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9495:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1988,
															"nodeType": "EmitStatement",
															"src": "9490:34:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1991,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "9550:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9560:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9550:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2014,
												"nodeType": "IfStatement",
												"src": "9546:138:6",
												"trueBody": {
													"id": 2013,
													"nodeType": "Block",
													"src": "9563:121:6",
													"statements": [
														{
															"expression": {
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1994,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "9578:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1154,
																	"src": "9578:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2000,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1926,
																			"src": "9608:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1997,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1941,
																				"src": "9592:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1154,
																			"src": "9592:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 955,
																		"src": "9592:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9592:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9578:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2003,
															"nodeType": "ExpressionStatement",
															"src": "9578:38:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2009,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "9655:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2010,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1926,
																		"src": "9664:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2004,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "9631:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1159,
																		"src": "9631:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$219",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "9631:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$219_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9631:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2012,
															"nodeType": "ExpressionStatement",
															"src": "9631:41:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2015,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "9694:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1156,
														"src": "9694:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9755:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2021,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "9728:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accStonePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1165,
																		"src": "9728:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2018,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "9712:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1154,
																		"src": "9712:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 989,
																	"src": "9712:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9712:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1011,
															"src": "9712:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9712:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9694:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "9694:66:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2030,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "9785:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2031,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "9794:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2032,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "9800:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2029,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "9776:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9776:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2034,
												"nodeType": "EmitStatement",
												"src": "9771:37:6"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "9022:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "9036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9021:31:6"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9060:0:6"
									},
									"scope": 2212,
									"src": "9004:812:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "9935:329:6",
										"statements": [
											{
												"assignments": [
													2042
												],
												"declarations": [
													{
														"constant": false,
														"id": 2042,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "9946:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 2041,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1168,
															"src": "9946:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2046,
												"initialValue": {
													"baseExpression": {
														"id": 2043,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "9970:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2045,
													"indexExpression": {
														"id": 2044,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "9979:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9970:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1168_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9946:38:6"
											},
											{
												"assignments": [
													2048
												],
												"declarations": [
													{
														"constant": false,
														"id": 2048,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "9995:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 2047,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1157,
															"src": "9995:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2055,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2049,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "10019:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 2051,
														"indexExpression": {
															"id": 2050,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "10028:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10019:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1157_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 2054,
													"indexExpression": {
														"expression": {
															"id": 2052,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10034:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10034:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10019:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1157_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9995:50:6"
											},
											{
												"assignments": [
													2057
												],
												"declarations": [
													{
														"constant": false,
														"id": 2057,
														"mutability": "mutable",
														"name": "_amount",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "10056:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10056:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2060,
												"initialValue": {
													"expression": {
														"id": 2058,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "10074:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1154,
													"src": "10074:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10056:29:6"
											},
											{
												"expression": {
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2061,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "10096:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1154,
														"src": "10096:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10110:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10096:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "10096:15:6"
											},
											{
												"expression": {
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2067,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "10122:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1157_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1156,
														"src": "10122:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10140:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10122:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "10122:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10176:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10176:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2080,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "10188:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2073,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "10152:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1159,
															"src": "10152:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "10152:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$219_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10152:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "10152:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2084,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10230:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10230:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2086,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "10242:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2087,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "10248:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2083,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "10212:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10212:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "EmitStatement",
												"src": "10207:49:6"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "9914:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9914:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9913:14:6"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9935:0:6"
									},
									"scope": 2212,
									"src": "9887:377:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "10443:300:6",
										"statements": [
											{
												"assignments": [
													2099
												],
												"declarations": [
													{
														"constant": false,
														"id": 2099,
														"mutability": "mutable",
														"name": "_PolyBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2133,
														"src": "10454:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2098,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2107,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2104,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10500:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2212",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2212",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10492:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10492:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10492:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 2100,
															"name": "Poly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "10477:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "10477:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10477:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10454:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2108,
														"name": "_PolyBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2099,
														"src": "10521:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10536:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10521:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2132,
												"nodeType": "IfStatement",
												"src": "10517:219:6",
												"trueBody": {
													"id": 2131,
													"nodeType": "Block",
													"src": "10539:197:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2111,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "10558:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2112,
																	"name": "_PolyBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "10568:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10558:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2129,
																"nodeType": "Block",
																"src": "10659:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2125,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "10696:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2126,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2095,
																					"src": "10701:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2122,
																					"name": "Poly",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "10678:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$219",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 253,
																				"src": "10678:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$219_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10678:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2128,
																		"nodeType": "ExpressionStatement",
																		"src": "10678:31:6"
																	}
																]
															},
															"id": 2130,
															"nodeType": "IfStatement",
															"src": "10554:171:6",
															"trueBody": {
																"id": 2121,
																"nodeType": "Block",
																"src": "10582:71:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2117,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "10619:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2118,
																					"name": "_PolyBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2099,
																					"src": "10624:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2114,
																					"name": "Poly",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "10601:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$219",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 253,
																				"src": "10601:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$219_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10601:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2120,
																		"nodeType": "ExpressionStatement",
																		"src": "10601:36:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePolyTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "10404:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "10417:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10403:30:6"
									},
									"returnParameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10443:0:6"
									},
									"scope": 2212,
									"src": "10378:365:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2145,
										"nodeType": "Block",
										"src": "10816:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2142,
															"name": "_Newoperator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "10844:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2141,
														"name": "transferOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2288,
														"src": "10827:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10827:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "10827:30:6"
											}
										]
									},
									"functionSelector": "b3ab15fb",
									"id": 2146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2139,
											"modifierName": {
												"id": 2138,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2265,
												"src": "10803:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10803:12:6"
										}
									],
									"name": "setOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "_Newoperator",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "10772:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10772:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10771:22:6"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10816:0:6"
									},
									"scope": 2212,
									"src": "10751:114:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "10976:501:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2157,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10991:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10991:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2159,
															"name": "poolEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "11009:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3930",
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11023:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														"src": "11009:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10991:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2202,
												"nodeType": "IfStatement",
												"src": "10987:441:6",
												"trueBody": {
													"id": 2201,
													"nodeType": "Block",
													"src": "11032:396:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$219",
																			"typeString": "contract IERC20"
																		},
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2164,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2148,
																			"src": "11155:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2165,
																			"name": "Poly",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "11165:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$219",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "11155:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "506f6c79",
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11171:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cc0d64153e884e99c45135430dd65c8d1084e51631864cd9fee71389237912d3",
																			"typeString": "literal_string \"Poly\""
																		},
																		"value": "Poly"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_cc0d64153e884e99c45135430dd65c8d1084e51631864cd9fee71389237912d3",
																			"typeString": "literal_string \"Poly\""
																		}
																	],
																	"id": 2163,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11147:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11147:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2169,
															"nodeType": "ExpressionStatement",
															"src": "11147:31:6"
														},
														{
															"assignments": [
																2171
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2171,
																	"mutability": "mutable",
																	"name": "length",
																	"nodeType": "VariableDeclaration",
																	"scope": 2201,
																	"src": "11193:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2170,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11193:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2174,
															"initialValue": {
																"expression": {
																	"id": 2172,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "11210:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
																		"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11210:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11193:32:6"
														},
														{
															"body": {
																"id": 2199,
																"nodeType": "Block",
																"src": "11283:134:6",
																"statements": [
																	{
																		"assignments": [
																			2186
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2186,
																				"mutability": "mutable",
																				"name": "pool",
																				"nodeType": "VariableDeclaration",
																				"scope": 2199,
																				"src": "11302:21:6",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo"
																				},
																				"typeName": {
																					"id": 2185,
																					"name": "PoolInfo",
																					"nodeType": "UserDefinedTypeName",
																					"referencedDeclaration": 1168,
																					"src": "11302:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2190,
																		"initialValue": {
																			"baseExpression": {
																				"id": 2187,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "11326:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1168_storage_$dyn_storage",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 2189,
																			"indexExpression": {
																				"id": 2188,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2176,
																				"src": "11335:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11326:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1168_storage",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11302:37:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_contract$_IERC20_$219",
																						"typeString": "contract IERC20"
																					},
																					"id": 2195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2192,
																						"name": "_token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2148,
																						"src": "11366:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$219",
																							"typeString": "contract IERC20"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"id": 2193,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2186,
																							"src": "11376:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1168_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 2194,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1159,
																						"src": "11376:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$219",
																							"typeString": "contract IERC20"
																						}
																					},
																					"src": "11366:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "706f6f6c2e746f6b656e",
																					"id": 2196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11388:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					},
																					"value": "pool.token"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					}
																				],
																				"id": 2191,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11358:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11358:43:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2198,
																		"nodeType": "ExpressionStatement",
																		"src": "11358:43:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2179,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "11262:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2180,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "11268:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11262:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2200,
															"initializationExpression": {
																"assignments": [
																	2176
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2176,
																		"mutability": "mutable",
																		"name": "pid",
																		"nodeType": "VariableDeclaration",
																		"scope": 2200,
																		"src": "11245:11:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2175,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11245:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2178,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11259:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "11245:15:6"
															},
															"loopExpression": {
																"expression": {
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "11276:5:6",
																	"subExpression": {
																		"id": 2182,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "11278:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2184,
																"nodeType": "ExpressionStatement",
																"src": "11276:5:6"
															},
															"nodeType": "ForStatement",
															"src": "11240:177:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2206,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "11458:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2207,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "11462:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2203,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "11438:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$219",
																"typeString": "contract IERC20"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "11438:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$219_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$219_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11438:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2209,
												"nodeType": "ExpressionStatement",
												"src": "11438:31:6"
											}
										]
									},
									"functionSelector": "54575af4",
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2155,
											"modifierName": {
												"id": 2154,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2265,
												"src": "10963:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10963:12:6"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "10911:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$219",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2147,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 219,
													"src": "10911:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "10926:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "10942:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10942:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10910:43:6"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10976:0:6"
									},
									"scope": 2212,
									"src": "10873:604:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2213,
							"src": "464:11016:6"
						}
					],
					"src": "35:11449:6"
				},
				"id": 6
			},
			"contracts/owner/Operator.sol": {
				"ast": {
					"absolutePath": "contracts/owner/Operator.sol",
					"exportedSymbols": {
						"Context": [
							751
						],
						"Operator": [
							2323
						],
						"Ownable": [
							141
						]
					},
					"id": 2324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2214,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2215,
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 142,
							"src": "70:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2216,
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 752,
							"src": "124:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2217,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 751,
										"src": "209:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$751",
											"typeString": "contract Context"
										}
									},
									"id": 2218,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:7"
								},
								{
									"baseName": {
										"id": 2219,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 141,
										"src": "218:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$141",
											"typeString": "contract Ownable"
										}
									},
									"id": 2220,
									"nodeType": "InheritanceSpecifier",
									"src": "218:7:7"
								}
							],
							"contractDependencies": [
								141,
								751
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2323,
							"linearizedBaseContracts": [
								2323,
								141,
								751
							],
							"name": "Operator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2222,
									"mutability": "mutable",
									"name": "_operator",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "233:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2221,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2228,
									"name": "OperatorTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOperator",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "303:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOperator",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "346:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:88:7"
									},
									"src": "267:114:7"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "412:101:7",
										"statements": [
											{
												"expression": {
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2231,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2222,
														"src": "423:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2232,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "435:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "435:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "423:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "423:24:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "491:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "483:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2237,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "483:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "483:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2241,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "495:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2236,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "463:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "463:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2243,
												"nodeType": "EmitStatement",
												"src": "458:47:7"
											}
										]
									},
									"id": 2245,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:7"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:7"
									},
									"scope": 2323,
									"src": "389:124:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "571:35:7",
										"statements": [
											{
												"expression": {
													"id": 2250,
													"name": "_operator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2222,
													"src": "589:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2249,
												"id": 2251,
												"nodeType": "Return",
												"src": "582:16:7"
											}
										]
									},
									"functionSelector": "570ca735",
									"id": 2253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:7"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "562:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:9:7"
									},
									"scope": 2323,
									"src": "521:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "638:140:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2256,
																"name": "_operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2222,
																"src": "671:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2257,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "684:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "684:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "671:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "709:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															},
															"value": "operator: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															}
														],
														"id": 2255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "649:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:109:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "649:109:7"
											},
											{
												"id": 2263,
												"nodeType": "PlaceholderStatement",
												"src": "769:1:7"
											}
										]
									},
									"id": 2265,
									"name": "onlyOperator",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:7"
									},
									"src": "614:164:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "835:51:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2270,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "853:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "853:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2272,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2222,
														"src": "869:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "853:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2269,
												"id": 2274,
												"nodeType": "Return",
												"src": "846:32:7"
											}
										]
									},
									"functionSelector": "4456eda2",
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:7"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "829:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:6:7"
									},
									"scope": 2323,
									"src": "786:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "959:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2284,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "988:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2283,
														"name": "_transferOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "970:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2286,
												"nodeType": "ExpressionStatement",
												"src": "970:31:7"
											}
										]
									},
									"functionSelector": "29605e77",
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2281,
											"modifierName": {
												"id": 2280,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "949:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "949:9:7"
										}
									],
									"name": "transferOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "920:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:22:7"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:7"
									},
									"scope": 2323,
									"src": "894:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "1075:286:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2294,
																"name": "newOperator_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "1108:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1132:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1124:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2295,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1124:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1124:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1108:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1149:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															},
															"value": "operator: zero address given for new operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															}
														],
														"id": 2293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1086:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "ExpressionStatement",
												"src": "1086:121:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1251:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1243:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2304,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1243:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1243:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2308,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "1255:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2303,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "1223:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2310,
												"nodeType": "EmitStatement",
												"src": "1218:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2314,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "1305:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2311,
															"name": "Ownable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1279:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Ownable_$141_$",
																"typeString": "type(contract Ownable)"
															}
														},
														"id": 2313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "1279:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2316,
												"nodeType": "ExpressionStatement",
												"src": "1279:39:7"
											},
											{
												"expression": {
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2317,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2222,
														"src": "1329:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2318,
														"name": "newOperator_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2290,
														"src": "1341:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1329:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "1329:24:7"
											}
										]
									},
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "1044:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:22:7"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:0:7"
									},
									"scope": 2323,
									"src": "1017:344:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2324,
							"src": "179:1185:7"
						}
					],
					"src": "35:1331:7"
				},
				"id": 7
			}
		}
	}
}