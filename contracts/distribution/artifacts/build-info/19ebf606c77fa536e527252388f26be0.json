{
	"id": "19ebf606c77fa536e527252388f26be0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/distribution/TombRewardPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../owner/Operator.sol\";\r\n\r\n// Note that this pool has no minter key of Poly (rewards).\r\n// Instead, the governance will call Poly distributeReward method and send reward to this pool at the beginning.\r\ncontract PolyRewardPool is Operator {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // governance\r\n\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 token; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Polys to distribute in the pool.\r\n        uint256 lastRewardTime; // Last time that Polys distribution occurred.\r\n        uint256 accPolyPerShare; // Accumulated Polys per share, times 1e18. See below.\r\n        bool isStarted; // if lastRewardTime has passed\r\n    }\r\n\r\n    IERC20 public Poly;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n\r\n    // The time when Poly mining starts.\r\n    uint256 public poolStartTime;\r\n\r\n    uint256[] public epochTotalRewards = [80000 ether, 60000 ether];\r\n\r\n    // Time when each epoch ends.\r\n    uint256[3] public epochEndTimes;\r\n\r\n    // Reward per second for each of 2 epochs (last item is equal to 0 - for sanity).\r\n    uint256[3] public epochPolyPerSecond;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 amount);\r\n\r\n    constructor(address _Poly, uint256 _poolStartTime) public {\r\n        require(block.timestamp < _poolStartTime, \"late\");\r\n        if (_Poly != address(0)) Poly = IERC20(_Poly);\r\n\r\n        poolStartTime = _poolStartTime;\r\n\r\n        epochEndTimes[0] = poolStartTime + 4 days; // Day 2-5\r\n        epochEndTimes[1] = epochEndTimes[0] + 5 days; // Day 6-10\r\n\r\n        epochPolyPerSecond[0] = epochTotalRewards[0].div(4 days);\r\n        epochPolyPerSecond[1] = epochTotalRewards[1].div(5 days);\r\n\r\n        epochPolyPerSecond[2] = 0;\r\n\r\n    }\r\n\r\n    function checkPoolDuplicate(IERC20 _token) internal view {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            require(poolInfo[pid].token != _token, \"PolyRewardPool: existing pool?\");\r\n        }\r\n    }\r\n\r\n    // Add a new token to the pool. Can only be called by the owner.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _token,\r\n        bool _withUpdate,\r\n        uint256 _lastRewardTime\r\n    ) public onlyOperator {\r\n        checkPoolDuplicate(_token);\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        if (block.timestamp < poolStartTime) {\r\n            // chef is sleeping\r\n            if (_lastRewardTime == 0) {\r\n                _lastRewardTime = poolStartTime;\r\n            } else {\r\n                if (_lastRewardTime < poolStartTime) {\r\n                    _lastRewardTime = poolStartTime;\r\n                }\r\n            }\r\n        } else {\r\n            // chef is cooking\r\n            if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r\n                _lastRewardTime = block.timestamp;\r\n            }\r\n        }\r\n        bool _isStarted = (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp);\r\n        poolInfo.push(PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accPolyPerShare: 0, isStarted: _isStarted}));\r\n        if (_isStarted) {\r\n            totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        }\r\n    }\r\n\r\n    // Update the given pool's Poly allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r\n        massUpdatePools();\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (pool.isStarted) {\r\n            totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(_allocPoint);\r\n        }\r\n        pool.allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return accumulate rewards over the given _fromTime to _toTime.\r\n    function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r\n        for (uint8 epochId = 2; epochId >= 1; --epochId) {\r\n            if (_toTime >= epochEndTimes[epochId - 1]) {\r\n                if (_fromTime >= epochEndTimes[epochId - 1]) {\r\n                    return _toTime.sub(_fromTime).mul(epochPolyPerSecond[epochId]);\r\n                }\r\n\r\n                uint256 _generatedReward = _toTime.sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId]);\r\n                if (epochId == 1) {\r\n                    return _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0]));\r\n                }\r\n                for (epochId = epochId - 1; epochId >= 1; --epochId) {\r\n                    if (_fromTime >= epochEndTimes[epochId - 1]) {\r\n                        return _generatedReward.add(epochEndTimes[epochId].sub(_fromTime).mul(epochPolyPerSecond[epochId]));\r\n                    }\r\n                    _generatedReward = _generatedReward.add(epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId]));\r\n                }\r\n                return _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0]));\r\n            }\r\n        }\r\n        return _toTime.sub(_fromTime).mul(epochPolyPerSecond[0]);\r\n    }\r\n\r\n    // View function to see pending Polys on frontend.\r\n    function pendingPoly(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accPolyPerShare = pool.accPolyPerShare;\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPolyPerShare = accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        return user.amount.mul(accPolyPerShare).div(1e18).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.timestamp <= pool.lastRewardTime) {\r\n            return;\r\n        }\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (tokenSupply == 0) {\r\n            pool.lastRewardTime = block.timestamp;\r\n            return;\r\n        }\r\n        if (!pool.isStarted) {\r\n            pool.isStarted = true;\r\n            totalAllocPoint = totalAllocPoint.add(pool.allocPoint);\r\n        }\r\n        if (totalAllocPoint > 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            pool.accPolyPerShare = pool.accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        pool.lastRewardTime = block.timestamp;\r\n    }\r\n\r\n    // Deposit LP tokens.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 _pending = user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt);\r\n            if (_pending > 0) {\r\n                safePolyTransfer(_sender, _pending);\r\n                emit RewardPaid(_sender, _pending);\r\n            }\r\n        }\r\n        if (_amount > 0) {\r\n            pool.token.safeTransferFrom(_sender, address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPolyPerShare).div(1e18);\r\n        emit Deposit(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 _pending = user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt);\r\n        if (_pending > 0) {\r\n            safePolyTransfer(_sender, _pending);\r\n            emit RewardPaid(_sender, _pending);\r\n        }\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.token.safeTransfer(_sender, _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPolyPerShare).div(1e18);\r\n        emit Withdraw(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 _amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        pool.token.safeTransfer(msg.sender, _amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Safe Poly transfer function, just in case if rounding error causes pool to not have enough Polys.\r\n    function safePolyTransfer(address _to, uint256 _amount) internal {\r\n        uint256 _PolyBal = Poly.balanceOf(address(this));\r\n        if (_PolyBal > 0) {\r\n            if (_amount > _PolyBal) {\r\n                Poly.safeTransfer(_to, _PolyBal);\r\n            } else {\r\n                Poly.safeTransfer(_to, _amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function governanceRecoverUnsupported(\r\n        IERC20 _token,\r\n        uint256 amount,\r\n        address to\r\n    ) external onlyOperator {\r\n        if (block.timestamp < epochEndTimes[1] + 30 days) {\r\n            // do not allow to drain token if less than 30 days after farming\r\n            require(_token != Poly, \"!Poly\");\r\n            uint256 length = poolInfo.length;\r\n            for (uint256 pid = 0; pid < length; ++pid) {\r\n                PoolInfo storage pool = poolInfo[pid];\r\n                require(_token != pool.token, \"!pool.token\");\r\n            }\r\n        }\r\n        _token.safeTransfer(to, amount);\r\n    }\r\n}\r\n"
			},
			"contracts/owner/Operator.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\n\r\nabstract contract Operator is Context, Ownable {\r\n    address private _operator;\r\n\r\n    event OperatorTransferred(\r\n        address indexed previousOperator,\r\n        address indexed newOperator\r\n    );\r\n\r\n    constructor() internal {\r\n        _operator = _msgSender();\r\n        emit OperatorTransferred(address(0), _operator);\r\n    }\r\n\r\n    function operator() public view returns (address) {\r\n        return _operator;\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(\r\n            _operator == msg.sender,\r\n            \"operator: caller is not the operator\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function isOperator() public view returns (bool) {\r\n        return _msgSender() == _operator;\r\n    }\r\n\r\n    function transferOperator(address newOperator_) public onlyOwner {\r\n        _transferOperator(newOperator_);\r\n    }\r\n\r\n    function _transferOperator(address newOperator_) internal {\r\n        require(\r\n            newOperator_ != address(0),\r\n            \"operator: zero address given for new operator\"\r\n        );\r\n        emit OperatorTransferred(address(0), newOperator_);\r\n        Ownable.transferOwnership(newOperator_);\r\n        _operator = newOperator_;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n        uint256 c = add(a, m);\n        uint256 d = sub(c, 1);\n        return mul(div(d, m), m);\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\nimport \"../../../utils/math/SafeMath.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SUB 0x27 0xB7 0xBE POP DUP12 0x1E CHAINID MULMOD 0xD1 CALLDATALOAD 0xBE 0xE1 PUSH15 0x1AB6D9E7E95E3B5500821007DE644D DUP1 0xE3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SUB 0x27 0xB7 0xBE POP DUP12 0x1E CHAINID MULMOD 0xD1 CALLDATALOAD 0xBE 0xE1 PUSH15 0x1AB6D9E7E95E3B5500821007DE644D DUP1 0xE3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
									".code": [
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x4D RETURNDATASIZE KECCAK256 0xCD 0xEF DIFFICULTY 0xA9 0xE9 DELEGATECALL 0xDE ADDRESS PUSH30 0xA6D1953ED6D0005A91E7B49D0F03D0C6E21C5964736F6C63430007060033 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x4D RETURNDATASIZE KECCAK256 0xCD 0xEF DIFFICULTY 0xA9 0xE9 DELEGATECALL 0xDE ADDRESS PUSH30 0xA6D1953ED6D0005A91E7B49D0F03D0C6E21C5964736F6C63430007060033 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
									".code": [
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x29 0xBC 0xBE SWAP4 SELFDESTRUCT 0xE6 0x4C 0x4F LOG2 0xC4 DIFFICULTY PUSH23 0xB72CD26C0DECDA284CBAE117DF7589FC7F18764736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x29 0xBC 0xBE SWAP4 SELFDESTRUCT 0xE6 0x4C 0x4F LOG2 0xC4 DIFFICULTY PUSH23 0xB72CD26C0DECDA284CBAE117DF7589FC7F18764736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"ceil(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
									".code": [
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/distribution/TombRewardPool.sol": {
				"PolyRewardPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Poly",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolStartTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Poly",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lastRewardTime",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "epochEndTimes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "epochPolyPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "epochTotalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTime",
									"type": "uint256"
								}
							],
							"name": "getGeneratedReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingPoly",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accPolyPerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStarted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/distribution/TombRewardPool.sol\":464:11477  contract PolyRewardPool is Operator {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/distribution/TombRewardPool.sol\":1583:1584  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":1550:1584  uint256 public totalAllocPoint = 0 */\n  0x05\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":1672:1735  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/distribution/TombRewardPool.sol\":1710:1721  80000 ether */\n  0x10f0cf064dd592000000\n    /* \"contracts/distribution/TombRewardPool.sol\":1672:1735  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n  0xffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":1723:1734  60000 ether */\n  0x0cb49b44ba602d800000\n    /* \"contracts/distribution/TombRewardPool.sol\":1672:1735  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n  0xffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  0x07\n  swap1\n  0x02\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2262:2795  constructor(address _Poly, uint256 _poolStartTime) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:955  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:968  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:970  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":989:998  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:986  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:998  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1046:1055  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1042:1043  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:1063  constructor () internal {... */\n  pop\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  tag_12\n    /* \"contracts/owner/Operator.sol\":435:445  _msgSender */\n  shl(0x20, tag_10)\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/owner/Operator.sol\":423:432  _operator */\n  0x01\n  0x00\n    /* \"contracts/owner/Operator.sol\":423:447  _operator = _msgSender() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/owner/Operator.sol\":495:504  _operator */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":491:492  0 */\n  0x00\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/distribution/TombRewardPool.sol\":2357:2371  _poolStartTime */\n  dup1\n    /* \"contracts/distribution/TombRewardPool.sol\":2339:2354  block.timestamp */\n  timestamp\n    /* \"contracts/distribution/TombRewardPool.sol\":2339:2371  block.timestamp < _poolStartTime */\n  lt\n    /* \"contracts/distribution/TombRewardPool.sol\":2331:2380  require(block.timestamp < _poolStartTime, \"late\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x6c61746500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"contracts/distribution/TombRewardPool.sol\":2412:2413  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":2395:2414  _Poly != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/distribution/TombRewardPool.sol\":2395:2400  _Poly */\n  dup3\n    /* \"contracts/distribution/TombRewardPool.sol\":2395:2414  _Poly != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/distribution/TombRewardPool.sol\":2391:2436  if (_Poly != address(0)) Poly = IERC20(_Poly) */\n  tag_15\n  jumpi\n    /* \"contracts/distribution/TombRewardPool.sol\":2430:2435  _Poly */\n  dup2\n    /* \"contracts/distribution/TombRewardPool.sol\":2416:2420  Poly */\n  0x02\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":2416:2436  Poly = IERC20(_Poly) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2391:2436  if (_Poly != address(0)) Poly = IERC20(_Poly) */\ntag_15:\n    /* \"contracts/distribution/TombRewardPool.sol\":2465:2479  _poolStartTime */\n  dup1\n    /* \"contracts/distribution/TombRewardPool.sol\":2449:2462  poolStartTime */\n  0x06\n    /* \"contracts/distribution/TombRewardPool.sol\":2449:2479  poolStartTime = _poolStartTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2527:2533  4 days */\n  0x054600\n    /* \"contracts/distribution/TombRewardPool.sol\":2511:2524  poolStartTime */\n  sload(0x06)\n    /* \"contracts/distribution/TombRewardPool.sol\":2511:2533  poolStartTime + 4 days */\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2492:2505  epochEndTimes */\n  0x08\n    /* \"contracts/distribution/TombRewardPool.sol\":2506:2507  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":2492:2508  epochEndTimes[0] */\n  0x03\n  dup2\n  lt\n  tag_16\n  jumpi\n  invalid\ntag_16:\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2492:2533  epochEndTimes[0] = poolStartTime + 4 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2593:2599  5 days */\n  0x069780\n    /* \"contracts/distribution/TombRewardPool.sol\":2574:2587  epochEndTimes */\n  0x08\n    /* \"contracts/distribution/TombRewardPool.sol\":2588:2589  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":2574:2590  epochEndTimes[0] */\n  0x03\n  dup2\n  lt\n  tag_18\n  jumpi\n  invalid\ntag_18:\n  add\n  sload\n    /* \"contracts/distribution/TombRewardPool.sol\":2574:2599  epochEndTimes[0] + 5 days */\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2555:2568  epochEndTimes */\n  0x08\n    /* \"contracts/distribution/TombRewardPool.sol\":2569:2570  1 */\n  0x01\n    /* \"contracts/distribution/TombRewardPool.sol\":2555:2571  epochEndTimes[1] */\n  0x03\n  dup2\n  lt\n  tag_20\n  jumpi\n  invalid\ntag_20:\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2555:2599  epochEndTimes[1] = epochEndTimes[0] + 5 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2648:2680  epochTotalRewards[0].div(4 days) */\n  tag_22\n    /* \"contracts/distribution/TombRewardPool.sol\":2673:2679  4 days */\n  0x054600\n    /* \"contracts/distribution/TombRewardPool.sol\":2648:2665  epochTotalRewards */\n  0x07\n    /* \"contracts/distribution/TombRewardPool.sol\":2666:2667  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":2648:2668  epochTotalRewards[0] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_23\n  jumpi\n  invalid\ntag_23:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  sload\n    /* \"contracts/distribution/TombRewardPool.sol\":2648:2672  epochTotalRewards[0].div */\n  or(tag_0_94, shl(0x20, tag_25))\n  swap1\n    /* \"contracts/distribution/TombRewardPool.sol\":2648:2680  epochTotalRewards[0].div(4 days) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/distribution/TombRewardPool.sol\":2624:2642  epochPolyPerSecond */\n  0x0b\n    /* \"contracts/distribution/TombRewardPool.sol\":2643:2644  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":2624:2645  epochPolyPerSecond[0] */\n  0x03\n  dup2\n  lt\n  tag_26\n  jumpi\n  invalid\ntag_26:\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2624:2680  epochPolyPerSecond[0] = epochTotalRewards[0].div(4 days) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2715:2747  epochTotalRewards[1].div(5 days) */\n  tag_28\n    /* \"contracts/distribution/TombRewardPool.sol\":2740:2746  5 days */\n  0x069780\n    /* \"contracts/distribution/TombRewardPool.sol\":2715:2732  epochTotalRewards */\n  0x07\n    /* \"contracts/distribution/TombRewardPool.sol\":2733:2734  1 */\n  0x01\n    /* \"contracts/distribution/TombRewardPool.sol\":2715:2735  epochTotalRewards[1] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_29\n  jumpi\n  invalid\ntag_29:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  sload\n    /* \"contracts/distribution/TombRewardPool.sol\":2715:2739  epochTotalRewards[1].div */\n  or(tag_0_94, shl(0x20, tag_25))\n  swap1\n    /* \"contracts/distribution/TombRewardPool.sol\":2715:2747  epochTotalRewards[1].div(5 days) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/distribution/TombRewardPool.sol\":2691:2709  epochPolyPerSecond */\n  0x0b\n    /* \"contracts/distribution/TombRewardPool.sol\":2710:2711  1 */\n  0x01\n    /* \"contracts/distribution/TombRewardPool.sol\":2691:2712  epochPolyPerSecond[1] */\n  0x03\n  dup2\n  lt\n  tag_31\n  jumpi\n  invalid\ntag_31:\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2691:2747  epochPolyPerSecond[1] = epochTotalRewards[1].div(5 days) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2784:2785  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":2760:2778  epochPolyPerSecond */\n  0x0b\n    /* \"contracts/distribution/TombRewardPool.sol\":2779:2780  2 */\n  0x02\n    /* \"contracts/distribution/TombRewardPool.sol\":2760:2781  epochPolyPerSecond[2] */\n  0x03\n  dup2\n  lt\n  tag_33\n  jumpi\n  invalid\ntag_33:\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2760:2785  epochPolyPerSecond[2] = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2262:2795  constructor(address _Poly, uint256 _poolStartTime) public {\r... */\n  pop\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":464:11477  contract PolyRewardPool is Operator {\r... */\n  jump(tag_35)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n  dup1\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n  tag_38\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_38:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n  dup2\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n  dup2\n  tag_39\n  jumpi\n  invalid\ntag_39:\n  div\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4348:4360  return a / b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/distribution/TombRewardPool.sol\":464:11477  contract PolyRewardPool is Operator {\r... */\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_40\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_41:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_42\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xffffffffffffffffffff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_41)\ntag_42:\ntag_40:\n  pop\n  swap1\n  pop\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_44:\ntag_45:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_46\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_45)\ntag_46:\n  pop\n  swap1\n  jump\t// out\ntag_35:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/distribution/TombRewardPool.sol\":464:11477  contract PolyRewardPool is Operator {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f96dc11\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x9a25cefc\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x9a25cefc\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb89e73c1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe177bb38\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf8d936b3\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x5f96dc11\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x96805e54\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x4456eda2\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x4456eda2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4d1e4f42\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x1526fe27\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x231f0c6a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x29605e77\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/distribution/TombRewardPool.sol\":1305:1331  PoolInfo[] public poolInfo */\n    tag_3:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":1550:1584  uint256 public totalAllocPoint = 0 */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":4410:4731  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/distribution/TombRewardPool.sol\":4810:6142  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/distribution/TombRewardPool.sol\":9121:9931  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_9:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":6206:6977  function pendingPoly(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":7316:8224  function updatePool(uint256 _pid) public {\r... */\n    tag_11:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/distribution/TombRewardPool.sol\":10002:10379  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/distribution/TombRewardPool.sol\":10850:11474  function governanceRecoverUnsupported(\r... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_14:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":1635:1663  uint256 public poolStartTime */\n    tag_15:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":7060:7240  function massUpdatePools() public {\r... */\n    tag_16:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":1389:1453  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_19:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":3141:4314  function add(\r... */\n    tag_20:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/distribution/TombRewardPool.sol\":1672:1735  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n    tag_21:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":1779:1810  uint256[3] public epochEndTimes */\n    tag_22:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":1251:1269  IERC20 public Poly */\n    tag_23:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":8259:9085  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_24:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/distribution/TombRewardPool.sol\":1906:1942  uint256[3] public epochPolyPerSecond */\n    tag_26:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":1305:1331  PoolInfo[] public poolInfo */\n    tag_32:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1550:1584  uint256 public totalAllocPoint = 0 */\n    tag_34:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":4410:4731  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_37:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/distribution/TombRewardPool.sol\":4489:4506  massUpdatePools() */\n      tag_100\n        /* \"contracts/distribution/TombRewardPool.sol\":4489:4504  massUpdatePools */\n      tag_66\n        /* \"contracts/distribution/TombRewardPool.sol\":4489:4506  massUpdatePools() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/distribution/TombRewardPool.sol\":4517:4538  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":4541:4549  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":4550:4554  _pid */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":4541:4555  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_101\n      jumpi\n      invalid\n    tag_101:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":4517:4555  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4570:4574  pool */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":4570:4584  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":4566:4684  if (pool.isStarted) {\r... */\n      iszero\n      tag_103\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":4619:4672  totalAllocPoint.sub(pool.allocPoint).add(_allocPoint) */\n      tag_104\n        /* \"contracts/distribution/TombRewardPool.sol\":4660:4671  _allocPoint */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":4619:4655  totalAllocPoint.sub(pool.allocPoint) */\n      tag_105\n        /* \"contracts/distribution/TombRewardPool.sol\":4639:4643  pool */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":4639:4654  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":4619:4634  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":4619:4638  totalAllocPoint.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":4619:4655  totalAllocPoint.sub(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/distribution/TombRewardPool.sol\":4619:4659  totalAllocPoint.sub(pool.allocPoint).add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":4619:4672  totalAllocPoint.sub(pool.allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"contracts/distribution/TombRewardPool.sol\":4601:4616  totalAllocPoint */\n      0x05\n        /* \"contracts/distribution/TombRewardPool.sol\":4601:4672  totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4566:4684  if (pool.isStarted) {\r... */\n    tag_103:\n        /* \"contracts/distribution/TombRewardPool.sol\":4712:4723  _allocPoint */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":4694:4698  pool */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":4694:4709  pool.allocPoint */\n      0x01\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":4694:4723  pool.allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4410:4731  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":4810:6142  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_40:\n        /* \"contracts/distribution/TombRewardPool.sol\":4895:4902  uint256 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":4920:4933  uint8 epochId */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":4936:4937  2 */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":4920:4937  uint8 epochId = 2 */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4915:6068  for (uint8 epochId = 2; epochId >= 1; --epochId) {\r... */\n    tag_109:\n        /* \"contracts/distribution/TombRewardPool.sol\":4950:4951  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":4939:4946  epochId */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":4939:4951  epochId >= 1 */\n      0xff\n      and\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":4915:6068  for (uint8 epochId = 2; epochId >= 1; --epochId) {\r... */\n      tag_110\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":4994:5007  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5018:5019  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5008:5015  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5008:5019  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":4994:5020  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":4983:4990  _toTime */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":4983:5020  _toTime >= epochEndTimes[epochId - 1] */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":4979:6057  if (_toTime >= epochEndTimes[epochId - 1]) {\r... */\n      tag_114\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5058:5071  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5082:5083  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5072:5079  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5072:5083  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5058:5084  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5045:5054  _fromTime */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":5045:5084  _fromTime >= epochEndTimes[epochId - 1] */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":5041:5191  if (_fromTime >= epochEndTimes[epochId - 1]) {\r... */\n      tag_117\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5116:5171  _toTime.sub(_fromTime).mul(epochPolyPerSecond[epochId]) */\n      tag_118\n        /* \"contracts/distribution/TombRewardPool.sol\":5143:5161  epochPolyPerSecond */\n      0x0b\n        /* \"contracts/distribution/TombRewardPool.sol\":5162:5169  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5143:5170  epochPolyPerSecond[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_119\n      jumpi\n      invalid\n    tag_119:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5116:5138  _toTime.sub(_fromTime) */\n      tag_121\n        /* \"contracts/distribution/TombRewardPool.sol\":5128:5137  _fromTime */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":5116:5123  _toTime */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":5116:5127  _toTime.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5116:5138  _toTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/distribution/TombRewardPool.sol\":5116:5142  _toTime.sub(_fromTime).mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5116:5171  _toTime.sub(_fromTime).mul(epochPolyPerSecond[epochId]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/distribution/TombRewardPool.sol\":5109:5171  return _toTime.sub(_fromTime).mul(epochPolyPerSecond[epochId]) */\n      swap2\n      pop\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TombRewardPool.sol\":5041:5191  if (_fromTime >= epochEndTimes[epochId - 1]) {\r... */\n    tag_117:\n        /* \"contracts/distribution/TombRewardPool.sol\":5211:5235  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":5238:5310  _toTime.sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId]) */\n      tag_123\n        /* \"contracts/distribution/TombRewardPool.sol\":5282:5300  epochPolyPerSecond */\n      0x0b\n        /* \"contracts/distribution/TombRewardPool.sol\":5301:5308  epochId */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":5282:5309  epochPolyPerSecond[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_124\n      jumpi\n      invalid\n    tag_124:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5238:5277  _toTime.sub(epochEndTimes[epochId - 1]) */\n      tag_126\n        /* \"contracts/distribution/TombRewardPool.sol\":5250:5263  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5274:5275  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5264:5271  epochId */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":5264:5275  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5250:5276  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_127\n      jumpi\n      invalid\n    tag_127:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5238:5245  _toTime */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":5238:5249  _toTime.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5238:5277  _toTime.sub(epochEndTimes[epochId - 1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/distribution/TombRewardPool.sol\":5238:5281  _toTime.sub(epochEndTimes[epochId - 1]).mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5238:5310  _toTime.sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"contracts/distribution/TombRewardPool.sol\":5211:5310  uint256 _generatedReward = _toTime.sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId]) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":5344:5345  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5333:5340  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5333:5345  epochId == 1 */\n      0xff\n      and\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":5329:5477  if (epochId == 1) {\r... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5377:5457  _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0])) */\n      tag_130\n        /* \"contracts/distribution/TombRewardPool.sol\":5398:5456  epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0]) */\n      tag_131\n        /* \"contracts/distribution/TombRewardPool.sol\":5434:5452  epochPolyPerSecond */\n      0x0b\n        /* \"contracts/distribution/TombRewardPool.sol\":5453:5454  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":5434:5455  epochPolyPerSecond[0] */\n      0x03\n      dup2\n      lt\n      tag_132\n      jumpi\n      invalid\n    tag_132:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5398:5429  epochEndTimes[0].sub(_fromTime) */\n      tag_134\n        /* \"contracts/distribution/TombRewardPool.sol\":5419:5428  _fromTime */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":5398:5411  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5412:5413  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":5398:5414  epochEndTimes[0] */\n      0x03\n      dup2\n      lt\n      tag_135\n      jumpi\n      invalid\n    tag_135:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5398:5418  epochEndTimes[0].sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5398:5429  epochEndTimes[0].sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/distribution/TombRewardPool.sol\":5398:5433  epochEndTimes[0].sub(_fromTime).mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5398:5456  epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/distribution/TombRewardPool.sol\":5377:5393  _generatedReward */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5377:5397  _generatedReward.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5377:5457  _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"contracts/distribution/TombRewardPool.sol\":5370:5457  return _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0])) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TombRewardPool.sol\":5329:5477  if (epochId == 1) {\r... */\n    tag_129:\n        /* \"contracts/distribution/TombRewardPool.sol\":5520:5521  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5510:5517  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5510:5521  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5500:5521  epochId = epochId - 1 */\n      swap2\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":5495:5936  for (epochId = epochId - 1; epochId >= 1; --epochId) {\r... */\n    tag_137:\n        /* \"contracts/distribution/TombRewardPool.sol\":5534:5535  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5523:5530  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5523:5535  epochId >= 1 */\n      0xff\n      and\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":5495:5936  for (epochId = epochId - 1; epochId >= 1; --epochId) {\r... */\n      tag_138\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5588:5601  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5612:5613  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5602:5609  epochId */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":5602:5613  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5588:5614  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_140\n      jumpi\n      invalid\n    tag_140:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5575:5584  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":5575:5614  _fromTime >= epochEndTimes[epochId - 1] */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":5571:5766  if (_fromTime >= epochEndTimes[epochId - 1]) {\r... */\n      tag_142\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5650:5742  _generatedReward.add(epochEndTimes[epochId].sub(_fromTime).mul(epochPolyPerSecond[epochId])) */\n      tag_143\n        /* \"contracts/distribution/TombRewardPool.sol\":5671:5741  epochEndTimes[epochId].sub(_fromTime).mul(epochPolyPerSecond[epochId]) */\n      tag_144\n        /* \"contracts/distribution/TombRewardPool.sol\":5713:5731  epochPolyPerSecond */\n      0x0b\n        /* \"contracts/distribution/TombRewardPool.sol\":5732:5739  epochId */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":5713:5740  epochPolyPerSecond[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_145\n      jumpi\n      invalid\n    tag_145:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5671:5708  epochEndTimes[epochId].sub(_fromTime) */\n      tag_147\n        /* \"contracts/distribution/TombRewardPool.sol\":5698:5707  _fromTime */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":5671:5684  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5685:5692  epochId */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":5671:5693  epochEndTimes[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_148\n      jumpi\n      invalid\n    tag_148:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5671:5697  epochEndTimes[epochId].sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5671:5708  epochEndTimes[epochId].sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"contracts/distribution/TombRewardPool.sol\":5671:5712  epochEndTimes[epochId].sub(_fromTime).mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5671:5741  epochEndTimes[epochId].sub(_fromTime).mul(epochPolyPerSecond[epochId]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"contracts/distribution/TombRewardPool.sol\":5650:5666  _generatedReward */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5650:5670  _generatedReward.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5650:5742  _generatedReward.add(epochEndTimes[epochId].sub(_fromTime).mul(epochPolyPerSecond[epochId])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/distribution/TombRewardPool.sol\":5643:5742  return _generatedReward.add(epochEndTimes[epochId].sub(_fromTime).mul(epochPolyPerSecond[epochId])) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TombRewardPool.sol\":5571:5766  if (_fromTime >= epochEndTimes[epochId - 1]) {\r... */\n    tag_142:\n        /* \"contracts/distribution/TombRewardPool.sol\":5807:5916  _generatedReward.add(epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId])) */\n      tag_150\n        /* \"contracts/distribution/TombRewardPool.sol\":5828:5915  epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId]) */\n      tag_151\n        /* \"contracts/distribution/TombRewardPool.sol\":5887:5905  epochPolyPerSecond */\n      0x0b\n        /* \"contracts/distribution/TombRewardPool.sol\":5906:5913  epochId */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":5887:5914  epochPolyPerSecond[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_152\n      jumpi\n      invalid\n    tag_152:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5828:5882  epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]) */\n      tag_154\n        /* \"contracts/distribution/TombRewardPool.sol\":5855:5868  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5879:5880  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5869:5876  epochId */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":5869:5880  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5855:5881  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_155\n      jumpi\n      invalid\n    tag_155:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5828:5841  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5842:5849  epochId */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":5828:5850  epochEndTimes[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5828:5854  epochEndTimes[epochId].sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5828:5882  epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/distribution/TombRewardPool.sol\":5828:5886  epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5828:5915  epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"contracts/distribution/TombRewardPool.sol\":5807:5823  _generatedReward */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5807:5827  _generatedReward.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5807:5916  _generatedReward.add(epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/distribution/TombRewardPool.sol\":5788:5916  _generatedReward = _generatedReward.add(epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochPolyPerSecond[epochId])) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":5537:5546  --epochId */\n      dup2\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":5495:5936  for (epochId = epochId - 1; epochId >= 1; --epochId) {\r... */\n      jump(tag_137)\n    tag_138:\n        /* \"contracts/distribution/TombRewardPool.sol\":5961:6041  _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0])) */\n      tag_159\n        /* \"contracts/distribution/TombRewardPool.sol\":5982:6040  epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0]) */\n      tag_160\n        /* \"contracts/distribution/TombRewardPool.sol\":6018:6036  epochPolyPerSecond */\n      0x0b\n        /* \"contracts/distribution/TombRewardPool.sol\":6037:6038  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6018:6039  epochPolyPerSecond[0] */\n      0x03\n      dup2\n      lt\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5982:6013  epochEndTimes[0].sub(_fromTime) */\n      tag_163\n        /* \"contracts/distribution/TombRewardPool.sol\":6003:6012  _fromTime */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":5982:5995  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":5996:5997  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":5982:5998  epochEndTimes[0] */\n      0x03\n      dup2\n      lt\n      tag_164\n      jumpi\n      invalid\n    tag_164:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5982:6002  epochEndTimes[0].sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5982:6013  epochEndTimes[0].sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"contracts/distribution/TombRewardPool.sol\":5982:6017  epochEndTimes[0].sub(_fromTime).mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5982:6040  epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/distribution/TombRewardPool.sol\":5961:5977  _generatedReward */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5961:5981  _generatedReward.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5961:6041  _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"contracts/distribution/TombRewardPool.sol\":5954:6041  return _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochPolyPerSecond[0])) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TombRewardPool.sol\":4979:6057  if (_toTime >= epochEndTimes[epochId - 1]) {\r... */\n    tag_114:\n        /* \"contracts/distribution/TombRewardPool.sol\":4953:4962  --epochId */\n      dup1\n      0x01\n      swap1\n      sub\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4915:6068  for (uint8 epochId = 2; epochId >= 1; --epochId) {\r... */\n      jump(tag_109)\n    tag_110:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6085:6134  _toTime.sub(_fromTime).mul(epochPolyPerSecond[0]) */\n      tag_166\n        /* \"contracts/distribution/TombRewardPool.sol\":6112:6130  epochPolyPerSecond */\n      0x0b\n        /* \"contracts/distribution/TombRewardPool.sol\":6131:6132  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6112:6133  epochPolyPerSecond[0] */\n      0x03\n      dup2\n      lt\n      tag_167\n      jumpi\n      invalid\n    tag_167:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6085:6107  _toTime.sub(_fromTime) */\n      tag_169\n        /* \"contracts/distribution/TombRewardPool.sol\":6097:6106  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6085:6092  _toTime */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6085:6096  _toTime.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6085:6107  _toTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/distribution/TombRewardPool.sol\":6085:6111  _toTime.sub(_fromTime).mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6085:6134  _toTime.sub(_fromTime).mul(epochPolyPerSecond[0]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/distribution/TombRewardPool.sol\":6078:6134  return _toTime.sub(_fromTime).mul(epochPolyPerSecond[0]) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4810:6142  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_108:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      tag_176\n        /* \"contracts/owner/Operator.sol\":988:1000  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":970:987  _transferOperator */\n      tag_177\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":9121:9931  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_46:\n        /* \"contracts/distribution/TombRewardPool.sol\":9188:9203  address _sender */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9206:9216  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":9188:9216  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9227:9248  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9251:9259  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":9260:9264  _pid */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9251:9265  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":9227:9265  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9276:9297  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9300:9308  userInfo */\n      0x04\n        /* \"contracts/distribution/TombRewardPool.sol\":9300:9314  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9309:9313  _pid */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":9300:9314  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":9300:9323  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9315:9322  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9300:9323  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":9276:9323  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9357:9364  _amount */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":9342:9346  user */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":9342:9353  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9342:9364  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":9334:9387  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/distribution/TombRewardPool.sol\":9398:9414  updatePool(_pid) */\n      tag_182\n        /* \"contracts/distribution/TombRewardPool.sol\":9409:9413  _pid */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9398:9408  updatePool */\n      tag_54\n        /* \"contracts/distribution/TombRewardPool.sol\":9398:9414  updatePool(_pid) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/distribution/TombRewardPool.sol\":9425:9441  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9512  user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_183\n        /* \"contracts/distribution/TombRewardPool.sol\":9496:9500  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":9496:9511  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9491  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      tag_184\n        /* \"contracts/distribution/TombRewardPool.sol\":9486:9490  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9481  user.amount.mul(pool.accPolyPerShare) */\n      tag_185\n        /* \"contracts/distribution/TombRewardPool.sol\":9460:9464  pool */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":9460:9480  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9448  user */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9455  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9459  user.amount.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9481  user.amount.mul(pool.accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9485  user.amount.mul(pool.accPolyPerShare).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9491  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9495  user.amount.mul(pool.accPolyPerShare).div(1e18).sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9444:9512  user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/distribution/TombRewardPool.sol\":9425:9512  uint256 _pending = user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9538:9539  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9527:9535  _pending */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":9527:9539  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":9523:9652  if (_pending > 0) {\r... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":9556:9591  safePolyTransfer(_sender, _pending) */\n      tag_187\n        /* \"contracts/distribution/TombRewardPool.sol\":9573:9580  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9582:9590  _pending */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":9556:9572  safePolyTransfer */\n      tag_188\n        /* \"contracts/distribution/TombRewardPool.sol\":9556:9591  safePolyTransfer(_sender, _pending) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/distribution/TombRewardPool.sol\":9622:9629  _sender */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":9611:9640  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TombRewardPool.sol\":9631:9639  _pending */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":9611:9640  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TombRewardPool.sol\":9523:9652  if (_pending > 0) {\r... */\n    tag_186:\n        /* \"contracts/distribution/TombRewardPool.sol\":9676:9677  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9666:9673  _amount */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9666:9677  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":9662:9800  if (_amount > 0) {\r... */\n      iszero\n      tag_189\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":9708:9732  user.amount.sub(_amount) */\n      tag_190\n        /* \"contracts/distribution/TombRewardPool.sol\":9724:9731  _amount */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9708:9712  user */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":9708:9719  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9708:9723  user.amount.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9708:9732  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/distribution/TombRewardPool.sol\":9694:9698  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":9694:9705  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":9694:9732  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9747:9788  pool.token.safeTransfer(_sender, _amount) */\n      tag_191\n        /* \"contracts/distribution/TombRewardPool.sol\":9771:9778  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9780:9787  _amount */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":9747:9751  pool */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9747:9757  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":9747:9770  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9747:9788  pool.token.safeTransfer(_sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"contracts/distribution/TombRewardPool.sol\":9662:9800  if (_amount > 0) {\r... */\n    tag_189:\n        /* \"contracts/distribution/TombRewardPool.sol\":9828:9875  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      tag_193\n        /* \"contracts/distribution/TombRewardPool.sol\":9870:9874  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":9828:9865  user.amount.mul(pool.accPolyPerShare) */\n      tag_194\n        /* \"contracts/distribution/TombRewardPool.sol\":9844:9848  pool */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9844:9864  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9828:9832  user */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9828:9839  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9828:9843  user.amount.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9828:9865  user.amount.mul(pool.accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/distribution/TombRewardPool.sol\":9828:9869  user.amount.mul(pool.accPolyPerShare).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9828:9875  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"contracts/distribution/TombRewardPool.sol\":9810:9814  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":9810:9825  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":9810:9875  user.rewardDebt = user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9909:9913  _pid */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9900:9907  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9891:9923  Withdraw(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/distribution/TombRewardPool.sol\":9915:9922  _amount */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":9891:9923  Withdraw(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombRewardPool.sol\":9121:9931  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_48:\n        /* \"contracts/owner/Operator.sol\":829:833  bool */\n      0x00\n        /* \"contracts/owner/Operator.sol\":869:878  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      tag_196\n        /* \"contracts/owner/Operator.sol\":853:863  _msgSender */\n      tag_172\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":846:878  return _msgSender() == _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":6206:6977  function pendingPoly(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_51:\n        /* \"contracts/distribution/TombRewardPool.sol\":6279:6286  uint256 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6299:6320  PoolInfo storage pool */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":6323:6331  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":6332:6336  _pid */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":6323:6337  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_198\n      jumpi\n      invalid\n    tag_198:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":6299:6337  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6348:6369  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6372:6380  userInfo */\n      0x04\n        /* \"contracts/distribution/TombRewardPool.sol\":6372:6386  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6381:6385  _pid */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":6372:6386  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":6372:6393  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6387:6392  _user */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6372:6393  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":6348:6393  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6404:6427  uint256 accPolyPerShare */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6430:6434  pool */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":6430:6450  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6404:6450  uint256 accPolyPerShare = pool.accPolyPerShare */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6461:6480  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6483:6487  pool */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":6483:6493  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":6483:6503  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombRewardPool.sol\":6512:6516  this */\n      address\n        /* \"contracts/distribution/TombRewardPool.sol\":6483:6518  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6461:6518  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6551:6555  pool */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":6551:6570  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6533:6548  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":6533:6570  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":6533:6590  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6589:6590  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6574:6585  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":6574:6590  tokenSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":6533:6590  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n    tag_204:\n        /* \"contracts/distribution/TombRewardPool.sol\":6529:6889  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":6607:6631  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6634:6690  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_206\n        /* \"contracts/distribution/TombRewardPool.sol\":6653:6657  pool */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6653:6672  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6674:6689  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":6634:6652  getGeneratedReward */\n      tag_40\n        /* \"contracts/distribution/TombRewardPool.sol\":6634:6690  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/distribution/TombRewardPool.sol\":6607:6690  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6705:6724  uint256 _PolyReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6727:6785  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_207\n        /* \"contracts/distribution/TombRewardPool.sol\":6769:6784  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":6727:6764  _generatedReward.mul(pool.allocPoint) */\n      tag_208\n        /* \"contracts/distribution/TombRewardPool.sol\":6748:6752  pool */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":6748:6763  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6727:6743  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6727:6747  _generatedReward.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6727:6764  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/distribution/TombRewardPool.sol\":6727:6768  _generatedReward.mul(pool.allocPoint).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6727:6785  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/distribution/TombRewardPool.sol\":6705:6785  uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6818:6877  accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      tag_209\n        /* \"contracts/distribution/TombRewardPool.sol\":6838:6876  _PolyReward.mul(1e18).div(tokenSupply) */\n      tag_210\n        /* \"contracts/distribution/TombRewardPool.sol\":6864:6875  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":6838:6859  _PolyReward.mul(1e18) */\n      tag_211\n        /* \"contracts/distribution/TombRewardPool.sol\":6854:6858  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":6838:6849  _PolyReward */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6838:6853  _PolyReward.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6838:6859  _PolyReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/distribution/TombRewardPool.sol\":6838:6863  _PolyReward.mul(1e18).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6838:6876  _PolyReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/distribution/TombRewardPool.sol\":6818:6833  accPolyPerShare */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6818:6837  accPolyPerShare.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6818:6877  accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/distribution/TombRewardPool.sol\":6800:6877  accPolyPerShare = accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap4\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6529:6889  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      pop\n      pop\n    tag_205:\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6969  user.amount.mul(accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_212\n        /* \"contracts/distribution/TombRewardPool.sol\":6953:6957  user */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":6953:6968  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6948  user.amount.mul(accPolyPerShare).div(1e18) */\n      tag_213\n        /* \"contracts/distribution/TombRewardPool.sol\":6943:6947  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6938  user.amount.mul(accPolyPerShare) */\n      tag_214\n        /* \"contracts/distribution/TombRewardPool.sol\":6922:6937  accPolyPerShare */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6910  user */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6917  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6921  user.amount.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6938  user.amount.mul(accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6942  user.amount.mul(accPolyPerShare).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6948  user.amount.mul(accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6952  user.amount.mul(accPolyPerShare).div(1e18).sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6906:6969  user.amount.mul(accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/distribution/TombRewardPool.sol\":6899:6969  return user.amount.mul(accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6206:6977  function pendingPoly(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":7316:8224  function updatePool(uint256 _pid) public {\r... */\n    tag_54:\n        /* \"contracts/distribution/TombRewardPool.sol\":7368:7389  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7392:7400  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":7401:7405  _pid */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":7392:7406  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      invalid\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":7368:7406  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7440:7444  pool */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":7440:7459  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7421:7436  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":7421:7459  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":7417:7494  if (block.timestamp <= pool.lastRewardTime) {\r... */\n      tag_218\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":7476:7483  return; */\n      pop\n      jump(tag_215)\n        /* \"contracts/distribution/TombRewardPool.sol\":7417:7494  if (block.timestamp <= pool.lastRewardTime) {\r... */\n    tag_218:\n        /* \"contracts/distribution/TombRewardPool.sol\":7504:7523  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7526:7530  pool */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7526:7536  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":7526:7546  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombRewardPool.sol\":7555:7559  this */\n      address\n        /* \"contracts/distribution/TombRewardPool.sol\":7526:7561  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7504:7561  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7591:7592  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7576:7587  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7576:7592  tokenSupply == 0 */\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":7572:7679  if (tokenSupply == 0) {\r... */\n      iszero\n      tag_223\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":7631:7646  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":7609:7613  pool */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":7609:7628  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":7609:7646  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7661:7668  return; */\n      pop\n      pop\n      jump(tag_215)\n        /* \"contracts/distribution/TombRewardPool.sol\":7572:7679  if (tokenSupply == 0) {\r... */\n    tag_223:\n        /* \"contracts/distribution/TombRewardPool.sol\":7694:7698  pool */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7694:7708  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":7689:7827  if (!pool.isStarted) {\r... */\n      tag_224\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":7742:7746  true */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":7725:7729  pool */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":7725:7739  pool.isStarted */\n      0x04\n      add\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7725:7746  pool.isStarted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7779:7815  totalAllocPoint.add(pool.allocPoint) */\n      tag_225\n        /* \"contracts/distribution/TombRewardPool.sol\":7799:7803  pool */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":7799:7814  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7779:7794  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":7779:7798  totalAllocPoint.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":7779:7815  totalAllocPoint.add(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"contracts/distribution/TombRewardPool.sol\":7761:7776  totalAllocPoint */\n      0x05\n        /* \"contracts/distribution/TombRewardPool.sol\":7761:7815  totalAllocPoint = totalAllocPoint.add(pool.allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7689:7827  if (!pool.isStarted) {\r... */\n    tag_224:\n        /* \"contracts/distribution/TombRewardPool.sol\":7859:7860  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7841:7856  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":7841:7860  totalAllocPoint > 0 */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":7837:8169  if (totalAllocPoint > 0) {\r... */\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":7877:7901  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7904:7960  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_227\n        /* \"contracts/distribution/TombRewardPool.sol\":7923:7927  pool */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":7923:7942  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7944:7959  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":7904:7922  getGeneratedReward */\n      tag_40\n        /* \"contracts/distribution/TombRewardPool.sol\":7904:7960  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/distribution/TombRewardPool.sol\":7877:7960  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7975:7994  uint256 _PolyReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7997:8055  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_228\n        /* \"contracts/distribution/TombRewardPool.sol\":8039:8054  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":7997:8034  _generatedReward.mul(pool.allocPoint) */\n      tag_229\n        /* \"contracts/distribution/TombRewardPool.sol\":8018:8022  pool */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":8018:8033  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7997:8013  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":7997:8017  _generatedReward.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":7997:8034  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/distribution/TombRewardPool.sol\":7997:8038  _generatedReward.mul(pool.allocPoint).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":7997:8055  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/distribution/TombRewardPool.sol\":7975:8055  uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8093:8157  pool.accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      tag_230\n        /* \"contracts/distribution/TombRewardPool.sol\":8118:8156  _PolyReward.mul(1e18).div(tokenSupply) */\n      tag_231\n        /* \"contracts/distribution/TombRewardPool.sol\":8144:8155  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8118:8139  _PolyReward.mul(1e18) */\n      tag_232\n        /* \"contracts/distribution/TombRewardPool.sol\":8134:8138  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":8118:8129  _PolyReward */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":8118:8133  _PolyReward.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8118:8139  _PolyReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/distribution/TombRewardPool.sol\":8118:8143  _PolyReward.mul(1e18).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8118:8156  _PolyReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"contracts/distribution/TombRewardPool.sol\":8093:8097  pool */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":8093:8113  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8093:8117  pool.accPolyPerShare.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8093:8157  pool.accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/distribution/TombRewardPool.sol\":8070:8074  pool */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8070:8090  pool.accPolyPerShare */\n      0x03\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":8070:8157  pool.accPolyPerShare = pool.accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7837:8169  if (totalAllocPoint > 0) {\r... */\n      pop\n      pop\n    tag_226:\n        /* \"contracts/distribution/TombRewardPool.sol\":8201:8216  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":8179:8183  pool */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":8179:8198  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":8179:8216  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7316:8224  function updatePool(uint256 _pid) public {\r... */\n      pop\n      pop\n    tag_215:\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":10002:10379  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_57:\n        /* \"contracts/distribution/TombRewardPool.sol\":10061:10082  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10085:10093  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":10094:10098  _pid */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":10085:10099  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_234\n      jumpi\n      invalid\n    tag_234:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":10061:10099  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10110:10131  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10134:10142  userInfo */\n      0x04\n        /* \"contracts/distribution/TombRewardPool.sol\":10134:10148  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10143:10147  _pid */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":10134:10148  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":10134:10160  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10149:10159  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":10134:10160  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":10110:10160  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10171:10186  uint256 _amount */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10189:10193  user */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":10189:10200  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":10171:10200  uint256 _amount = user.amount */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10225:10226  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10211:10215  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":10211:10222  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":10211:10226  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10255:10256  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10237:10241  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":10237:10252  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":10237:10256  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10267:10311  pool.token.safeTransfer(msg.sender, _amount) */\n      tag_236\n        /* \"contracts/distribution/TombRewardPool.sol\":10291:10301  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":10303:10310  _amount */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":10267:10271  pool */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":10267:10277  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":10267:10290  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":10267:10311  pool.token.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/distribution/TombRewardPool.sol\":10357:10361  _pid */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":10345:10355  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":10327:10371  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/distribution/TombRewardPool.sol\":10363:10370  _amount */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":10327:10371  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombRewardPool.sol\":10002:10379  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":10850:11474  function governanceRecoverUnsupported(\r... */\n    tag_60:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/distribution/TombRewardPool.sol\":11039:11046  30 days */\n      0x278d00\n        /* \"contracts/distribution/TombRewardPool.sol\":11020:11033  epochEndTimes */\n      0x08\n        /* \"contracts/distribution/TombRewardPool.sol\":11034:11035  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":11020:11036  epochEndTimes[1] */\n      0x03\n      dup2\n      lt\n      tag_240\n      jumpi\n      invalid\n    tag_240:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":11020:11046  epochEndTimes[1] + 30 days */\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":11002:11017  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":11002:11046  block.timestamp < epochEndTimes[1] + 30 days */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":10998:11425  if (block.timestamp < epochEndTimes[1] + 30 days) {\r... */\n      iszero\n      tag_242\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":11160:11164  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11150:11164  _token != Poly */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11150:11156  _token */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":11150:11164  _token != Poly */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":11142:11174  require(_token != Poly, \"!Poly\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x21506f6c79000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"contracts/distribution/TombRewardPool.sol\":11189:11203  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":11206:11214  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":11206:11221  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":11189:11221  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":11241:11252  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":11236:11414  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_244:\n        /* \"contracts/distribution/TombRewardPool.sol\":11264:11270  length */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":11258:11261  pid */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":11258:11270  pid < length */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":11236:11414  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":11298:11319  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":11322:11330  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":11331:11334  pid */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":11322:11335  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":11298:11335  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":11372:11376  pool */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":11372:11382  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11362:11382  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11362:11368  _token */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":11362:11382  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":11354:11398  require(_token != pool.token, \"!pool.token\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x21706f6f6c2e746f6b656e000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/distribution/TombRewardPool.sol\":11236:11414  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":11272:11277  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":11236:11414  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_244)\n    tag_245:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10998:11425  if (block.timestamp < epochEndTimes[1] + 30 days) {\r... */\n      pop\n    tag_242:\n        /* \"contracts/distribution/TombRewardPool.sol\":11435:11466  _token.safeTransfer(to, amount) */\n      tag_250\n        /* \"contracts/distribution/TombRewardPool.sol\":11455:11457  to */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":11459:11465  amount */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":11435:11441  _token */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":11435:11454  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":11435:11466  _token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/distribution/TombRewardPool.sol\":10850:11474  function governanceRecoverUnsupported(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_62:\n        /* \"contracts/owner/Operator.sol\":562:569  address */\n      0x00\n        /* \"contracts/owner/Operator.sol\":589:598  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":582:598  return _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1635:1663  uint256 public poolStartTime */\n    tag_64:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":7060:7240  function massUpdatePools() public {\r... */\n    tag_66:\n        /* \"contracts/distribution/TombRewardPool.sol\":7105:7119  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7122:7130  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":7122:7137  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7105:7137  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7153:7164  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7148:7233  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_253:\n        /* \"contracts/distribution/TombRewardPool.sol\":7176:7182  length */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7170:7173  pid */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7170:7182  pid < length */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":7148:7233  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":7206:7221  updatePool(pid) */\n      tag_256\n        /* \"contracts/distribution/TombRewardPool.sol\":7217:7220  pid */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7206:7216  updatePool */\n      tag_54\n        /* \"contracts/distribution/TombRewardPool.sol\":7206:7221  updatePool(pid) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/distribution/TombRewardPool.sol\":7184:7189  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7148:7233  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_253)\n    tag_254:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7060:7240  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1877:1878  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1861:1867  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1907:1908  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1896  _owner */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1909  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1211:1217  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1204:1217  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1389:1453  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_73:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":3141:4314  function add(\r... */\n    tag_76:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"contracts/distribution/TombRewardPool.sol\":3307:3333  checkPoolDuplicate(_token) */\n      tag_266\n        /* \"contracts/distribution/TombRewardPool.sol\":3326:3332  _token */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":3307:3325  checkPoolDuplicate */\n      tag_267\n        /* \"contracts/distribution/TombRewardPool.sol\":3307:3333  checkPoolDuplicate(_token) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/distribution/TombRewardPool.sol\":3348:3359  _withUpdate */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3344:3405  if (_withUpdate) {\r... */\n      iszero\n      tag_268\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3376:3393  massUpdatePools() */\n      tag_269\n        /* \"contracts/distribution/TombRewardPool.sol\":3376:3391  massUpdatePools */\n      tag_66\n        /* \"contracts/distribution/TombRewardPool.sol\":3376:3393  massUpdatePools() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/distribution/TombRewardPool.sol\":3344:3405  if (_withUpdate) {\r... */\n    tag_268:\n        /* \"contracts/distribution/TombRewardPool.sol\":3437:3450  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TombRewardPool.sol\":3419:3434  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":3419:3450  block.timestamp < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":3415:3949  if (block.timestamp < poolStartTime) {\r... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3523:3524  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":3504:3519  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3504:3524  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":3500:3743  if (_lastRewardTime == 0) {\r... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3563:3576  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TombRewardPool.sol\":3545:3576  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":3500:3743  if (_lastRewardTime == 0) {\r... */\n      jump(tag_272)\n    tag_271:\n        /* \"contracts/distribution/TombRewardPool.sol\":3639:3652  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TombRewardPool.sol\":3621:3636  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3621:3652  _lastRewardTime < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":3617:3728  if (_lastRewardTime < poolStartTime) {\r... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3695:3708  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TombRewardPool.sol\":3677:3708  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":3617:3728  if (_lastRewardTime < poolStartTime) {\r... */\n    tag_273:\n        /* \"contracts/distribution/TombRewardPool.sol\":3500:3743  if (_lastRewardTime == 0) {\r... */\n    tag_272:\n        /* \"contracts/distribution/TombRewardPool.sol\":3415:3949  if (block.timestamp < poolStartTime) {\r... */\n      jump(tag_274)\n    tag_270:\n        /* \"contracts/distribution/TombRewardPool.sol\":3830:3831  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":3811:3826  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3811:3831  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":3811:3868  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n      dup1\n      tag_275\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":3853:3868  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":3835:3850  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3835:3868  _lastRewardTime < block.timestamp */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":3811:3868  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n    tag_275:\n        /* \"contracts/distribution/TombRewardPool.sol\":3807:3938  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n      iszero\n      tag_276\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3907:3922  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":3889:3922  _lastRewardTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":3807:3938  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n    tag_276:\n        /* \"contracts/distribution/TombRewardPool.sol\":3415:3949  if (block.timestamp < poolStartTime) {\r... */\n    tag_274:\n        /* \"contracts/distribution/TombRewardPool.sol\":3959:3974  bool _isStarted */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":3997:4010  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TombRewardPool.sol\":3978:3993  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":3978:4010  _lastRewardTime <= poolStartTime */\n      gt\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":3977:4051  (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp) */\n      dup1\n      tag_277\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4035:4050  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":4016:4031  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":4016:4050  _lastRewardTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":3977:4051  (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp) */\n    tag_277:\n        /* \"contracts/distribution/TombRewardPool.sol\":3959:4051  bool _isStarted = (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4062:4070  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":4076:4202  PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accPolyPerShare: 0, isStarted: _isStarted}) */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":4093:4099  _token */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":4076:4202  PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accPolyPerShare: 0, isStarted: _isStarted}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":4113:4124  _allocPoint */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":4076:4202  PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accPolyPerShare: 0, isStarted: _isStarted}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":4142:4157  _lastRewardTime */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":4076:4202  PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accPolyPerShare: 0, isStarted: _isStarted}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":4176:4177  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":4076:4202  PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accPolyPerShare: 0, isStarted: _isStarted}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":4190:4200  _isStarted */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":4076:4202  PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accPolyPerShare: 0, isStarted: _isStarted}) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4062:4203  poolInfo.push(PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accPolyPerShare: 0, isStarted: _isStarted})) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4218:4228  _isStarted */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":4214:4307  if (_isStarted) {\r... */\n      iszero\n      tag_279\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":4263:4295  totalAllocPoint.add(_allocPoint) */\n      tag_280\n        /* \"contracts/distribution/TombRewardPool.sol\":4283:4294  _allocPoint */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":4263:4278  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":4263:4282  totalAllocPoint.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":4263:4295  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"contracts/distribution/TombRewardPool.sol\":4245:4260  totalAllocPoint */\n      0x05\n        /* \"contracts/distribution/TombRewardPool.sol\":4245:4295  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4214:4307  if (_isStarted) {\r... */\n    tag_279:\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":3141:4314  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1672:1735  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n    tag_79:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_281\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_281:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1779:1810  uint256[3] public epochEndTimes */\n    tag_82:\n      0x08\n      dup2\n      0x03\n      dup2\n      lt\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1251:1269  IERC20 public Poly */\n    tag_84:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":8259:9085  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_87:\n        /* \"contracts/distribution/TombRewardPool.sol\":8325:8340  address _sender */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8343:8353  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":8325:8353  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8364:8385  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8388:8396  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":8397:8401  _pid */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8388:8402  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_286\n      jumpi\n      invalid\n    tag_286:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":8364:8402  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8413:8434  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8437:8445  userInfo */\n      0x04\n        /* \"contracts/distribution/TombRewardPool.sol\":8437:8451  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8446:8450  _pid */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":8437:8451  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":8437:8460  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8452:8459  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8437:8460  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":8413:8460  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8471:8487  updatePool(_pid) */\n      tag_288\n        /* \"contracts/distribution/TombRewardPool.sol\":8482:8486  _pid */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":8471:8481  updatePool */\n      tag_54\n        /* \"contracts/distribution/TombRewardPool.sol\":8471:8487  updatePool(_pid) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/distribution/TombRewardPool.sol\":8516:8517  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8502:8506  user */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":8502:8513  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8502:8517  user.amount > 0 */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":8498:8788  if (user.amount > 0) {\r... */\n      iszero\n      tag_289\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":8534:8550  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8621  user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_290\n        /* \"contracts/distribution/TombRewardPool.sol\":8605:8609  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":8605:8620  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8600  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      tag_291\n        /* \"contracts/distribution/TombRewardPool.sol\":8595:8599  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8590  user.amount.mul(pool.accPolyPerShare) */\n      tag_292\n        /* \"contracts/distribution/TombRewardPool.sol\":8569:8573  pool */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":8569:8589  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8557  user */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8564  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8568  user.amount.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8590  user.amount.mul(pool.accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_292:\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8594  user.amount.mul(pool.accPolyPerShare).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8600  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8604  user.amount.mul(pool.accPolyPerShare).div(1e18).sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8553:8621  user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/distribution/TombRewardPool.sol\":8534:8621  uint256 _pending = user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8651:8652  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8640:8648  _pending */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":8640:8652  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":8636:8777  if (_pending > 0) {\r... */\n      iszero\n      tag_293\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":8673:8708  safePolyTransfer(_sender, _pending) */\n      tag_294\n        /* \"contracts/distribution/TombRewardPool.sol\":8690:8697  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8699:8707  _pending */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":8673:8689  safePolyTransfer */\n      tag_188\n        /* \"contracts/distribution/TombRewardPool.sol\":8673:8708  safePolyTransfer(_sender, _pending) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/distribution/TombRewardPool.sol\":8743:8750  _sender */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":8732:8761  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TombRewardPool.sol\":8752:8760  _pending */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":8732:8761  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TombRewardPool.sol\":8636:8777  if (_pending > 0) {\r... */\n    tag_293:\n        /* \"contracts/distribution/TombRewardPool.sol\":8498:8788  if (user.amount > 0) {\r... */\n      pop\n    tag_289:\n        /* \"contracts/distribution/TombRewardPool.sol\":8812:8813  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8802:8809  _amount */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8802:8813  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":8798:8955  if (_amount > 0) {\r... */\n      iszero\n      tag_295\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":8830:8890  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      tag_296\n        /* \"contracts/distribution/TombRewardPool.sol\":8858:8865  _sender */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":8875:8879  this */\n      address\n        /* \"contracts/distribution/TombRewardPool.sol\":8882:8889  _amount */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":8830:8834  pool */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":8830:8840  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":8830:8857  pool.token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_297\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8830:8890  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"contracts/distribution/TombRewardPool.sol\":8919:8943  user.amount.add(_amount) */\n      tag_298\n        /* \"contracts/distribution/TombRewardPool.sol\":8935:8942  _amount */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8919:8923  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":8919:8930  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8919:8934  user.amount.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8919:8943  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"contracts/distribution/TombRewardPool.sol\":8905:8909  user */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":8905:8916  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":8905:8943  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8798:8955  if (_amount > 0) {\r... */\n    tag_295:\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:9030  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      tag_299\n        /* \"contracts/distribution/TombRewardPool.sol\":9025:9029  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:9020  user.amount.mul(pool.accPolyPerShare) */\n      tag_300\n        /* \"contracts/distribution/TombRewardPool.sol\":8999:9003  pool */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8999:9019  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:8987  user */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:8994  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:8998  user.amount.mul */\n      tag_122\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:9020  user.amount.mul(pool.accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_300:\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:9024  user.amount.mul(pool.accPolyPerShare).div */\n      tag_94\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:9030  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"contracts/distribution/TombRewardPool.sol\":8965:8969  user */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":8965:8980  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":8965:9030  user.rewardDebt = user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9063:9067  _pid */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9054:9061  _sender */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":9046:9077  Deposit(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/distribution/TombRewardPool.sol\":9069:9076  _amount */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":9046:9077  Deposit(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombRewardPool.sol\":8259:9085  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_302\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_303\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2173:2174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2161  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2145:2218  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2262:2270  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2254:2260  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2290:2298  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2287  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2298  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1906:1942  uint256[3] public epochPolyPerSecond */\n    tag_93:\n      0x0b\n      dup2\n      0x03\n      dup2\n      lt\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_311\n      jumpi\n      invalid\n    tag_311:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4348:4360  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3624:3625  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3620  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3625  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3627:3635  return 0 */\n      swap1\n      pop\n      jump(tag_316)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3654  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3662  a * b */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3662  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3689:3690  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3684:3685  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3681  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3685  c / a */\n      dup2\n      tag_318\n      jumpi\n      invalid\n    tag_318:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3745:3746  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3738:3746  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_316:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n    tag_177:\n        /* \"contracts/owner/Operator.sol\":1132:1133  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1108:1120  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/owner/Operator.sol\":1086:1207  require(\r... */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7\n      0x2d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/owner/Operator.sol\":1255:1267  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1251:1252  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      tag_323\n        /* \"contracts/owner/Operator.sol\":1305:1317  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1279:1304  Ownable.transferOwnership */\n      tag_90\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      jump\t// in\n    tag_323:\n        /* \"contracts/owner/Operator.sol\":1341:1353  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1329:1338  _operator */\n      0x01\n      0x00\n        /* \"contracts/owner/Operator.sol\":1329:1353  _operator = newOperator_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":10493:10842  function safePolyTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_188:\n        /* \"contracts/distribution/TombRewardPool.sol\":10569:10585  uint256 _PolyBal */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10588:10592  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":10588:10602  Poly.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombRewardPool.sol\":10611:10615  this */\n      address\n        /* \"contracts/distribution/TombRewardPool.sol\":10588:10617  Poly.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_325\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_325:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_328\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_328:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10569:10617  uint256 _PolyBal = Poly.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10643:10644  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10632:10640  _PolyBal */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":10632:10644  _PolyBal > 0 */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":10628:10835  if (_PolyBal > 0) {\r... */\n      iszero\n      tag_329\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":10675:10683  _PolyBal */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":10665:10672  _amount */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":10665:10683  _amount > _PolyBal */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":10661:10824  if (_amount > _PolyBal) {\r... */\n      iszero\n      tag_330\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":10704:10736  Poly.safeTransfer(_to, _PolyBal) */\n      tag_331\n        /* \"contracts/distribution/TombRewardPool.sol\":10722:10725  _to */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":10727:10735  _PolyBal */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":10704:10708  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":10704:10721  Poly.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":10704:10736  Poly.safeTransfer(_to, _PolyBal) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_331:\n        /* \"contracts/distribution/TombRewardPool.sol\":10661:10824  if (_amount > _PolyBal) {\r... */\n      jump(tag_332)\n    tag_330:\n        /* \"contracts/distribution/TombRewardPool.sol\":10777:10808  Poly.safeTransfer(_to, _amount) */\n      tag_333\n        /* \"contracts/distribution/TombRewardPool.sol\":10795:10798  _to */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":10800:10807  _amount */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":10777:10781  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":10777:10794  Poly.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_192\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":10777:10808  Poly.safeTransfer(_to, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_333:\n        /* \"contracts/distribution/TombRewardPool.sol\":10661:10824  if (_amount > _PolyBal) {\r... */\n    tag_332:\n        /* \"contracts/distribution/TombRewardPool.sol\":10628:10835  if (_PolyBal > 0) {\r... */\n    tag_329:\n        /* \"contracts/distribution/TombRewardPool.sol\":10493:10842  function safePolyTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":819:824  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":849:872  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":874:876  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":878:883  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":826:884  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:818  _callOptionalReturn */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":2803:3063  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n    tag_267:\n        /* \"contracts/distribution/TombRewardPool.sol\":2871:2885  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":2888:2896  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":2888:2903  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":2871:2903  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":2919:2930  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":2914:3056  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_338:\n        /* \"contracts/distribution/TombRewardPool.sol\":2942:2948  length */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":2936:2939  pid */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":2936:2948  pid < length */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":2914:3056  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_339\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3003:3009  _token */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":2980:3009  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":2980:2988  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":2989:2992  pid */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":2980:2993  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_341\n      jumpi\n      invalid\n    tag_341:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":2980:2999  poolInfo[pid].token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":2980:3009  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":2972:3044  require(poolInfo[pid].token != _token, \"PolyRewardPool: existing pool?\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6c79526577617264506f6f6c3a206578697374696e6720706f6f6c3f0000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"contracts/distribution/TombRewardPool.sol\":2950:2955  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":2914:3056  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_338)\n    tag_339:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":2803:3063  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1018:1023  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1048:1075  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1081  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1083:1085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1087:1092  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1025:1093  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1017  _callOptionalReturn */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3422  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3453:3457  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3433:3438  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3452  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_348\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3494  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3528:3529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3518  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3525  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3529  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3648:3658  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3637:3667  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_350\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_350:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3629:3714  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n    tag_348:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3603:3615  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_353\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3656:3662  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3668  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3670:3671  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3673:3685  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3655  functionCallWithValue */\n      tag_354\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3627:3686  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n    tag_354:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4722:4734  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4779:4784  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4775  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4784  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4746:4827  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      tag_357\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4856:4862  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4855  isContract */\n      tag_358\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4897  require(isContract(target), \"Address: call to non-contract\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4909:4921  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4923:4946  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4961  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4974  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4980  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4981  target.call{value: value}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_360:\n      0x20\n      dup4\n      lt\n      tag_362\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_360)\n    tag_362:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_365\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_364)\n    tag_365:\n      0x60\n      swap2\n      pop\n    tag_364:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4908:4981  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      tag_366\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5015:5022  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5024:5034  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5036:5048  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5014  verifyCallResult */\n      tag_367\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4991:5049  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":787:791  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":990:1002  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1055:1062  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1043:1063  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1035:1063  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1096:1097  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1093  size */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1097  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1082:1097  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7316:7328  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7344:7351  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7374:7384  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7384  return returndata */\n      swap1\n      pop\n      jump(tag_369)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7495  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7502  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7506  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7481:7846  if (returndata.length > 0) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7679:7689  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7673:7690  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7739:7754  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7726:7736  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7724  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7718:7737  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7711:7755  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7628:7773  {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7818:7830  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7811:7831  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_374:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_376\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_374)\n    tag_376:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_377\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_377:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_369:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7 6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb 6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa26469706673582212209f8aec96aeb2611380f2b796adaa964d304e39a4f119426cbfe2a8c096f680fa64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600060055560405180604001604052806910f0cf064dd59200000069ffffffffffffffffffff168152602001690cb49b44ba602d80000069ffffffffffffffffffff1681525060079060026200005c929190620004a7565b503480156200006a57600080fd5b50604051620031ea380380620031ea833981810160405260408110156200009057600080fd5b8101908080519060200190929190805190602001909291905050506000620000bd6200041460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506200016b6200041460201b60201c565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a38042106200029e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620003155781600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600681905550620546006006540160086000600381106200033357fe5b01819055506206978060086000600381106200034b57fe5b01540160086001600381106200035d57fe5b0181905550620003986205460060076000815481106200037957fe5b90600052602060002001546200041c60201b620020d11790919060201c565b600b600060038110620003a757fe5b0181905550620003e2620697806007600181548110620003c357fe5b90600052602060002001546200041c60201b620020d11790919060201c565b600b600160038110620003f157fe5b01819055506000600b6002600381106200040757fe5b0181905550505062000526565b600033905090565b600080821162000494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816200049e57fe5b04905092915050565b828054828255906000526020600020908101928215620004f4579160200282015b82811115620004f3578251829069ffffffffffffffffffff16905591602001919060010190620004c8565b5b50905062000503919062000507565b5090565b5b808211156200052257600081600090555060010162000508565b5090565b612cb480620005366000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80635f96dc11116100c35780639a25cefc1161007c5780639a25cefc146105a4578063b89e73c1146105e6578063e177bb3814610628578063e2bbb1581461065c578063f2fde38b14610694578063f8d936b3146106d857610158565b80635f96dc1114610471578063630b5ba11461048f578063715018a6146104995780638da5cb5b146104a357806393f1a40b146104d757806396805e541461054057610158565b80634456eda2116101155780634456eda2146102f15780634d1e4f421461031157806351eb05a6146103735780635312ea8e146103a157806354575af4146103cf578063570ca7351461043d57610158565b80631526fe271461015d57806317caf6f1146101d35780631ab06ee5146101f1578063231f0c6a1461022957806329605e7714610275578063441a3e70146102b9575b600080fd5b6101896004803603602081101561017357600080fd5b810190808035906020019092919050505061071a565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b6101db61078d565b6040518082815260200191505060405180910390f35b6102276004803603604081101561020757600080fd5b810190808035906020019092919080359060200190929190505050610793565b005b61025f6004803603604081101561023f57600080fd5b8101908080359060200190929190803590602001909291905050506108b7565b6040518082815260200191505060405180910390f35b6102b76004803603602081101561028b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba8565b005b6102ef600480360360408110156102cf57600080fd5b810190808035906020019092919080359060200190929190505050610c63565b005b6102f9610f1b565b60405180821515815260200191505060405180910390f35b61035d6004803603604081101561032757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7a565b6040518082815260200191505060405180910390f35b61039f6004803603602081101561038957600080fd5b81019080803590602001909291905050506111b2565b005b6103cd600480360360208110156103b757600080fd5b81019080803590602001909291905050506113c1565b005b61043b600480360360608110156103e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114f5565b005b6104456117b4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104796117de565b6040518082815260200191505060405180910390f35b6104976117e4565b005b6104a1611811565b005b6104ab61197e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610523600480360360408110156104ed57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119a7565b604051808381526020018281526020019250505060405180910390f35b6105a26004803603608081101561055657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190803590602001909291905050506119d8565b005b6105d0600480360360208110156105ba57600080fd5b8101908080359060200190929190505050611c11565b6040518082815260200191505060405180910390f35b610612600480360360208110156105fc57600080fd5b8101908080359060200190929190505050611c35565b6040518082815260200191505060405180910390f35b610630611c50565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106926004803603604081101561067257600080fd5b810190808035906020019092919080359060200190929190505050611c76565b005b6106d6600480360360208110156106aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ec4565b005b610704600480360360208110156106ee57600080fd5b81019080803590602001909291905050506120b6565b6040518082815260200191505060405180910390f35b6003818154811061072a57600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60055481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610839576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612c316024913960400191505060405180910390fd5b6108416117e4565b60006003838154811061085057fe5b906000526020600020906005020190508060040160009054906101000a900460ff16156108a9576108a282610894836001015460055461215a90919063ffffffff16565b6121dd90919063ffffffff16565b6005819055505b818160010181905550505050565b600080600290505b60018160ff1610610b6a5760086001820360ff16600381106108dd57fe5b01548310610b5e5760086001820360ff16600381106108f857fe5b0154841061093e57610936600b8260ff166003811061091357fe5b0154610928868661215a90919063ffffffff16565b61226590919063ffffffff16565b915050610ba2565b600061098a600b8360ff166003811061095357fe5b015461097c60086001860360ff166003811061096b57fe5b01548761215a90919063ffffffff16565b61226590919063ffffffff16565b905060018260ff1614156109f6576109ed6109de600b6000600381106109ac57fe5b01546109d08860086000600381106109c057fe5b015461215a90919063ffffffff16565b61226590919063ffffffff16565b826121dd90919063ffffffff16565b92505050610ba2565b6001820391505b60018260ff1610610b005760086001830360ff1660038110610a1b57fe5b01548510610a8557610a7c610a6d600b8460ff1660038110610a3957fe5b0154610a5f8860088760ff1660038110610a4f57fe5b015461215a90919063ffffffff16565b61226590919063ffffffff16565b826121dd90919063ffffffff16565b92505050610ba2565b610af2610ae3600b8460ff1660038110610a9b57fe5b0154610ad560086001870360ff1660038110610ab357fe5b015460088760ff1660038110610ac557fe5b015461215a90919063ffffffff16565b61226590919063ffffffff16565b826121dd90919063ffffffff16565b9050816001900391506109fd565b610b55610b46600b600060038110610b1457fe5b0154610b38886008600060038110610b2857fe5b015461215a90919063ffffffff16565b61226590919063ffffffff16565b826121dd90919063ffffffff16565b92505050610ba2565b806001900390506108bf565b50610b9f600b600060038110610b7c57fe5b0154610b91858561215a90919063ffffffff16565b61226590919063ffffffff16565b90505b92915050565b610bb06122eb565b73ffffffffffffffffffffffffffffffffffffffff16610bce61197e565b73ffffffffffffffffffffffffffffffffffffffff1614610c57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c60816122f3565b50565b6000339050600060038481548110610c7757fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610d55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610d5e856111b2565b6000610dab8260010154610d9d670de0b6b3a7640000610d8f8760030154876000015461226590919063ffffffff16565b6120d190919063ffffffff16565b61215a90919063ffffffff16565b90506000811115610e0f57610dc08482612421565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610e8757610e2f85836000015461215a90919063ffffffff16565b8260000181905550610e8684868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166125a09092919063ffffffff16565b5b610ebc670de0b6b3a7640000610eae8560030154856000015461226590919063ffffffff16565b6120d190919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f5e6122eb565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60008060038481548110610f8a57fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561108457600080fd5b505afa158015611098573d6000803e3d6000fd5b505050506040513d60208110156110ae57600080fd5b810190808051906020019092919050505090508360020154421180156110d5575060008114155b1561115f5760006110ea8560020154426108b7565b9050600061111960055461110b88600101548561226590919063ffffffff16565b6120d190919063ffffffff16565b905061115a61114b8461113d670de0b6b3a76400008561226590919063ffffffff16565b6120d190919063ffffffff16565b856121dd90919063ffffffff16565b935050505b6111a68360010154611198670de0b6b3a764000061118a86886000015461226590919063ffffffff16565b6120d190919063ffffffff16565b61215a90919063ffffffff16565b94505050505092915050565b6000600382815481106111c157fe5b90600052602060002090600502019050806002015442116111e257506113be565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561126f57600080fd5b505afa158015611283573d6000803e3d6000fd5b505050506040513d602081101561129957600080fd5b8101908080519060200190929190505050905060008114156112c55742826002018190555050506113be565b8160040160009054906101000a900460ff166113185760018260040160006101000a81548160ff02191690831515021790555061131182600101546005546121dd90919063ffffffff16565b6005819055505b600060055411156113b25760006113338360020154426108b7565b9050600061136260055461135486600101548561226590919063ffffffff16565b6120d190919063ffffffff16565b90506113a761139484611386670de0b6b3a76400008561226590919063ffffffff16565b6120d190919063ffffffff16565b85600301546121dd90919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b6000600382815481106113d057fe5b9060005260206000209060050201905060006004600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154905060008260000181905550600082600101819055506114a033828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166125a09092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461159b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612c316024913960400191505060405180910390fd5b62278d0060086001600381106115ad57fe5b01540142101561178457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561167b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260058152602001807f21506f6c7900000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600380549050905060005b818110156117815760006003828154811061169f57fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415611775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21706f6f6c2e746f6b656e00000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611688565b50505b6117af81838573ffffffffffffffffffffffffffffffffffffffff166125a09092919063ffffffff16565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000600380549050905060005b8181101561180d57611802816111b2565b8060010190506117f1565b5050565b6118196122eb565b73ffffffffffffffffffffffffffffffffffffffff1661183761197e565b73ffffffffffffffffffffffffffffffffffffffff16146118c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612c316024913960400191505060405180910390fd5b611a8783612642565b8115611a9657611a956117e4565b5b600654421015611ac9576000811415611ab3576006549050611ac4565b600654811015611ac35760065490505b5b611ae1565b6000811480611ad757504281105b15611ae0574290505b5b600060065482111580611af45750428211155b905060036040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555050508015611c0a57611c03856005546121dd90919063ffffffff16565b6005819055505b5050505050565b60078181548110611c2157600080fd5b906000526020600020016000915090505481565b60088160038110611c4557600080fd5b016000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000339050600060038481548110611c8a57fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611cf7856111b2565b600081600001541115611db7576000611d518260010154611d43670de0b6b3a7640000611d358760030154876000015461226590919063ffffffff16565b6120d190919063ffffffff16565b61215a90919063ffffffff16565b90506000811115611db557611d668482612421565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000841115611e3157611e118330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612747909392919063ffffffff16565b611e288482600001546121dd90919063ffffffff16565b81600001819055505b611e66670de0b6b3a7640000611e588460030154846000015461226590919063ffffffff16565b6120d190919063ffffffff16565b8160010181905550848373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040518082815260200191505060405180910390a35050505050565b611ecc6122eb565b73ffffffffffffffffffffffffffffffffffffffff16611eea61197e565b73ffffffffffffffffffffffffffffffffffffffff1614611f73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612b976026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b81600381106120c657600080fd5b016000915090505481565b6000808211612148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161215157fe5b04905092915050565b6000828211156121d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b60008082840190508381101561225b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561227857600090506122e5565b600082840290508284828161228957fe5b04146122e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612c106021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612379576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612be3602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36123dd81611ec4565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156124ac57600080fd5b505afa1580156124c0573d6000803e3d6000fd5b505050506040513d60208110156124d657600080fd5b81019080805190602001909291905050509050600081111561259b578082111561254c576125478382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166125a09092919063ffffffff16565b61259a565b6125998383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166125a09092919063ffffffff16565b5b5b505050565b61263d8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612808565b505050565b6000600380549050905060005b81811015612742578273ffffffffffffffffffffffffffffffffffffffff166003828154811061267b57fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f506f6c79526577617264506f6f6c3a206578697374696e6720706f6f6c3f000081525060200191505060405180910390fd5b80600101905061264f565b505050565b612802846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612808565b50505050565b600061286a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166128f79092919063ffffffff16565b90506000815111156128f25780806020019051602081101561288b57600080fd5b81019080805190602001909291905050506128f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612c55602a913960400191505060405180910390fd5b5b505050565b6060612906848460008561290f565b90509392505050565b60608247101561296a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612bbd6026913960400191505060405180910390fd5b61297385612ab7565b6129e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612a345780518252602082019150602081019050602083039250612a11565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612a96576040519150601f19603f3d011682016040523d82523d6000602084013e612a9b565b606091505b5091509150612aab828286612aca565b92505050949350505050565b600080823b905060008111915050919050565b60608315612ada57829050612b8f565b600083511115612aed5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b54578082015181840152602081019050612b39565b50505050905090810190601f168015612b815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212209f8aec96aeb2611380f2b796adaa964d304e39a4f119426cbfe2a8c096f680fa64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH10 0x10F0CF064DD592000000 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0xCB49B44BA602D800000 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x7 SWAP1 PUSH1 0x2 PUSH3 0x5C SWAP3 SWAP2 SWAP1 PUSH3 0x4A7 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x31EA CODESIZE SUB DUP1 PUSH3 0x31EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH3 0xBD PUSH3 0x414 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x16B PUSH3 0x414 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 TIMESTAMP LT PUSH3 0x29E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x315 JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x54600 PUSH1 0x6 SLOAD ADD PUSH1 0x8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH3 0x333 JUMPI INVALID JUMPDEST ADD DUP2 SWAP1 SSTORE POP PUSH3 0x69780 PUSH1 0x8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH3 0x34B JUMPI INVALID JUMPDEST ADD SLOAD ADD PUSH1 0x8 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH3 0x35D JUMPI INVALID JUMPDEST ADD DUP2 SWAP1 SSTORE POP PUSH3 0x398 PUSH3 0x54600 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH3 0x379 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH3 0x41C PUSH1 0x20 SHL PUSH3 0x20D1 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH3 0x3A7 JUMPI INVALID JUMPDEST ADD DUP2 SWAP1 SSTORE POP PUSH3 0x3E2 PUSH3 0x69780 PUSH1 0x7 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH3 0x3C3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH3 0x41C PUSH1 0x20 SHL PUSH3 0x20D1 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH3 0x3F1 JUMPI INVALID JUMPDEST ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH3 0x407 JUMPI INVALID JUMPDEST ADD DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x526 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH3 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH3 0x49E JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x4F4 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x4F3 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4C8 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x503 SWAP2 SWAP1 PUSH3 0x507 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x522 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x508 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2CB4 DUP1 PUSH3 0x536 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x9A25CEFC GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x9A25CEFC EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0xB89E73C1 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xE177BB38 EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xF8D936B3 EQ PUSH2 0x6D8 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x96805E54 EQ PUSH2 0x540 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x4456EDA2 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x4D1E4F42 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x43D JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x793 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x445 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x479 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0x17E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A1 PUSH2 0x1811 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x523 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x612 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x630 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x692 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x704 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C31 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x841 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x850 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A2 DUP3 PUSH2 0x894 DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND LT PUSH2 0xB6A JUMPI PUSH1 0x8 PUSH1 0x1 DUP3 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x8DD JUMPI INVALID JUMPDEST ADD SLOAD DUP4 LT PUSH2 0xB5E JUMPI PUSH1 0x8 PUSH1 0x1 DUP3 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x8F8 JUMPI INVALID JUMPDEST ADD SLOAD DUP5 LT PUSH2 0x93E JUMPI PUSH2 0x936 PUSH1 0xB DUP3 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x913 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x928 DUP7 DUP7 PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98A PUSH1 0xB DUP4 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x953 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x97C PUSH1 0x8 PUSH1 0x1 DUP7 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x96B JUMPI INVALID JUMPDEST ADD SLOAD DUP8 PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0xFF AND EQ ISZERO PUSH2 0x9F6 JUMPI PUSH2 0x9ED PUSH2 0x9DE PUSH1 0xB PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x9AC JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x9D0 DUP9 PUSH1 0x8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x9C0 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0xFF AND LT PUSH2 0xB00 JUMPI PUSH1 0x8 PUSH1 0x1 DUP4 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xA1B JUMPI INVALID JUMPDEST ADD SLOAD DUP6 LT PUSH2 0xA85 JUMPI PUSH2 0xA7C PUSH2 0xA6D PUSH1 0xB DUP5 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xA39 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0xA5F DUP9 PUSH1 0x8 DUP8 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xA4F JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xAF2 PUSH2 0xAE3 PUSH1 0xB DUP5 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xA9B JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0xAD5 PUSH1 0x8 PUSH1 0x1 DUP8 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xAB3 JUMPI INVALID JUMPDEST ADD SLOAD PUSH1 0x8 DUP8 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xAC5 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 SWAP1 SUB SWAP2 POP PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xB55 PUSH2 0xB46 PUSH1 0xB PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xB14 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0xB38 DUP9 PUSH1 0x8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xB28 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBA2 JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP1 SUB SWAP1 POP PUSH2 0x8BF JUMP JUMPDEST POP PUSH2 0xB9F PUSH1 0xB PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xB7C JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0xB91 DUP6 DUP6 PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB0 PUSH2 0x22EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBCE PUSH2 0x197E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC60 DUP2 PUSH2 0x22F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC77 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5E DUP6 PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAB DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xD9D PUSH8 0xDE0B6B3A7640000 PUSH2 0xD8F DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE0F JUMPI PUSH2 0xDC0 DUP5 DUP3 PUSH2 0x2421 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xE2F DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE86 DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xEBC PUSH8 0xDE0B6B3A7640000 PUSH2 0xEAE DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5E PUSH2 0x22EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF8A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1098 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x10D5 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 PUSH2 0x10EA DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1119 PUSH1 0x5 SLOAD PUSH2 0x110B DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x115A PUSH2 0x114B DUP5 PUSH2 0x113D PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x11A6 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x1198 PUSH8 0xDE0B6B3A7640000 PUSH2 0x118A DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x11E2 JUMPI POP PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x12C5 JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x13BE JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1318 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1311 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x0 PUSH2 0x1333 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1362 PUSH1 0x5 SLOAD PUSH2 0x1354 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13A7 PUSH2 0x1394 DUP5 PUSH2 0x1386 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13D0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x14A0 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C31 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 PUSH1 0x8 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x15AD JUMPI INVALID JUMPDEST ADD SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x1784 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x167B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x21506F6C79000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1781 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x169F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x21706F6F6C2E746F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1688 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x17AF DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x180D JUMPI PUSH2 0x1802 DUP2 PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x17F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1819 PUSH2 0x22EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1837 PUSH2 0x197E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C31 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A87 DUP4 PUSH2 0x2642 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1AC9 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1AB3 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1AC3 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x1AD7 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x1AE0 JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x1AF4 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x1C0A JUMPI PUSH2 0x1C03 DUP6 PUSH1 0x5 SLOAD PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1C45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C8A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1CF7 DUP6 PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1DB7 JUMPI PUSH1 0x0 PUSH2 0x1D51 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1D43 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1D35 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH2 0x1D66 DUP5 DUP3 PUSH2 0x2421 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1E31 JUMPI PUSH2 0x1E11 DUP4 ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2747 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E28 DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1E66 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1E58 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ECC PUSH2 0x22EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEA PUSH2 0x197E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B97 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x20C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2151 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x225B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2278 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x22E5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2289 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x22E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C10 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2379 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BE3 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x23DD DUP2 PUSH2 0x1EC4 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x259B JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x254C JUMPI PUSH2 0x2547 DUP4 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x259A JUMP JUMPDEST PUSH2 0x2599 DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x263D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2808 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2742 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x267B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2737 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C79526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x264F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2802 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2808 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x286A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x28F2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x28F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C55 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2906 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x290F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x296A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BBD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2973 DUP6 PUSH2 0x2AB7 JUMP JUMPDEST PUSH2 0x29E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2A34 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2A96 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2AAB DUP3 DUP3 DUP7 PUSH2 0x2ACA JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2ADA JUMPI DUP3 SWAP1 POP PUSH2 0x2B8F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2AED JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B54 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B39 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2B81 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212209F8AEC96 0xAE 0xB2 PUSH2 0x1380 CALLCODE 0xB7 SWAP7 0xAD 0xAA SWAP7 0x4D ADDRESS 0x4E CODECOPY LOG4 CALL NOT TIMESTAMP PUSH13 0xBFE2A8C096F680FA64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "464:11013:6:-:0;;;1583:1;1550:34;;1672:63;;;;;;;;1710:11;1672:63;;;;;;1723:11;1672:63;;;;;;;;;;;;;:::i;:::-;;2262:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:17:0;958:12;:10;;;:12;;:::i;:::-;938:32;;989:9;980:6;;:18;;;;;;;;;;;;;;;;;;1046:9;1013:43;;1042:1;1013:43;;;;;;;;;;;;904:159;435:12:7;:10;;;:12;;:::i;:::-;423:9;;:24;;;;;;;;;;;;;;;;;;495:9;;;;;;;;;;;463:42;;491:1;463:42;;;;;;;;;;;;2357:14:6;2339:15;:32;2331:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2412:1;2395:19;;:5;:19;;;2391:45;;2430:5;2416:4;;:20;;;;;;;;;;;;;;;;;;2391:45;2465:14;2449:13;:30;;;;2527:6;2511:13;;:22;2492:13;2506:1;2492:16;;;;;;;;:41;;;;2593:6;2574:13;2588:1;2574:16;;;;;;;;;:25;2555:13;2569:1;2555:16;;;;;;;;:44;;;;2648:32;2673:6;2648:17;2666:1;2648:20;;;;;;;;;;;;;;;;:24;;;;;;:32;;;;:::i;:::-;2624:18;2643:1;2624:21;;;;;;;;:56;;;;2715:32;2740:6;2715:17;2733:1;2715:20;;;;;;;;;;;;;;;;:24;;;;;;:32;;;;:::i;:::-;2691:18;2710:1;2691:21;;;;;;;;:56;;;;2784:1;2760:18;2779:1;2760:21;;;;;;;;:25;;;;2262:533;;464:11013;;596:96:4;649:7;675:10;668:17;;596:96;:::o;4217:150:5:-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;464:11013:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x9A25CEFC GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x9A25CEFC EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0xB89E73C1 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xE177BB38 EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xF8D936B3 EQ PUSH2 0x6D8 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x96805E54 EQ PUSH2 0x540 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x4456EDA2 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x4D1E4F42 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x43D JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x793 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x445 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x479 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0x17E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A1 PUSH2 0x1811 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x523 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x612 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x630 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x692 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x704 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C31 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x841 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x850 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A2 DUP3 PUSH2 0x894 DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND LT PUSH2 0xB6A JUMPI PUSH1 0x8 PUSH1 0x1 DUP3 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x8DD JUMPI INVALID JUMPDEST ADD SLOAD DUP4 LT PUSH2 0xB5E JUMPI PUSH1 0x8 PUSH1 0x1 DUP3 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x8F8 JUMPI INVALID JUMPDEST ADD SLOAD DUP5 LT PUSH2 0x93E JUMPI PUSH2 0x936 PUSH1 0xB DUP3 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x913 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x928 DUP7 DUP7 PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98A PUSH1 0xB DUP4 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x953 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x97C PUSH1 0x8 PUSH1 0x1 DUP7 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x96B JUMPI INVALID JUMPDEST ADD SLOAD DUP8 PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0xFF AND EQ ISZERO PUSH2 0x9F6 JUMPI PUSH2 0x9ED PUSH2 0x9DE PUSH1 0xB PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x9AC JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x9D0 DUP9 PUSH1 0x8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x9C0 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0xFF AND LT PUSH2 0xB00 JUMPI PUSH1 0x8 PUSH1 0x1 DUP4 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xA1B JUMPI INVALID JUMPDEST ADD SLOAD DUP6 LT PUSH2 0xA85 JUMPI PUSH2 0xA7C PUSH2 0xA6D PUSH1 0xB DUP5 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xA39 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0xA5F DUP9 PUSH1 0x8 DUP8 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xA4F JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xAF2 PUSH2 0xAE3 PUSH1 0xB DUP5 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xA9B JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0xAD5 PUSH1 0x8 PUSH1 0x1 DUP8 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xAB3 JUMPI INVALID JUMPDEST ADD SLOAD PUSH1 0x8 DUP8 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xAC5 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 SWAP1 SUB SWAP2 POP PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xB55 PUSH2 0xB46 PUSH1 0xB PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xB14 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0xB38 DUP9 PUSH1 0x8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xB28 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBA2 JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP1 SUB SWAP1 POP PUSH2 0x8BF JUMP JUMPDEST POP PUSH2 0xB9F PUSH1 0xB PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xB7C JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0xB91 DUP6 DUP6 PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB0 PUSH2 0x22EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBCE PUSH2 0x197E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC60 DUP2 PUSH2 0x22F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC77 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5E DUP6 PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAB DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xD9D PUSH8 0xDE0B6B3A7640000 PUSH2 0xD8F DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE0F JUMPI PUSH2 0xDC0 DUP5 DUP3 PUSH2 0x2421 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xE2F DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE86 DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xEBC PUSH8 0xDE0B6B3A7640000 PUSH2 0xEAE DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5E PUSH2 0x22EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF8A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1098 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x10D5 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 PUSH2 0x10EA DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1119 PUSH1 0x5 SLOAD PUSH2 0x110B DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x115A PUSH2 0x114B DUP5 PUSH2 0x113D PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x11A6 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x1198 PUSH8 0xDE0B6B3A7640000 PUSH2 0x118A DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x11E2 JUMPI POP PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x12C5 JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x13BE JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1318 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1311 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x0 PUSH2 0x1333 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1362 PUSH1 0x5 SLOAD PUSH2 0x1354 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13A7 PUSH2 0x1394 DUP5 PUSH2 0x1386 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13D0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x14A0 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C31 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 PUSH1 0x8 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x15AD JUMPI INVALID JUMPDEST ADD SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x1784 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x167B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x21506F6C79000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1781 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x169F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x21706F6F6C2E746F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1688 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x17AF DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x180D JUMPI PUSH2 0x1802 DUP2 PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x17F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1819 PUSH2 0x22EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1837 PUSH2 0x197E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C31 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A87 DUP4 PUSH2 0x2642 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1AC9 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1AB3 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1AC3 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x1AD7 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x1AE0 JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x1AF4 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x1C0A JUMPI PUSH2 0x1C03 DUP6 PUSH1 0x5 SLOAD PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1C45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C8A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1CF7 DUP6 PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1DB7 JUMPI PUSH1 0x0 PUSH2 0x1D51 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1D43 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1D35 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x215A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH2 0x1D66 DUP5 DUP3 PUSH2 0x2421 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1E31 JUMPI PUSH2 0x1E11 DUP4 ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2747 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E28 DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x21DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1E66 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1E58 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2265 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ECC PUSH2 0x22EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEA PUSH2 0x197E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B97 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x20C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2151 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x225B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2278 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x22E5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2289 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x22E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C10 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2379 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BE3 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x23DD DUP2 PUSH2 0x1EC4 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x259B JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x254C JUMPI PUSH2 0x2547 DUP4 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x259A JUMP JUMPDEST PUSH2 0x2599 DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x263D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2808 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2742 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x267B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2737 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C79526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x264F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2802 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2808 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x286A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x28F2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x28F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C55 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2906 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x290F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x296A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BBD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2973 DUP6 PUSH2 0x2AB7 JUMP JUMPDEST PUSH2 0x29E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2A34 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2A96 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2AAB DUP3 DUP3 DUP7 PUSH2 0x2ACA JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2ADA JUMPI DUP3 SWAP1 POP PUSH2 0x2B8F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2AED JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B54 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B39 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2B81 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212209F8AEC96 0xAE 0xB2 PUSH2 0x1380 CALLCODE 0xB7 SWAP7 0xAD 0xAA SWAP7 0x4D ADDRESS 0x4E CODECOPY LOG4 CALL NOT TIMESTAMP PUSH13 0xBFE2A8C096F680FA64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "464:11013:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1305:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4410:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4810:1332;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;894:115:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9121:810:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;786:100:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6206:771:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7316:908;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10002:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10850:624;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;521:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1635:28:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7060:180;;;:::i;:::-;;1771:145:0;;;:::i;:::-;;1139:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1389:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3141:1173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1672:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1779:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1251:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8259:826;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2065:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1906:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1305:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1550:34::-;;;;:::o;4410:321::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4489:17:6::1;:15;:17::i;:::-;4517:21;4541:8;4550:4;4541:14;;;;;;;;;;;;;;;;;;4517:38;;4570:4;:14;;;;;;;;;;;;4566:118;;;4619:53;4660:11;4619:36;4639:4;:15;;;4619;;:19;;:36;;;;:::i;:::-;:40;;:53;;;;:::i;:::-;4601:15;:71;;;;4566:118;4712:11;4694:4;:15;;:29;;;;769:1:7;4410:321:6::0;;:::o;4810:1332::-;4895:7;4920:13;4936:1;4920:17;;4915:1153;4950:1;4939:7;:12;;;4915:1153;;4994:13;5018:1;5008:7;:11;4994:26;;;;;;;;;;;4983:7;:37;4979:1078;;5058:13;5082:1;5072:7;:11;5058:26;;;;;;;;;;;5045:9;:39;5041:150;;5116:55;5143:18;5162:7;5143:27;;;;;;;;;;;5116:22;5128:9;5116:7;:11;;:22;;;;:::i;:::-;:26;;:55;;;;:::i;:::-;5109:62;;;;;5041:150;5211:24;5238:72;5282:18;5301:7;5282:27;;;;;;;;;;;5238:39;5250:13;5274:1;5264:7;:11;5250:26;;;;;;;;;;;5238:7;:11;;:39;;;;:::i;:::-;:43;;:72;;;;:::i;:::-;5211:99;;5344:1;5333:7;:12;;;5329:148;;;5377:80;5398:58;5434:18;5453:1;5434:21;;;;;;;;;5398:31;5419:9;5398:13;5412:1;5398:16;;;;;;;;;:20;;:31;;;;:::i;:::-;:35;;:58;;;;:::i;:::-;5377:16;:20;;:80;;;;:::i;:::-;5370:87;;;;;;5329:148;5520:1;5510:7;:11;5500:21;;5495:441;5534:1;5523:7;:12;;;5495:441;;5588:13;5612:1;5602:7;:11;5588:26;;;;;;;;;;;5575:9;:39;5571:195;;5650:92;5671:70;5713:18;5732:7;5713:27;;;;;;;;;;;5671:37;5698:9;5671:13;5685:7;5671:22;;;;;;;;;;;:26;;:37;;;;:::i;:::-;:41;;:70;;;;:::i;:::-;5650:16;:20;;:92;;;;:::i;:::-;5643:99;;;;;;5571:195;5807:109;5828:87;5887:18;5906:7;5887:27;;;;;;;;;;;5828:54;5855:13;5879:1;5869:7;:11;5855:26;;;;;;;;;;;5828:13;5842:7;5828:22;;;;;;;;;;;:26;;:54;;;;:::i;:::-;:58;;:87;;;;:::i;:::-;5807:16;:20;;:109;;;;:::i;:::-;5788:128;;5537:9;;;;;;5495:441;;;5961:80;5982:58;6018:18;6037:1;6018:21;;;;;;;;;5982:31;6003:9;5982:13;5996:1;5982:16;;;;;;;;;:20;;:31;;;;:::i;:::-;:35;;:58;;;;:::i;:::-;5961:16;:20;;:80;;;;:::i;:::-;5954:87;;;;;;4979:1078;4953:9;;;;;;4915:1153;;;;6085:49;6112:18;6131:1;6112:21;;;;;;;;;6085:22;6097:9;6085:7;:11;;:22;;;;:::i;:::-;:26;;:49;;;;:::i;:::-;6078:56;;4810:1332;;;;;:::o;894:115:7:-;1362:12:0;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;970:31:7::1;988:12;970:17;:31::i;:::-;894:115:::0;:::o;9121:810:6:-;9188:15;9206:10;9188:28;;9227:21;9251:8;9260:4;9251:14;;;;;;;;;;;;;;;;;;9227:38;;9276:21;9300:8;:14;9309:4;9300:14;;;;;;;;;;;:23;9315:7;9300:23;;;;;;;;;;;;;;;9276:47;;9357:7;9342:4;:11;;;:22;;9334:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9398:16;9409:4;9398:10;:16::i;:::-;9425;9444:68;9496:4;:15;;;9444:47;9486:4;9444:37;9460:4;:20;;;9444:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;:51;;:68;;;;:::i;:::-;9425:87;;9538:1;9527:8;:12;9523:129;;;9556:35;9573:7;9582:8;9556:16;:35::i;:::-;9622:7;9611:29;;;9631:8;9611:29;;;;;;;;;;;;;;;;;;9523:129;9676:1;9666:7;:11;9662:138;;;9708:24;9724:7;9708:4;:11;;;:15;;:24;;;;:::i;:::-;9694:4;:11;;:38;;;;9747:41;9771:7;9780;9747:4;:10;;;;;;;;;;;;:23;;;;:41;;;;;:::i;:::-;9662:138;9828:47;9870:4;9828:37;9844:4;:20;;;9828:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;9810:4;:15;;:65;;;;9909:4;9900:7;9891:32;;;9915:7;9891:32;;;;;;;;;;;;;;;;;;9121:810;;;;;;:::o;786:100:7:-;829:4;869:9;;;;;;;;;;;853:25;;:12;:10;:12::i;:::-;:25;;;846:32;;786:100;:::o;6206:771:6:-;6279:7;6299:21;6323:8;6332:4;6323:14;;;;;;;;;;;;;;;;;;6299:38;;6348:21;6372:8;:14;6381:4;6372:14;;;;;;;;;;;:21;6387:5;6372:21;;;;;;;;;;;;;;;6348:45;;6404:23;6430:4;:20;;;6404:46;;6461:19;6483:4;:10;;;;;;;;;;;;:20;;;6512:4;6483:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6461:57;;6551:4;:19;;;6533:15;:37;:57;;;;;6589:1;6574:11;:16;;6533:57;6529:360;;;6607:24;6634:56;6653:4;:19;;;6674:15;6634:18;:56::i;:::-;6607:83;;6705:19;6727:58;6769:15;;6727:37;6748:4;:15;;;6727:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;6705:80;;6818:59;6838:38;6864:11;6838:21;6854:4;6838:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;6818:15;:19;;:59;;;;:::i;:::-;6800:77;;6529:360;;;6906:63;6953:4;:15;;;6906:42;6943:4;6906:32;6922:15;6906:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;:46;;:63;;;;:::i;:::-;6899:70;;;;;;6206:771;;;;:::o;7316:908::-;7368:21;7392:8;7401:4;7392:14;;;;;;;;;;;;;;;;;;7368:38;;7440:4;:19;;;7421:15;:38;7417:77;;7476:7;;;7417:77;7504:19;7526:4;:10;;;;;;;;;;;;:20;;;7555:4;7526:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7504:57;;7591:1;7576:11;:16;7572:107;;;7631:15;7609:4;:19;;:37;;;;7661:7;;;;7572:107;7694:4;:14;;;;;;;;;;;;7689:138;;7742:4;7725;:14;;;:21;;;;;;;;;;;;;;;;;;7779:36;7799:4;:15;;;7779;;:19;;:36;;;;:::i;:::-;7761:15;:54;;;;7689:138;7859:1;7841:15;;:19;7837:332;;;7877:24;7904:56;7923:4;:19;;;7944:15;7904:18;:56::i;:::-;7877:83;;7975:19;7997:58;8039:15;;7997:37;8018:4;:15;;;7997:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;7975:80;;8093:64;8118:38;8144:11;8118:21;8134:4;8118:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;8093:4;:20;;;:24;;:64;;;;:::i;:::-;8070:4;:20;;:87;;;;7837:332;;;8201:15;8179:4;:19;;:37;;;;7316:908;;;;:::o;10002:377::-;10061:21;10085:8;10094:4;10085:14;;;;;;;;;;;;;;;;;;10061:38;;10110:21;10134:8;:14;10143:4;10134:14;;;;;;;;;;;:26;10149:10;10134:26;;;;;;;;;;;;;;;10110:50;;10171:15;10189:4;:11;;;10171:29;;10225:1;10211:4;:11;;:15;;;;10255:1;10237:4;:15;;:19;;;;10267:44;10291:10;10303:7;10267:4;:10;;;;;;;;;;;;:23;;;;:44;;;;;:::i;:::-;10357:4;10345:10;10327:44;;;10363:7;10327:44;;;;;;;;;;;;;;;;;;10002:377;;;;:::o;10850:624::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11039:7:6::1;11020:13;11034:1;11020:16;;;;;;;;;:26;11002:15;:44;10998:427;;;11160:4;;;;;;;;;;;11150:14;;:6;:14;;;;11142:32;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11189:14;11206:8;:15;;;;11189:32;;11241:11;11236:178;11264:6;11258:3;:12;11236:178;;;11298:21;11322:8;11331:3;11322:13;;;;;;;;;;;;;;;;;;11298:37;;11372:4;:10;;;;;;;;;;;;11362:20;;:6;:20;;;;11354:44;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11236:178;11272:5;;;;;11236:178;;;;10998:427;;11435:31;11455:2;11459:6;11435;:19;;;;:31;;;;;:::i;:::-;10850:624:::0;;;:::o;521:85:7:-;562:7;589:9;;;;;;;;;;;582:16;;521:85;:::o;1635:28:6:-;;;;:::o;7060:180::-;7105:14;7122:8;:15;;;;7105:32;;7153:11;7148:85;7176:6;7170:3;:12;7148:85;;;7206:15;7217:3;7206:10;:15::i;:::-;7184:5;;;;;7148:85;;;;7060:180;:::o;1771:145:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:1:::1;1840:40;;1861:6;::::0;::::1;;;;;;;;1840:40;;;;;;;;;;;;1907:1;1890:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1771:145::o:0;1139:85::-;1185:7;1211:6;;;;;;;;;;;1204:13;;1139:85;:::o;1389:64:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3141:1173::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3307:26:6::1;3326:6;3307:18;:26::i;:::-;3348:11;3344:61;;;3376:17;:15;:17::i;:::-;3344:61;3437:13;;3419:15;:31;3415:534;;;3523:1;3504:15;:20;3500:243;;;3563:13;;3545:31;;3500:243;;;3639:13;;3621:15;:31;3617:111;;;3695:13;;3677:31;;3617:111;3500:243;3415:534;;;3830:1;3811:15;:20;:57;;;;3853:15;3835;:33;3811:57;3807:131;;;3907:15;3889:33;;3807:131;3415:534;3959:15;3997:13;;3978:15;:32;;3977:74;;;;4035:15;4016;:34;;3977:74;3959:92;;4062:8;4076:126;;;;;;;;4093:6;4076:126;;;;;;4113:11;4076:126;;;;4142:15;4076:126;;;;4176:1;4076:126;;;;4190:10;4076:126;;;;::::0;4062:141:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4218:10;4214:93;;;4263:32;4283:11;4263:15;;:19;;:32;;;;:::i;:::-;4245:15;:50;;;;4214:93;769:1:7;3141:1173:6::0;;;;:::o;1672:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1779:31::-;;;;;;;;;;;;;;;;;;;;:::o;1251:18::-;;;;;;;;;;;;;:::o;8259:826::-;8325:15;8343:10;8325:28;;8364:21;8388:8;8397:4;8388:14;;;;;;;;;;;;;;;;;;8364:38;;8413:21;8437:8;:14;8446:4;8437:14;;;;;;;;;;;:23;8452:7;8437:23;;;;;;;;;;;;;;;8413:47;;8471:16;8482:4;8471:10;:16::i;:::-;8516:1;8502:4;:11;;;:15;8498:290;;;8534:16;8553:68;8605:4;:15;;;8553:47;8595:4;8553:37;8569:4;:20;;;8553:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;:51;;:68;;;;:::i;:::-;8534:87;;8651:1;8640:8;:12;8636:141;;;8673:35;8690:7;8699:8;8673:16;:35::i;:::-;8743:7;8732:29;;;8752:8;8732:29;;;;;;;;;;;;;;;;;;8636:141;8498:290;;8812:1;8802:7;:11;8798:157;;;8830:60;8858:7;8875:4;8882:7;8830:4;:10;;;;;;;;;;;;:27;;;;:60;;;;;;:::i;:::-;8919:24;8935:7;8919:4;:11;;;:15;;:24;;;;:::i;:::-;8905:4;:11;;:38;;;;8798:157;8983:47;9025:4;8983:37;8999:4;:20;;;8983:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;8965:4;:15;;:65;;;;9063:4;9054:7;9046:31;;;9069:7;9046:31;;;;;;;;;;;;;;;;;;8259:826;;;;;:::o;2065:240:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:1:::1;2153:22;;:8;:22;;;;2145:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:8;2233:38;;2254:6;::::0;::::1;;;;;;;;2233:38;;;;;;;;;;;;2290:8;2281:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2065:240:::0;:::o;1906:36:6:-;;;;;;;;;;;;;;;;;;;;:::o;4217:150:5:-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3538:215::-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;596:96:4:-;649:7;675:10;668:17;;596:96;:::o;1017:344:7:-;1132:1;1108:26;;:12;:26;;;;1086:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:12;1223:45;;1251:1;1223:45;;;;;;;;;;;;1279:39;1305:12;1279:25;:39::i;:::-;1341:12;1329:9;;:24;;;;;;;;;;;;;;;;;;1017:344;:::o;10493:349:6:-;10569:16;10588:4;;;;;;;;;;;:14;;;10611:4;10588:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10569:48;;10643:1;10632:8;:12;10628:207;;;10675:8;10665:7;:18;10661:163;;;10704:32;10722:3;10727:8;10704:4;;;;;;;;;;;:17;;;;:32;;;;;:::i;:::-;10661:163;;;10777:31;10795:3;10800:7;10777:4;;;;;;;;;;;:17;;;;:31;;;;;:::i;:::-;10661:163;10628:207;10493:349;;;:::o;717:175:2:-;799:86;819:5;849:23;;;874:2;878:5;826:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:19;:86::i;:::-;717:175;;;:::o;2803:260:6:-;2871:14;2888:8;:15;;;;2871:32;;2919:11;2914:142;2942:6;2936:3;:12;2914:142;;;3003:6;2980:29;;:8;2989:3;2980:13;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:29;;;;2972:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:5;;;;;2914:142;;;;2803:260;;:::o;898:203:2:-;998:96;1018:5;1048:27;;;1077:4;1083:2;1087:5;1025:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;998:19;:96::i;:::-;898:203;;;;:::o;2980:751::-;3399:23;3425:69;3453:4;3425:69;;;;;;;;;;;;;;;;;3433:5;3425:27;;;;:69;;;;;:::i;:::-;3399:95;;3528:1;3508:10;:17;:21;3504:221;;;3648:10;3637:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3629:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3504:221;2980:751;;;:::o;3470:223:3:-;3603:12;3634:52;3656:6;3664:4;3670:1;3673:12;3634:21;:52::i;:::-;3627:59;;3470:223;;;;;:::o;4557:499::-;4722:12;4779:5;4754:21;:30;;4746:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:18;4856:6;4845:10;:18::i;:::-;4837:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:12;4923:23;4950:6;:11;;4969:5;4976:4;4950:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4908:73;;;;4998:51;5015:7;5024:10;5036:12;4998:16;:51::i;:::-;4991:58;;;;4557:499;;;;;;:::o;727:377::-;787:4;990:12;1055:7;1043:20;1035:28;;1096:1;1089:4;:8;1082:15;;;727:377;;;:::o;7170:692::-;7316:12;7344:7;7340:516;;;7374:10;7367:17;;;;7340:516;7505:1;7485:10;:17;:21;7481:365;;;7679:10;7673:17;7739:15;7726:10;7722:2;7718:19;7711:44;7628:145;7818:12;7811:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:692;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2288800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Poly()": "1113",
								"add(uint256,address,bool,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"epochEndTimes(uint256)": "1173",
								"epochPolyPerSecond(uint256)": "1261",
								"epochTotalRewards(uint256)": "2002",
								"getGeneratedReward(uint256,uint256)": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"isOperator()": "1130",
								"massUpdatePools()": "infinite",
								"operator()": "1188",
								"owner()": "1144",
								"pendingPoly(uint256,address)": "infinite",
								"poolInfo(uint256)": "5441",
								"poolStartTime()": "1028",
								"renounceOwnership()": "24396",
								"set(uint256,uint256)": "infinite",
								"totalAllocPoint()": "1051",
								"transferOperator(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "2218",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkPoolDuplicate(contract IERC20)": "infinite",
								"safePolyTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1550,
									"end": 1584,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1550,
									"end": 1584,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1721,
									"name": "PUSH",
									"source": 6,
									"value": "10F0CF064DD592000000"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1723,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "CB49B44BA602D800000"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 938,
									"end": 955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 989,
									"end": 998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 904,
									"end": 1063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 491,
									"end": 492,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 2357,
									"end": 2371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2339,
									"end": 2354,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 2339,
									"end": 2371,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "6C61746500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2331,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2395,
									"end": 2414,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2395,
									"end": 2414,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2395,
									"end": 2400,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2395,
									"end": 2414,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2395,
									"end": 2414,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2395,
									"end": 2414,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2391,
									"end": 2436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2391,
									"end": 2436,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2420,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2416,
									"end": 2420,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2391,
									"end": 2436,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2391,
									"end": 2436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2465,
									"end": 2479,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2462,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2449,
									"end": 2479,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2479,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2479,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2479,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2533,
									"name": "PUSH",
									"source": 6,
									"value": "54600"
								},
								{
									"begin": 2511,
									"end": 2524,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2511,
									"end": 2524,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2511,
									"end": 2533,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2505,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2506,
									"end": 2507,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2533,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2533,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2533,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2533,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2593,
									"end": 2599,
									"name": "PUSH",
									"source": 6,
									"value": "69780"
								},
								{
									"begin": 2574,
									"end": 2587,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2588,
									"end": 2589,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2590,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2599,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2568,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2569,
									"end": 2570,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2599,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2599,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2599,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2599,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2680,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2673,
									"end": 2679,
									"name": "PUSH",
									"source": 6,
									"value": "54600"
								},
								{
									"begin": 2648,
									"end": 2665,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2666,
									"end": 2667,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2668,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2648,
									"end": 2672,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2648,
									"end": 2672,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18446744073709551710"
								},
								{
									"begin": 2648,
									"end": 2672,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2680,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2680,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2648,
									"end": 2680,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2680,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2648,
									"end": 2680,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2648,
									"end": 2680,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2642,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 2643,
									"end": 2644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2645,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2680,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2680,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2680,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2747,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2740,
									"end": 2746,
									"name": "PUSH",
									"source": 6,
									"value": "69780"
								},
								{
									"begin": 2715,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2735,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2739,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2715,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2715,
									"end": 2739,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2739,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18446744073709551710"
								},
								{
									"begin": 2715,
									"end": 2739,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2739,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2747,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2747,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2747,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2715,
									"end": 2747,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2747,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2715,
									"end": 2747,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2715,
									"end": 2747,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2709,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 2710,
									"end": 2711,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2712,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2747,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2747,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2747,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2691,
									"end": 2747,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2785,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2760,
									"end": 2778,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 2779,
									"end": 2780,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2781,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2785,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2785,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2785,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2785,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 596,
									"end": 692,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 649,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 685,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4275,
									"end": 4282,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4306,
									"end": 4307,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4302,
									"end": 4307,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "1A"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4359,
									"end": 4360,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4355,
									"end": 4356,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 4348,
									"end": 4360,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4348,
									"end": 4360,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11477,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f8aec96aeb2611380f2b796adaa964d304e39a4f119426cbfe2a8c096f680fa64736f6c63430007060033",
									".code": [
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "9A25CEFC"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "9A25CEFC"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "B89E73C1"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "E177BB38"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "E2BBB158"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "F8D936B3"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "630B5BA1"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "93F1A40B"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "4456EDA2"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "4456EDA2"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "4D1E4F42"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "54575AF4"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "570CA735"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "1526FE27"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "17CAF6F1"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "1AB06EE5"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "231F0C6A"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "29605E77"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "441A3E70"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11477,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1331,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1584,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4489,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4489,
											"end": 4506,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4489,
											"end": 4506,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4489,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4517,
											"end": 4538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4549,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4550,
											"end": 4554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4517,
											"end": 4555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4517,
											"end": 4555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4570,
											"end": 4584,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4660,
											"end": 4671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4654,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4639,
											"end": 4654,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4654,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4619,
											"end": 4634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4619,
											"end": 4638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4619,
											"end": 4655,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4655,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4619,
											"end": 4655,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4619,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4619,
											"end": 4659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4616,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4601,
											"end": 4672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4672,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4723,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4731,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4933,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4937,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4939,
											"end": 4946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5007,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5018,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5008,
											"end": 5015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5020,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 4990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5020,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4979,
											"end": 6057,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5071,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5072,
											"end": 5079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5083,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5054,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5084,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5041,
											"end": 5191,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5143,
											"end": 5161,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5162,
											"end": 5169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5170,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5128,
											"end": 5137,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5123,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5116,
											"end": 5127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5116,
											"end": 5142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5109,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5109,
											"end": 5171,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5191,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5041,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5238,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5250,
											"end": 5263,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5275,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5276,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5245,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5238,
											"end": 5249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5277,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5277,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5238,
											"end": 5277,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5277,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5238,
											"end": 5277,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5238,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5238,
											"end": 5281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5310,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5310,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5238,
											"end": 5310,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5310,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5238,
											"end": 5310,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5238,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5333,
											"end": 5340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5345,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5333,
											"end": 5345,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5345,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5477,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5329,
											"end": 5477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5398,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5453,
											"end": 5454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5414,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5398,
											"end": 5418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5398,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5398,
											"end": 5433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5456,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5398,
											"end": 5456,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5456,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5456,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5398,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5377,
											"end": 5397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5457,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5377,
											"end": 5457,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5457,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5377,
											"end": 5457,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5377,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5457,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5370,
											"end": 5457,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5477,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5329,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5520,
											"end": 5521,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5510,
											"end": 5517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5521,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5936,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5495,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5535,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5523,
											"end": 5530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5495,
											"end": 5936,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5601,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5612,
											"end": 5613,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5613,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5584,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5614,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5571,
											"end": 5766,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5671,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5732,
											"end": 5739,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5698,
											"end": 5707,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5684,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5685,
											"end": 5692,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5708,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5708,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5671,
											"end": 5708,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5708,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5671,
											"end": 5708,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5671,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5671,
											"end": 5712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5741,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5671,
											"end": 5741,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5741,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5671,
											"end": 5741,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5671,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5650,
											"end": 5670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5742,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5742,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5742,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5650,
											"end": 5742,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5650,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5643,
											"end": 5742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5766,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5571,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5828,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5906,
											"end": 5913,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5914,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5855,
											"end": 5868,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5876,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5842,
											"end": 5849,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5828,
											"end": 5854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5828,
											"end": 5886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5915,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5915,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5915,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5915,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5915,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5828,
											"end": 5915,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5828,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5807,
											"end": 5827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5807,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5495,
											"end": 5936,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5936,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5495,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5982,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6037,
											"end": 6038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6003,
											"end": 6012,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5995,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5982,
											"end": 6002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6013,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6013,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 6013,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6013,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5982,
											"end": 6013,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5982,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5982,
											"end": 6017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6040,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 6040,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6040,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5982,
											"end": 6040,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5982,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5961,
											"end": 5981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6041,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5961,
											"end": 6041,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6041,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5961,
											"end": 6041,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5961,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 6041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 6041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 6041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 6041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5954,
											"end": 6041,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 6057,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4979,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 6068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6112,
											"end": 6130,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6131,
											"end": 6132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6097,
											"end": 6106,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6092,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6085,
											"end": 6096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6107,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6085,
											"end": 6107,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6107,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6085,
											"end": 6107,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6085,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6085,
											"end": 6111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6134,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6085,
											"end": 6134,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6134,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6085,
											"end": 6134,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6085,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 6142,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 988,
											"end": 1000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9206,
											"end": 9216,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9227,
											"end": 9248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9260,
											"end": 9264,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9227,
											"end": 9265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9227,
											"end": 9265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9308,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9313,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9314,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9322,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9357,
											"end": 9364,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9353,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9364,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9334,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9398,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 9409,
											"end": 9413,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9398,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 9398,
											"end": 9414,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9398,
											"end": 9414,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 9398,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9425,
											"end": 9441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9444,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 9496,
											"end": 9500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9511,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9496,
											"end": 9511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9511,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9486,
											"end": 9490,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9460,
											"end": 9464,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9460,
											"end": 9480,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9460,
											"end": 9480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9460,
											"end": 9480,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9448,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9444,
											"end": 9455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9455,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 9444,
											"end": 9459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9444,
											"end": 9485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9444,
											"end": 9495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9512,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9444,
											"end": 9512,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9512,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9444,
											"end": 9512,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 9444,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9425,
											"end": 9512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9425,
											"end": 9512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9539,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9535,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9539,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9523,
											"end": 9652,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9523,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 9523,
											"end": 9652,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9573,
											"end": 9580,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9582,
											"end": 9590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9556,
											"end": 9591,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9556,
											"end": 9591,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9556,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9622,
											"end": 9629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 9631,
											"end": 9639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9640,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 9523,
											"end": 9652,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 9523,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9676,
											"end": 9677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9673,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9666,
											"end": 9677,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9662,
											"end": 9800,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9662,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9662,
											"end": 9800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 9724,
											"end": 9731,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9732,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9732,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9708,
											"end": 9732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9732,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9708,
											"end": 9732,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 9708,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9694,
											"end": 9705,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9732,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9694,
											"end": 9732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9771,
											"end": 9778,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9787,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9757,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9770,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9747,
											"end": 9770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9747,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9662,
											"end": 9800,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9662,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9870,
											"end": 9874,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9828,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9844,
											"end": 9848,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9864,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9844,
											"end": 9864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9864,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9832,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9828,
											"end": 9839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9839,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 9828,
											"end": 9843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9865,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9828,
											"end": 9865,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9865,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9828,
											"end": 9865,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9828,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9828,
											"end": 9869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9828,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9825,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9810,
											"end": 9825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9875,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 9875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9909,
											"end": 9913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 9907,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "PUSH",
											"source": 6,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 9915,
											"end": 9922,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 9923,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9931,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6331,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6332,
											"end": 6336,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6380,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6385,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6386,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6392,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6393,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6404,
											"end": 6427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6430,
											"end": 6434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6404,
											"end": 6450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6404,
											"end": 6450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6487,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6483,
											"end": 6503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6512,
											"end": 6516,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6548,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6570,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6533,
											"end": 6590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6590,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6533,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6889,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6529,
											"end": 6889,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6653,
											"end": 6657,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6653,
											"end": 6672,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6653,
											"end": 6672,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6653,
											"end": 6672,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6690,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6634,
											"end": 6690,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6634,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6705,
											"end": 6724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6769,
											"end": 6784,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6769,
											"end": 6784,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 6748,
											"end": 6752,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6763,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6748,
											"end": 6763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6763,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6743,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6727,
											"end": 6747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6764,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6764,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6764,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6727,
											"end": 6764,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 6727,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6727,
											"end": 6768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6785,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6785,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6727,
											"end": 6785,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6727,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6705,
											"end": 6785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6705,
											"end": 6785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6838,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6864,
											"end": 6875,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6854,
											"end": 6858,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6838,
											"end": 6853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6838,
											"end": 6863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6876,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6838,
											"end": 6876,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6876,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6838,
											"end": 6876,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6838,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6833,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6877,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6818,
											"end": 6877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6877,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6818,
											"end": 6877,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6818,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6877,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6889,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6529,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6953,
											"end": 6957,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 6968,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6953,
											"end": 6968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 6968,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6943,
											"end": 6947,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6922,
											"end": 6937,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6910,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6917,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6906,
											"end": 6921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6906,
											"end": 6942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6948,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6948,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6948,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6906,
											"end": 6948,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6906,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6906,
											"end": 6952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6969,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6977,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7400,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7401,
											"end": 7405,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7368,
											"end": 7406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7368,
											"end": 7406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7459,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7440,
											"end": 7459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7459,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7421,
											"end": 7436,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7421,
											"end": 7459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7417,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7417,
											"end": 7494,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7476,
											"end": 7483,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7417,
											"end": 7494,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7417,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7546,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7526,
											"end": 7546,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7546,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7555,
											"end": 7559,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7592,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7679,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7572,
											"end": 7679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7646,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7613,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7646,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7661,
											"end": 7668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7661,
											"end": 7668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7661,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7661,
											"end": 7668,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7679,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7572,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7698,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7689,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7689,
											"end": 7827,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7725,
											"end": 7729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7739,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7725,
											"end": 7739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7799,
											"end": 7803,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7799,
											"end": 7814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7814,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7794,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7779,
											"end": 7794,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 7779,
											"end": 7798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7779,
											"end": 7815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7815,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7779,
											"end": 7815,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7779,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7776,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7761,
											"end": 7815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7815,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7689,
											"end": 7827,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7689,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7856,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7841,
											"end": 7856,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 8169,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7837,
											"end": 8169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7904,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7923,
											"end": 7927,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 7942,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7923,
											"end": 7942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 7942,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7959,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7904,
											"end": 7960,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7904,
											"end": 7960,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7904,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 7994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7997,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 8039,
											"end": 8054,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8039,
											"end": 8054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 8018,
											"end": 8022,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8033,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8018,
											"end": 8033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8033,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8013,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7997,
											"end": 8017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7997,
											"end": 8034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8034,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7997,
											"end": 8034,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7997,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 7997,
											"end": 8038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8055,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7997,
											"end": 8055,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8055,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7997,
											"end": 8055,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7997,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 8118,
											"end": 8156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8144,
											"end": 8155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8118,
											"end": 8129,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 8118,
											"end": 8143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8156,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8118,
											"end": 8156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8118,
											"end": 8156,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8118,
											"end": 8156,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8118,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8093,
											"end": 8117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8157,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8157,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8093,
											"end": 8157,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8157,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8093,
											"end": 8157,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 8093,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8074,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8090,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8070,
											"end": 8090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8157,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8157,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 8169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 8169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 8169,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7837,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8216,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8198,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8179,
											"end": 8198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8216,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 8224,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10094,
											"end": 10098,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10142,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10147,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10149,
											"end": 10159,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10160,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10189,
											"end": 10200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10189,
											"end": 10200,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10222,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10226,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10252,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10237,
											"end": 10252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10256,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 10291,
											"end": 10301,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10303,
											"end": 10310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10271,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10267,
											"end": 10277,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10290,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10267,
											"end": 10290,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10267,
											"end": 10290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 10267,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10357,
											"end": 10361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10345,
											"end": 10355,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "PUSH",
											"source": 6,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 10363,
											"end": 10370,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10371,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10379,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11039,
											"end": 11046,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 11020,
											"end": 11033,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 11034,
											"end": 11035,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11017,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11046,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11425,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 10998,
											"end": 11425,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11164,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11150,
											"end": 11164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11164,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11150,
											"end": 11164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "21506F6C79000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11189,
											"end": 11203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11206,
											"end": 11214,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11206,
											"end": 11221,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11206,
											"end": 11221,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11206,
											"end": 11221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11206,
											"end": 11221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11189,
											"end": 11221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11189,
											"end": 11221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11241,
											"end": 11252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11264,
											"end": 11270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11270,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11298,
											"end": 11319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11330,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11331,
											"end": 11334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11298,
											"end": 11335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11298,
											"end": 11335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11362,
											"end": 11368,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11362,
											"end": 11382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "21706F6F6C2E746F6B656E000000000000000000000000000000000000000000"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 11354,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11277,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11277,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11272,
											"end": 11277,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11236,
											"end": 11414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11425,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 10998,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 11455,
											"end": 11457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11459,
											"end": 11465,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11441,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11454,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11435,
											"end": 11454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 11435,
											"end": 11454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 11435,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 11474,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 562,
											"end": 569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7130,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7122,
											"end": 7137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7137,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7153,
											"end": 7164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7182,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7217,
											"end": 7220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7206,
											"end": 7221,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7206,
											"end": 7221,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7206,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7189,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7189,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7184,
											"end": 7189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7148,
											"end": 7233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7240,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3307,
											"end": 3333,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3307,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3307,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3405,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3344,
											"end": 3405,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3376,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3376,
											"end": 3393,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3393,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3376,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3405,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3344,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3450,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3437,
											"end": 3450,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3450,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3524,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3519,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3524,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3563,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3563,
											"end": 3576,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3652,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3639,
											"end": 3652,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3652,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3728,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3617,
											"end": 3728,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3677,
											"end": 3708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3677,
											"end": 3708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3728,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3617,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3500,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3831,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3868,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3811,
											"end": 3868,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3868,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3868,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3868,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3811,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3938,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3807,
											"end": 3938,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3938,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3807,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3415,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3997,
											"end": 4010,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4010,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3977,
											"end": 4051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4050,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4051,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3977,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 4051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4070,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4124,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4142,
											"end": 4157,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4200,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4218,
											"end": 4228,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4307,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 4214,
											"end": 4307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 4283,
											"end": 4294,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4263,
											"end": 4282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4260,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4245,
											"end": 4295,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4295,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4307,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 4214,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 4314,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1735,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8343,
											"end": 8353,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8364,
											"end": 8385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8396,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8397,
											"end": 8401,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8364,
											"end": 8402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8364,
											"end": 8402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8413,
											"end": 8434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8445,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 8450,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8452,
											"end": 8459,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8460,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8413,
											"end": 8460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8413,
											"end": 8460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8471,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8482,
											"end": 8486,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8471,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 8471,
											"end": 8487,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8471,
											"end": 8487,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8471,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8516,
											"end": 8517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8502,
											"end": 8506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8502,
											"end": 8513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8513,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8517,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8788,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8498,
											"end": 8788,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8605,
											"end": 8609,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8605,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8605,
											"end": 8620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8605,
											"end": 8620,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8595,
											"end": 8599,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8553,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8569,
											"end": 8573,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8569,
											"end": 8589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8589,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8557,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 8564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8564,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 8553,
											"end": 8568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8590,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8553,
											"end": 8590,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8590,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8553,
											"end": 8590,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8553,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 8553,
											"end": 8594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8553,
											"end": 8604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8621,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8553,
											"end": 8621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8621,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8553,
											"end": 8621,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8553,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8651,
											"end": 8652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8640,
											"end": 8652,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8777,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8636,
											"end": 8777,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8690,
											"end": 8697,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8750,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8752,
											"end": 8760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8761,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8777,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8636,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8788,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8498,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8812,
											"end": 8813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8809,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8802,
											"end": 8813,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8955,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8798,
											"end": 8955,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8858,
											"end": 8865,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8875,
											"end": 8879,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8889,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8830,
											"end": 8840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8857,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8830,
											"end": 8857,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8830,
											"end": 8857,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8830,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8935,
											"end": 8942,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8930,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8919,
											"end": 8934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8943,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8943,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8919,
											"end": 8943,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8943,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8919,
											"end": 8943,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8919,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 8909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 8916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 8943,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 8943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 8943,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 8943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8955,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8798,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9025,
											"end": 9029,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8983,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 8999,
											"end": 9003,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9019,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8999,
											"end": 9019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9019,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 8987,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 8994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 8994,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9020,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8983,
											"end": 9020,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9020,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8983,
											"end": 9020,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 8983,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 8983,
											"end": 9024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 8969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8965,
											"end": 8980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 9030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 9030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 9030,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 9030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9063,
											"end": 9067,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9054,
											"end": 9061,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "PUSH",
											"source": 6,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 9069,
											"end": 9076,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9077,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 9085,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 649,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH data",
											"source": 7,
											"value": "756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10493,
											"end": 10842,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 10493,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10569,
											"end": 10585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10602,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10588,
											"end": 10602,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10602,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 10611,
											"end": 10615,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10569,
											"end": 10617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10569,
											"end": 10617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10632,
											"end": 10640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10644,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 10628,
											"end": 10835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10675,
											"end": 10683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10683,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 10722,
											"end": 10725,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10727,
											"end": 10735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10721,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10704,
											"end": 10721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10704,
											"end": 10721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 10704,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10795,
											"end": 10798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10777,
											"end": 10808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10661,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10835,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 10628,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10493,
											"end": 10842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10493,
											"end": 10842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10493,
											"end": 10842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10493,
											"end": 10842,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 874,
											"end": 876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2803,
											"end": 3063,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2803,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2896,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2888,
											"end": 2903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2903,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 2939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 2948,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2980,
											"end": 3009,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2989,
											"end": 2992,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2980,
											"end": 2999,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2980,
											"end": 3009,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3009,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3009,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "506F6C79526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2972,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 3063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 3063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 3063,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH data",
											"source": 2,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH data",
											"source": 3,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4974,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7316,
											"end": 7328,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7506,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7673,
											"end": 7690,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7711,
											"end": 7755,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Poly()": "e177bb38",
							"add(uint256,address,bool,uint256)": "96805e54",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"epochEndTimes(uint256)": "b89e73c1",
							"epochPolyPerSecond(uint256)": "f8d936b3",
							"epochTotalRewards(uint256)": "9a25cefc",
							"getGeneratedReward(uint256,uint256)": "231f0c6a",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"isOperator()": "4456eda2",
							"massUpdatePools()": "630b5ba1",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"pendingPoly(uint256,address)": "4d1e4f42",
							"poolInfo(uint256)": "1526fe27",
							"poolStartTime()": "5f96dc11",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256)": "1ab06ee5",
							"totalAllocPoint()": "17caf6f1",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Poly\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolStartTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Poly\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastRewardTime\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochEndTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochPolyPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochTotalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTime\",\"type\":\"uint256\"}],\"name\":\"getGeneratedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingPoly\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPolyPerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStarted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/distribution/TombRewardPool.sol\":\"PolyRewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]},\"contracts/distribution/TombRewardPool.sol\":{\"keccak256\":\"0xab3cbd2a0cca411b7cd62a0485a0dfeb7bf5330fe4a7e310304b6b6bcc4b401b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://add4d77dbea334333d9918e40adf7e5b36e484528febe3a4fab927a086cfd5b4\",\"dweb:/ipfs/QmfGFrHnvQJWSQLYXu5idhnLyv2snZFLAuxPdaPTX3R528\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2257,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "_operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1138,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "Poly",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)187"
							},
							{
								"astId": 1141,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "poolInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_struct(PoolInfo)1136_storage)dyn_storage"
							},
							{
								"astId": 1147,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1125_storage))"
							},
							{
								"astId": 1150,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1152,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "poolStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1158,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "epochTotalRewards",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1162,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "epochEndTimes",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)3_storage"
							},
							{
								"astId": 1166,
								"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
								"label": "epochPolyPerSecond",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)3_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1136_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1136_storage",
								"encoding": "dynamic_array",
								"label": "struct PolyRewardPool.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)3_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[3]",
								"numberOfBytes": "96"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)187": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1125_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PolyRewardPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1125_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1125_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct PolyRewardPool.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1125_storage)"
							},
							"t_struct(PoolInfo)1136_storage": {
								"encoding": "inplace",
								"label": "struct PolyRewardPool.PoolInfo",
								"members": [
									{
										"astId": 1127,
										"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)187"
									},
									{
										"astId": 1129,
										"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1131,
										"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1133,
										"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
										"label": "accPolyPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1135,
										"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
										"label": "isStarted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)1125_storage": {
								"encoding": "inplace",
								"label": "struct PolyRewardPool.UserInfo",
								"members": [
									{
										"astId": 1122,
										"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1124,
										"contract": "contracts/distribution/TombRewardPool.sol:PolyRewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/owner/Operator.sol": {
				"Operator": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOperator()": "4456eda2",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/owner/Operator.sol\":\"Operator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2257,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "@openzeppelin/contracts/access/Ownable.sol:27:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1063,
					"file": "@openzeppelin/contracts/access/Ownable.sol",
					"start": 904
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "contracts/owner/Operator.sol:16:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor() internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 513,
					"file": "contracts/owner/Operator.sol",
					"start": 389
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "contracts/distribution/TombRewardPool.sol:61:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor(address _Poly, uint256 _poolStartTime) public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2795,
					"file": "contracts/distribution/TombRewardPool.sol",
					"start": 2262
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							719
						],
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 720,
							"src": "120:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 719,
										"src": "675:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$719",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "675:7:0"
								}
							],
							"contractDependencies": [
								719
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "151:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								719
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 109,
									"src": "689:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "745:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "776:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:57:0"
									},
									"src": "718:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "928:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "938:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "938:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "958:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "958:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "938:32:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "980:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "989:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "980:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "980:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1042:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1034:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1034:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1034:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1046:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1013:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "1008:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "808:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:0:0"
									},
									"scope": 109,
									"src": "904:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1194:30:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1204:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1069:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:9:0"
									},
									"scope": 109,
									"src": "1139:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1333:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1351:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "1362:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1362:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1351:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1343:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1421:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1230:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:2:0"
									},
									"src": "1312:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1825:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1877:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1869:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1840:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1840:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1835:45:0"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1899:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1899:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1890:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1890:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1435:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 62,
											"modifierName": {
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1815:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1815:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:0:0"
									},
									"scope": 109,
									"src": "1771:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2135:170:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2165:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2165:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2153:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2145:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2262:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2233:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2228:43:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2281:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2281:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2281:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1922:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2125:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2125:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2092:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:0:0"
									},
									"scope": 109,
									"src": "2065:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "646:1661:0"
						}
					],
					"src": "87:2220:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							187
						]
					},
					"id": 188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "67:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 187,
							"linearizedBaseContracts": [
								187
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "161:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "278:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:9:1"
									},
									"scope": 187,
									"src": "232:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "293:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "389:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "429:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:9:1"
									},
									"scope": 187,
									"src": "370:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "444:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "676:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:35:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "729:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:6:1"
									},
									"scope": 187,
									"src": "658:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "741:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:32:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1084:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:9:1"
									},
									"scope": 187,
									"src": "1010:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1099:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1763:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1780:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:33:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1814:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:6:1"
									},
									"scope": 187,
									"src": "1746:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "1826:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2158:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2182:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2209:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:81:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2248:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:6:1"
									},
									"scope": 187,
									"src": "2127:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2260:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 177,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2438:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2460:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2480:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:57:1"
									},
									"src": "2423:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2501:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 186,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2669:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2692:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2717:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:63:1"
									},
									"src": "2654:78:1"
								}
							],
							"scope": 188,
							"src": "138:2596:1"
						}
					],
					"src": "33:2702:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							697
						],
						"IERC20": [
							187
						],
						"SafeERC20": [
							400
						],
						"SafeMath": [
							1106
						]
					},
					"id": 401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 189,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 190,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 188,
							"src": "66:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 191,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 698,
							"src": "90:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../../../utils/math/SafeMath.sol",
							"id": 192,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 1107,
							"src": "127:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "171:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 400,
							"linearizedBaseContracts": [
								400
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 196,
									"libraryName": {
										"id": 194,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1106,
										"src": "659:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1106",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:27:2",
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 199,
									"libraryName": {
										"id": 197,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 697,
										"src": "691:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$697",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "685:26:2",
									"typeName": {
										"id": 198,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "789:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 209,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 212,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "849:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 136,
																		"src": "849:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "849:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 215,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "874:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 216,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "878:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 210,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "826:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "826:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 208,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "799:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "799:86:2"
											}
										]
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "739:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 200,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "739:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "753:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "765:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:41:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:2"
									},
									"scope": 400,
									"src": "717:175:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "988:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "1018:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 236,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "1048:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 168,
																		"src": "1048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1048:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 239,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1077:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1083:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "1087:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1025:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1025:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 232,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "998:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "998:96:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "924:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 222,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "924:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "938:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "952:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "964:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:55:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:2"
									},
									"scope": 400,
									"src": "898:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1437:537:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 257,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "1726:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1735:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1726:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1725:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 265,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1766:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$400",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$400",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 264,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1758:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 263,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1758:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1758:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 267,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 251,
																					"src": "1773:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 261,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "1742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 146,
																				"src": "1742:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1742:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1785:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1742:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1741:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1725:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1717:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1717:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1897:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 280,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1927:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "1927:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1927:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 283,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1951:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1960:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 278,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1904:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1904:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1904:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 276,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1877:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1877:90:2"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "1107:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1382:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 248,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "1382:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1396:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1413:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:46:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 400,
									"src": "1361:613:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "2066:197:2",
										"statements": [
											{
												"assignments": [
													299
												],
												"declarations": [
													{
														"constant": false,
														"id": 299,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "2076:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2076:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "2143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 304,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2123:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2115:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 302,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2115:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2115:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 306,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2130:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "2099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "2099:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2099:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "2099:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2076:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "2179:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 316,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "2209:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "2209:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2209:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 319,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2233:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 320,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "2242:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 314,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2186:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2186:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 312,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2159:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2159:97:2"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2011:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2042:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:46:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:2"
									},
									"scope": 400,
									"src": "1980:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "2355:242:2",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "2365:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": {
													"arguments": [
														{
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2432:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2439:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 340,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2412:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2404:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 338,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2404:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2419:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 336,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2388:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "2388:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1025,
														"src": "2388:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:118:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "2513:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 353,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2543:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "2543:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2543:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 356,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 357,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2576:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 351,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2520:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2520:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 349,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2493:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "2493:97:2"
											}
										]
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2300:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 326,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2314:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2331:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:46:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:2"
									},
									"scope": 400,
									"src": "2269:328:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "3050:681:2",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "3399:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 370,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3399:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"id": 377,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "3453:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 374,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3433:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3425:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 372,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3425:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3425:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 491,
														"src": "3425:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3425:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 381,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "3508:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3508:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3528:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3508:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "3504:221:2",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "3531:194:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 388,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "3648:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3661:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 389,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3661:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 391,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3660:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 386,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3637:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3637:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3669:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 385,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3629:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "3629:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2603:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 364,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "3009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3023:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3023:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3008:33:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:0:2"
									},
									"scope": 400,
									"src": "2980:751:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 401,
							"src": "629:3104:2"
						}
					],
					"src": "33:3700:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							697
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 402,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "67:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "793:311:3",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "990:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "990:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"nodeType": "VariableDeclarationStatement",
												"src": "990:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1021:52:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1035:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1055:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1043:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 406,
														"isOffset": false,
														"isSlot": false,
														"src": "1055:7:3",
														"valueSize": 1
													},
													{
														"declaration": 412,
														"isOffset": false,
														"isSlot": false,
														"src": "1035:4:3",
														"valueSize": 1
													}
												],
												"id": 414,
												"nodeType": "InlineAssembly",
												"src": "1012:61:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 415,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1089:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1096:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1089:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 410,
												"id": 418,
												"nodeType": "Return",
												"src": "1082:15:3"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "157:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "747:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:17:3"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "787:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:6:3"
									},
									"scope": 697,
									"src": "727:377:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2092:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 431,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2118:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		],
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2110:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 429,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2110:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2110:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2110:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2135:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2110:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2143:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2102:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "2102:73:3"
											},
											{
												"assignments": [
													440,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "2187:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 439,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2187:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 441,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2205:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2205:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 443,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2227:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2205:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2256:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2265:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2248:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2248:78:3"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1110:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2040:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2067:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:43:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:0:3"
									},
									"scope": 697,
									"src": "2021:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3164:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3194:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3202:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 464,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															491
														],
														"referencedDeclaration": 491,
														"src": "3181:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 469,
												"nodeType": "Return",
												"src": "3174:67:3"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2339:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3113:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:35:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3150:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3150:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3149:14:3"
									},
									"scope": 697,
									"src": "3075:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3617:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3656:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "3664:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3670:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 487,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3673:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 483,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															561
														],
														"referencedDeclaration": 561,
														"src": "3634:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 489,
												"nodeType": "Return",
												"src": "3627:59:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3254:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3501:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3525:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3525:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3552:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3552:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:93:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3603:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:14:3"
									},
									"scope": 697,
									"src": "3470:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "4198:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4237:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4245:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4251:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4258:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 503,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															561
														],
														"referencedDeclaration": 561,
														"src": "4215:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 502,
												"id": 509,
												"nodeType": "Return",
												"src": "4208:94:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3699:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4095:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4119:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4146:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:80:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4184:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4184:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:14:3"
									},
									"scope": 697,
									"src": "4055:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "4736:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 528,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4762:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		],
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4754:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 526,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4754:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4754:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4754:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "4779:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4754:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "4746:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 538,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "4856:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 537,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "4845:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4845:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4865:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4837:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "4837:60:3"
											},
											{
												"assignments": [
													544,
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "4909:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4909:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "4923:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 545,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4923:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"arguments": [
														{
															"id": 551,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 547,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "4950:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4950:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 549,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "4969:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4950:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4908:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 555,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 556,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5024:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 557,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5036:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 554,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "4998:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 524,
												"id": 559,
												"nodeType": "Return",
												"src": "4991:58:3"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "4315:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4597:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4621:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4621:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4671:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:116:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4722:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4722:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:14:3"
									},
									"scope": 697,
									"src": "4557:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5333:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5369:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5377:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 571,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															613
														],
														"referencedDeclaration": 613,
														"src": "5350:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 570,
												"id": 576,
												"nodeType": "Return",
												"src": "5343:80:3"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "5062:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5261:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5277:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5277:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:35:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5319:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:14:3"
									},
									"scope": 697,
									"src": "5233:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "5772:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 592,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5801:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 591,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "5790:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5782:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5782:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "5782:67:3"
											},
											{
												"assignments": [
													598,
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "5861:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 597,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5861:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "5875:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 599,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5875:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"id": 603,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5920:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 601,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5902:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5902:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5860:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5959:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 608,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5968:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 609,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5980:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 606,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5942:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 589,
												"id": 611,
												"nodeType": "Return",
												"src": "5935:58:3"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5436:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5651:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5675:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5675:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5702:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5702:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5641:93:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5758:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5758:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:14:3"
									},
									"scope": 697,
									"src": "5614:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "6276:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6314:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "6322:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6328:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 623,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															665
														],
														"referencedDeclaration": 665,
														"src": "6293:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 628,
												"nodeType": "Return",
												"src": "6286:84:3"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "6006:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6209:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6225:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6225:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6208:35:3"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6262:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6262:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6261:14:3"
									},
									"scope": 697,
									"src": "6179:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "6718:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 644,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "6747:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 643,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6736:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6728:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "6728:69:3"
											},
											{
												"assignments": [
													650,
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "6809:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 649,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6809:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "6823:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 651,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6823:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"arguments": [
														{
															"id": 655,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "6870:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 653,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "6850:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6850:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6850:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6808:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "6909:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 660,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "6918:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 661,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6930:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 658,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "6892:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 641,
												"id": 663,
												"nodeType": "Return",
												"src": "6885:58:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "6383:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "6602:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "6626:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6626:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "6653:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6653:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:93:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "6704:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6704:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:14:3"
									},
									"scope": 697,
									"src": "6563:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7330:532:3",
										"statements": [
											{
												"condition": {
													"id": 677,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 668,
													"src": "7344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "7401:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 681,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "7485:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7485:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7505:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7485:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 691,
																"nodeType": "Block",
																"src": "7793:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 688,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 672,
																					"src": "7818:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 687,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7811:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7811:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 690,
																		"nodeType": "ExpressionStatement",
																		"src": "7811:20:3"
																	}
																]
															},
															"id": 692,
															"nodeType": "IfStatement",
															"src": "7481:365:3",
															"trueBody": {
																"id": 686,
																"nodeType": "Block",
																"src": "7508:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7628:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7650:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7679:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7673:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7673:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7654:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7722:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7726:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7718:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7718:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7739:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7711:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7711:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7711:44:3"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 670,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7679:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 670,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7726:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 685,
																		"nodeType": "InlineAssembly",
																		"src": "7619:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7340:516:3",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "7353:42:3",
													"statements": [
														{
															"expression": {
																"id": 678,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "7374:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 676,
															"id": 679,
															"nodeType": "Return",
															"src": "7367:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "6956:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7205:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7205:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7227:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7260:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7260:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7195:97:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7316:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7316:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7315:14:3"
									},
									"scope": 697,
									"src": "7170:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "135:7729:3"
						}
					],
					"src": "33:7832:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							719
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "67:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "658:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "675:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "675:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "668:17:4"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:4"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "649:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:9:4"
									},
									"scope": 719,
									"src": "596:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "765:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 714,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "782:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "782:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 713,
												"id": 716,
												"nodeType": "Return",
												"src": "775:15:4"
											}
										]
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:2:4"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "749:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "749:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:16:4"
									},
									"scope": 719,
									"src": "698:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 720,
							"src": "564:235:4"
						}
					],
					"src": "33:767:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 721,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 722,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "865:98:5",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "875:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "887:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 737,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "891:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 740,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "906:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "910:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "902:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 745,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 733,
													"id": 746,
													"nodeType": "Return",
													"src": "913:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 749,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 750,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 733,
												"id": 751,
												"nodeType": "Return",
												"src": "940:16:5"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "805:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "816:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:5"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "850:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "856:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:5"
									},
									"scope": 1106,
									"src": "789:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "1185:75:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 765,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "1199:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 766,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1203:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 772,
												"nodeType": "IfStatement",
												"src": "1195:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 770,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 764,
													"id": 771,
													"nodeType": "Return",
													"src": "1206:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 774,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1247:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 775,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "1251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 777,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 764,
												"id": 778,
												"nodeType": "Return",
												"src": "1233:20:5"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:5"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1170:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1176:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:5"
									},
									"scope": 1106,
									"src": "1109:151:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1484:359:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1716:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"nodeType": "IfStatement",
												"src": "1712:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 797,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 791,
													"id": 798,
													"nodeType": "Return",
													"src": "1724:16:5"
												}
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "1750:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1762:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 803,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1766:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 806,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 807,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "1785:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 809,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "1777:33:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 791,
													"id": 814,
													"nodeType": "Return",
													"src": "1793:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 817,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1834:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 818,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 791,
												"id": 819,
												"nodeType": "Return",
												"src": "1820:16:5"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1424:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1435:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1469:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1475:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:5"
									},
									"scope": 1106,
									"src": "1408:435:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "2068:76:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "2082:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "2078:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 838,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 832,
													"id": 839,
													"nodeType": "Return",
													"src": "2090:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "2131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 843,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2135:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 845,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 832,
												"id": 846,
												"nodeType": "Return",
												"src": "2117:20:5"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:5"
									},
									"scope": 1106,
									"src": "1992:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2379:76:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2393:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "2389:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 865,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 859,
													"id": 866,
													"nodeType": "Return",
													"src": "2401:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "2442:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 870,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "2446:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 872,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 859,
												"id": 873,
												"nodeType": "Return",
												"src": "2428:20:5"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2319:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2364:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2370:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:5"
									},
									"scope": 1106,
									"src": "2303:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "2757:108:5",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "2767:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 887,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "2779:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 888,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "2783:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 892,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2802:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 893,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "2807:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:5"
											},
											{
												"expression": {
													"id": 898,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 886,
													"src": "2857:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 899,
												"nodeType": "Return",
												"src": "2850:8:5"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2703:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2714:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:5"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2748:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:5"
									},
									"scope": 1106,
									"src": "2690:175:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "3203:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 912,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "3221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 913,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "3226:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "3279:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 919,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3283:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 921,
												"nodeType": "Return",
												"src": "3272:12:5"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3160:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3194:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:5"
									},
									"scope": 1106,
									"src": "3136:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "3605:148:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3619:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 938,
												"nodeType": "IfStatement",
												"src": "3615:20:5",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 932,
													"id": 937,
													"nodeType": "Return",
													"src": "3627:8:5"
												}
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "3645:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 941,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3657:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 942,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "3661:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 946,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3680:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 947,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "3684:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 949,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "3689:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3672:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:5"
											},
											{
												"expression": {
													"id": 954,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 940,
													"src": "3745:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 932,
												"id": 955,
												"nodeType": "Return",
												"src": "3738:8:5"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3551:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3562:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3596:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:5"
									},
									"scope": 1106,
									"src": "3538:215:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4284:83:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 968,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "4302:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4294:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 974,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4355:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 975,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "4359:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 966,
												"id": 977,
												"nodeType": "Return",
												"src": "4348:12:5"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4230:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4241:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4275:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:5"
									},
									"scope": 1106,
									"src": "4217:150:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "4887:81:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "4905:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4897:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4956:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 997,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "4960:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 999,
												"nodeType": "Return",
												"src": "4949:12:5"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4833:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4844:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:5"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4878:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:5"
									},
									"scope": 1106,
									"src": "4820:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "5527:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1014,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "5545:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "5550:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1017,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "5553:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1020,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1021,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "5587:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1023,
												"nodeType": "Return",
												"src": "5576:12:5"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5445:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5456:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5467:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:5"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5518:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:5"
									},
									"scope": 1106,
									"src": "5432:163:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "5669:103:5",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "5679:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5679:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "5695:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1038,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5698:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5691:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:21:5"
											},
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "d",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "5710:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"arguments": [
														{
															"id": 1044,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "5726:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1043,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															1025
														],
														"referencedDeclaration": 923,
														"src": "5722:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5710:21:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1050,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "5756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1051,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5759:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1049,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	979,
																	1081
																],
																"referencedDeclaration": 979,
																"src": "5752:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5752:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1053,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5763:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "5748:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5748:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1055,
												"nodeType": "Return",
												"src": "5741:24:5"
											}
										]
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5615:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "m",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5626:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5614:22:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5660:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5659:9:5"
									},
									"scope": 1106,
									"src": "5601:171:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "6524:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1070,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "6542:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6546:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6542:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1073,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6549:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6534:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "6534:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1076,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "6579:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1077,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "6583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6579:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1079,
												"nodeType": "Return",
												"src": "6572:12:5"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "5778:646:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6442:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6453:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6464:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1063,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6464:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6441:50:5"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6515:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:9:5"
									},
									"scope": 1106,
									"src": "6429:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "7332:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1094,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "7350:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7354:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7350:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1097,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "7357:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7342:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "7342:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "7387:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "7391:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7387:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1103,
												"nodeType": "Return",
												"src": "7380:12:5"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "6597:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "7250:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "7261:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "7272:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7272:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7249:50:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "7323:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7322:9:5"
									},
									"scope": 1106,
									"src": "7237:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "630:6771:5"
						}
					],
					"src": "33:7368:5"
				},
				"id": 5
			},
			"contracts/distribution/TombRewardPool.sol": {
				"ast": {
					"absolutePath": "contracts/distribution/TombRewardPool.sol",
					"exportedSymbols": {
						"Address": [
							697
						],
						"Context": [
							719
						],
						"IERC20": [
							187
						],
						"Operator": [
							2358
						],
						"Ownable": [
							109
						],
						"PolyRewardPool": [
							2247
						],
						"SafeERC20": [
							400
						],
						"SafeMath": [
							1106
						]
					},
					"id": 2248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1109,
							"nodeType": "ImportDirective",
							"scope": 2248,
							"sourceUnit": 188,
							"src": "70:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1110,
							"nodeType": "ImportDirective",
							"scope": 2248,
							"sourceUnit": 401,
							"src": "128:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1111,
							"nodeType": "ImportDirective",
							"scope": 2248,
							"sourceUnit": 1107,
							"src": "195:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/owner/Operator.sol",
							"file": "../owner/Operator.sol",
							"id": 1112,
							"nodeType": "ImportDirective",
							"scope": 2248,
							"sourceUnit": 2359,
							"src": "254:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1113,
										"name": "Operator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2358,
										"src": "491:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Operator_$2358",
											"typeString": "contract Operator"
										}
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "491:8:6"
								}
							],
							"contractDependencies": [
								109,
								719,
								2358
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2247,
							"linearizedBaseContracts": [
								2247,
								2358,
								109,
								719
							],
							"name": "PolyRewardPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1117,
									"libraryName": {
										"id": 1115,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1106,
										"src": "513:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1106",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "507:27:6",
									"typeName": {
										"id": 1116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "526:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1120,
									"libraryName": {
										"id": 1118,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "546:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$400",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "540:27:6",
									"typeName": {
										"id": 1119,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 187,
										"src": "560:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$187",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "PolyRewardPool.UserInfo",
									"id": 1125,
									"members": [
										{
											"constant": false,
											"id": 1122,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1125,
											"src": "652:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "652:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1124,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"scope": 1125,
											"src": "722:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "722:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 2247,
									"src": "625:162:6",
									"visibility": "public"
								},
								{
									"canonicalName": "PolyRewardPool.PoolInfo",
									"id": 1136,
									"members": [
										{
											"constant": false,
											"id": 1127,
											"mutability": "mutable",
											"name": "token",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "849:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$187",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1126,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 187,
												"src": "849:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1129,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "905:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "905:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1131,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "1020:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1130,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1020:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1133,
											"mutability": "mutable",
											"name": "accPolyPerShare",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "1100:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1100:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1135,
											"mutability": "mutable",
											"name": "isStarted",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "1189:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1134,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1189:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 2247,
									"src": "822:421:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e177bb38",
									"id": 1138,
									"mutability": "mutable",
									"name": "Poly",
									"nodeType": "VariableDeclaration",
									"scope": 2247,
									"src": "1251:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$187",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1137,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 187,
										"src": "1251:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$187",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1141,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"scope": 2247,
									"src": "1305:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
										"typeString": "struct PolyRewardPool.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1139,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1136,
											"src": "1305:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
												"typeString": "struct PolyRewardPool.PoolInfo"
											}
										},
										"id": 1140,
										"nodeType": "ArrayTypeName",
										"src": "1305:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage_ptr",
											"typeString": "struct PolyRewardPool.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1147,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"scope": 2247,
									"src": "1389:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct PolyRewardPool.UserInfo))"
									},
									"typeName": {
										"id": 1146,
										"keyType": {
											"id": 1142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1397:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1389:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct PolyRewardPool.UserInfo))"
										},
										"valueType": {
											"id": 1145,
											"keyType": {
												"id": 1143,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1416:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1408:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
												"typeString": "mapping(address => struct PolyRewardPool.UserInfo)"
											},
											"valueType": {
												"id": 1144,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1125,
												"src": "1427:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
													"typeString": "struct PolyRewardPool.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1150,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nodeType": "VariableDeclaration",
									"scope": 2247,
									"src": "1550:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1550:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1583:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f96dc11",
									"id": 1152,
									"mutability": "mutable",
									"name": "poolStartTime",
									"nodeType": "VariableDeclaration",
									"scope": 2247,
									"src": "1635:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1635:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9a25cefc",
									"id": 1158,
									"mutability": "mutable",
									"name": "epochTotalRewards",
									"nodeType": "VariableDeclaration",
									"scope": 2247,
									"src": "1672:63:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1153,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1672:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1154,
										"nodeType": "ArrayTypeName",
										"src": "1672:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3830303030",
												"id": 1155,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1710:11:6",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_80000000000000000000000_by_1",
													"typeString": "int_const 80000000000000000000000"
												},
												"value": "80000"
											},
											{
												"hexValue": "3630303030",
												"id": 1156,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1723:11:6",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_60000000000000000000000_by_1",
													"typeString": "int_const 60000000000000000000000"
												},
												"value": "60000"
											}
										],
										"id": 1157,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1709:26:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$2_memory_ptr",
											"typeString": "uint80[2] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b89e73c1",
									"id": 1162,
									"mutability": "mutable",
									"name": "epochEndTimes",
									"nodeType": "VariableDeclaration",
									"scope": 2247,
									"src": "1779:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$3_storage",
										"typeString": "uint256[3]"
									},
									"typeName": {
										"baseType": {
											"id": 1159,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1779:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1161,
										"length": {
											"hexValue": "33",
											"id": 1160,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1787:1:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "1779:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
											"typeString": "uint256[3]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8d936b3",
									"id": 1166,
									"mutability": "mutable",
									"name": "epochPolyPerSecond",
									"nodeType": "VariableDeclaration",
									"scope": 2247,
									"src": "1906:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$3_storage",
										"typeString": "uint256[3]"
									},
									"typeName": {
										"baseType": {
											"id": 1163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1906:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1165,
										"length": {
											"hexValue": "33",
											"id": 1164,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1914:1:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "1906:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
											"typeString": "uint256[3]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1174,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1965:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1987:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2008:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:59:6"
									},
									"src": "1951:73:6"
								},
								{
									"anonymous": false,
									"id": 1182,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2045:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2067:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2088:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:59:6"
									},
									"src": "2030:74:6"
								},
								{
									"anonymous": false,
									"id": 1190,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2134:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2156:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2177:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:59:6"
									},
									"src": "2110:83:6"
								},
								{
									"anonymous": false,
									"id": 1196,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2216:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2238:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:38:6"
									},
									"src": "2199:55:6"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "2320:475:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1204,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2339:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2339:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1206,
																"name": "_poolStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "2357:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2339:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c617465",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2373:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															},
															"value": "late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															}
														],
														"id": 1203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2331:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "2331:49:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "_Poly",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "2395:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2412:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2404:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1212,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2404:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2404:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2395:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "2391:45:6",
												"trueBody": {
													"expression": {
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1217,
															"name": "Poly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2416:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 1219,
																	"name": "_Poly",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "2430:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1218,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2423:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2423:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"src": "2416:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$187",
															"typeString": "contract IERC20"
														}
													},
													"id": 1222,
													"nodeType": "ExpressionStatement",
													"src": "2416:20:6"
												}
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "2449:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "_poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "2465:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2449:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "2449:30:6"
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1228,
															"name": "epochEndTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "2492:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1230,
														"indexExpression": {
															"hexValue": "30",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2506:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2492:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1231,
															"name": "poolStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "2511:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "34",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2527:6:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_345600_by_1",
																"typeString": "int_const 345600"
															},
															"value": "4"
														},
														"src": "2511:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2492:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "2492:41:6"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1236,
															"name": "epochEndTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "2555:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1238,
														"indexExpression": {
															"hexValue": "31",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2569:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2555:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1239,
																"name": "epochEndTimes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2574:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_storage",
																	"typeString": "uint256[3] storage ref"
																}
															},
															"id": 1241,
															"indexExpression": {
																"hexValue": "30",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2588:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2574:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "35",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2593:6:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_432000_by_1",
																"typeString": "int_const 432000"
															},
															"value": "5"
														},
														"src": "2574:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "2555:44:6"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1246,
															"name": "epochPolyPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "2624:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1248,
														"indexExpression": {
															"hexValue": "30",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2643:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2624:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "34",
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2673:6:6",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_345600_by_1",
																	"typeString": "int_const 345600"
																},
																"value": "4"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_345600_by_1",
																	"typeString": "int_const 345600"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1249,
																	"name": "epochTotalRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "2648:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1251,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2666:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2648:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "2648:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2648:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2624:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "2624:56:6"
											},
											{
												"expression": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1257,
															"name": "epochPolyPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "2691:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1259,
														"indexExpression": {
															"hexValue": "31",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2710:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2691:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "35",
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2740:6:6",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_432000_by_1",
																	"typeString": "int_const 432000"
																},
																"value": "5"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_432000_by_1",
																	"typeString": "int_const 432000"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1260,
																	"name": "epochTotalRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "2715:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1262,
																"indexExpression": {
																	"hexValue": "31",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2733:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2715:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "2715:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2715:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2691:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "2691:56:6"
											},
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1268,
															"name": "epochPolyPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "2760:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1270,
														"indexExpression": {
															"hexValue": "32",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2760:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2784:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2760:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "2760:25:6"
											}
										]
									},
									"id": 1275,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_Poly",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2274:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_poolStartTime",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2289:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:39:6"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:0:6"
									},
									"scope": 2247,
									"src": "2262:533:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "2860:203:6",
										"statements": [
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "2871:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2871:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"expression": {
														"id": 1282,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "2888:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2888:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2871:32:6"
											},
											{
												"body": {
													"id": 1305,
													"nodeType": "Block",
													"src": "2957:99:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1296,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "2980:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																						"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1298,
																				"indexExpression": {
																					"id": 1297,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "2989:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2980:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
																					"typeString": "struct PolyRewardPool.PoolInfo storage ref"
																				}
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1127,
																			"src": "2980:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1300,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "3003:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "2980:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "506f6c79526577617264506f6f6c3a206578697374696e6720706f6f6c3f",
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3011:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4fb3aea0dabe058fad44c62035a6113ac3f06063d6ad051aa2690d0cdad8aa63",
																			"typeString": "literal_string \"PolyRewardPool: existing pool?\""
																		},
																		"value": "PolyRewardPool: existing pool?"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4fb3aea0dabe058fad44c62035a6113ac3f06063d6ad051aa2690d0cdad8aa63",
																			"typeString": "literal_string \"PolyRewardPool: existing pool?\""
																		}
																	],
																	"id": 1295,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2972:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2972:72:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1304,
															"nodeType": "ExpressionStatement",
															"src": "2972:72:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1289,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "2936:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1290,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "2942:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2936:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1306,
												"initializationExpression": {
													"assignments": [
														1286
													],
													"declarations": [
														{
															"constant": false,
															"id": 1286,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"scope": 1306,
															"src": "2919:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2919:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1288,
													"initialValue": {
														"hexValue": "30",
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2933:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2919:15:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2950:5:6",
														"subExpression": {
															"id": 1292,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "2952:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1294,
													"nodeType": "ExpressionStatement",
													"src": "2950:5:6"
												},
												"nodeType": "ForStatement",
												"src": "2914:142:6"
											}
										]
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPoolDuplicate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2831:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1276,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2831:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:15:6"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:6"
									},
									"scope": 2247,
									"src": "2803:260:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "3296:1018:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "3326:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														],
														"id": 1321,
														"name": "checkPoolDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "3307:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$187_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3307:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "3307:26:6"
											},
											{
												"condition": {
													"id": 1325,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1314,
													"src": "3348:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "3344:61:6",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "3361:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1326,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "3376:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3376:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1328,
															"nodeType": "ExpressionStatement",
															"src": "3376:17:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1331,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3419:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3419:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1333,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "3437:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3419:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1370,
													"nodeType": "Block",
													"src": "3760:189:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1355,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "3811:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3830:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3811:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1358,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "3835:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1359,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3853:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3853:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3835:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3811:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1369,
															"nodeType": "IfStatement",
															"src": "3807:131:6",
															"trueBody": {
																"id": 1368,
																"nodeType": "Block",
																"src": "3870:68:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1363,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1316,
																				"src": "3889:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1364,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3907:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3907:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3889:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1367,
																		"nodeType": "ExpressionStatement",
																		"src": "3889:33:6"
																	}
																]
															}
														}
													]
												},
												"id": 1371,
												"nodeType": "IfStatement",
												"src": "3415:534:6",
												"trueBody": {
													"id": 1354,
													"nodeType": "Block",
													"src": "3452:302:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1335,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "3504:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3523:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3504:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1352,
																"nodeType": "Block",
																"src": "3598:145:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1343,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1316,
																				"src": "3621:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1344,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1152,
																				"src": "3639:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3621:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1351,
																		"nodeType": "IfStatement",
																		"src": "3617:111:6",
																		"trueBody": {
																			"id": 1350,
																			"nodeType": "Block",
																			"src": "3654:74:6",
																			"statements": [
																				{
																					"expression": {
																						"id": 1348,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1346,
																							"name": "_lastRewardTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1316,
																							"src": "3677:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1347,
																							"name": "poolStartTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1152,
																							"src": "3695:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3677:31:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1349,
																					"nodeType": "ExpressionStatement",
																					"src": "3677:31:6"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1353,
															"nodeType": "IfStatement",
															"src": "3500:243:6",
															"trueBody": {
																"id": 1342,
																"nodeType": "Block",
																"src": "3526:66:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1338,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1316,
																				"src": "3545:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1339,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1152,
																				"src": "3563:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3545:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1341,
																		"nodeType": "ExpressionStatement",
																		"src": "3545:31:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "_isStarted",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "3959:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1372,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3959:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1374,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "3978:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1375,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "3997:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3978:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1377,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3977:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1378,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "4016:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1379,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4035:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4035:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4016:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1382,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4015:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3977:74:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3959:92:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1389,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "4093:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1390,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "4113:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1391,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "4142:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4176:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 1393,
																	"name": "_isStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "4190:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1388,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "4076:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1136_storage_ptr_$",
																	"typeString": "type(struct PolyRewardPool.PoolInfo storage pointer)"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"token",
																"allocPoint",
																"lastRewardTime",
																"accPolyPerShare",
																"isStarted"
															],
															"nodeType": "FunctionCall",
															"src": "4076:126:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_memory_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1136_memory_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1385,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "4062:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4062:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$1136_storage_$returns$__$",
															"typeString": "function (struct PolyRewardPool.PoolInfo storage ref)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:141:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "4062:141:6"
											},
											{
												"condition": {
													"id": 1397,
													"name": "_isStarted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1373,
													"src": "4218:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1406,
												"nodeType": "IfStatement",
												"src": "4214:93:6",
												"trueBody": {
													"id": 1405,
													"nodeType": "Block",
													"src": "4230:77:6",
													"statements": [
														{
															"expression": {
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1398,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "4245:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1401,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "4283:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1399,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "4263:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "4263:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4263:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4245:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1404,
															"nodeType": "ExpressionStatement",
															"src": "4245:50:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "96805e54",
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"modifierName": {
												"id": 1318,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2300,
												"src": "3283:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3283:12:6"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3164:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3194:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1311,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "3194:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3218:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3218:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_lastRewardTime",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3245:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3245:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:122:6"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3296:0:6"
									},
									"scope": 2247,
									"src": "3141:1173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "4478:253:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1417,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "4489:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4489:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "4489:17:6"
											},
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "4517:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1420,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "4517:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"baseExpression": {
														"id": 1422,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "4541:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1424,
													"indexExpression": {
														"id": 1423,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "4550:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4541:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4517:38:6"
											},
											{
												"condition": {
													"expression": {
														"id": 1426,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "4570:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isStarted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1135,
													"src": "4570:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1440,
												"nodeType": "IfStatement",
												"src": "4566:118:6",
												"trueBody": {
													"id": 1439,
													"nodeType": "Block",
													"src": "4586:98:6",
													"statements": [
														{
															"expression": {
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1428,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "4601:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1435,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "4660:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1431,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1421,
																						"src": "4639:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																							"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																						}
																					},
																					"id": 1432,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1129,
																					"src": "4639:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1429,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1150,
																					"src": "4619:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "4619:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4619:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "4619:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4619:53:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4601:71:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1438,
															"nodeType": "ExpressionStatement",
															"src": "4601:71:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1441,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "4694:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1129,
														"src": "4694:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1444,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "4712:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4694:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "4694:29:6"
											}
										]
									},
									"functionSelector": "1ab06ee5",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1415,
											"modifierName": {
												"id": 1414,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2300,
												"src": "4465:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4465:12:6"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "4423:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "4437:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4422:35:6"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4478:0:6"
									},
									"scope": 2247,
									"src": "4410:321:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "4904:1238:6",
										"statements": [
											{
												"body": {
													"id": 1605,
													"nodeType": "Block",
													"src": "4964:1104:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1467,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "4983:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1468,
																		"name": "epochEndTimes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "4994:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$3_storage",
																			"typeString": "uint256[3] storage ref"
																		}
																	},
																	"id": 1472,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1469,
																			"name": "epochId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "5008:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5018:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5008:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4994:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4983:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1604,
															"nodeType": "IfStatement",
															"src": "4979:1078:6",
															"trueBody": {
																"id": 1603,
																"nodeType": "Block",
																"src": "5022:1035:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1474,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1450,
																				"src": "5045:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 1475,
																					"name": "epochEndTimes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1162,
																					"src": "5058:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$3_storage",
																						"typeString": "uint256[3] storage ref"
																					}
																				},
																				"id": 1479,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1478,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1476,
																						"name": "epochId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1458,
																						"src": "5072:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1477,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5082:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5072:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5058:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5045:39:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1492,
																		"nodeType": "IfStatement",
																		"src": "5041:150:6",
																		"trueBody": {
																			"id": 1491,
																			"nodeType": "Block",
																			"src": "5086:105:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"baseExpression": {
																									"id": 1486,
																									"name": "epochPolyPerSecond",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1166,
																									"src": "5143:18:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$3_storage",
																										"typeString": "uint256[3] storage ref"
																									}
																								},
																								"id": 1488,
																								"indexExpression": {
																									"id": 1487,
																									"name": "epochId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1458,
																									"src": "5162:7:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5143:27:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 1483,
																										"name": "_fromTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1450,
																										"src": "5128:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 1481,
																										"name": "_toTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1452,
																										"src": "5116:7:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1482,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 923,
																									"src": "5116:11:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1484,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5116:22:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1485,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 957,
																							"src": "5116:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5116:55:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1456,
																					"id": 1490,
																					"nodeType": "Return",
																					"src": "5109:62:6"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1494
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1494,
																				"mutability": "mutable",
																				"name": "_generatedReward",
																				"nodeType": "VariableDeclaration",
																				"scope": 1603,
																				"src": "5211:24:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1493,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5211:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1508,
																		"initialValue": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1504,
																						"name": "epochPolyPerSecond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1166,
																						"src": "5282:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$3_storage",
																							"typeString": "uint256[3] storage ref"
																						}
																					},
																					"id": 1506,
																					"indexExpression": {
																						"id": 1505,
																						"name": "epochId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1458,
																						"src": "5301:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5282:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1497,
																								"name": "epochEndTimes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1162,
																								"src": "5250:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$3_storage",
																									"typeString": "uint256[3] storage ref"
																								}
																							},
																							"id": 1501,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1498,
																									"name": "epochId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1458,
																									"src": "5264:7:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1499,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5274:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5264:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5250:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1495,
																							"name": "_toTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1452,
																							"src": "5238:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 923,
																						"src": "5238:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1502,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5238:39:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 957,
																				"src": "5238:43:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5238:72:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5211:99:6"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1509,
																				"name": "epochId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1458,
																				"src": "5333:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5344:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5333:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1528,
																		"nodeType": "IfStatement",
																		"src": "5329:148:6",
																		"trueBody": {
																			"id": 1527,
																			"nodeType": "Block",
																			"src": "5347:130:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"baseExpression": {
																											"id": 1521,
																											"name": "epochPolyPerSecond",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1166,
																											"src": "5434:18:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_uint256_$3_storage",
																												"typeString": "uint256[3] storage ref"
																											}
																										},
																										"id": 1523,
																										"indexExpression": {
																											"hexValue": "30",
																											"id": 1522,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "5453:1:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "5434:21:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"arguments": [
																											{
																												"id": 1518,
																												"name": "_fromTime",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1450,
																												"src": "5419:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"baseExpression": {
																													"id": 1514,
																													"name": "epochEndTimes",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1162,
																													"src": "5398:13:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint256_$3_storage",
																														"typeString": "uint256[3] storage ref"
																													}
																												},
																												"id": 1516,
																												"indexExpression": {
																													"hexValue": "30",
																													"id": 1515,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "5412:1:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_0_by_1",
																														"typeString": "int_const 0"
																													},
																													"value": "0"
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "5398:16:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1517,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 923,
																											"src": "5398:20:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1519,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5398:31:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1520,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 957,
																									"src": "5398:35:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1524,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5398:58:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1512,
																								"name": "_generatedReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1494,
																								"src": "5377:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1513,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 901,
																							"src": "5377:20:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1525,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5377:80:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1456,
																					"id": 1526,
																					"nodeType": "Return",
																					"src": "5370:87:6"
																				}
																			]
																		}
																	},
																	{
																		"body": {
																			"id": 1586,
																			"nodeType": "Block",
																			"src": "5548:388:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1541,
																							"name": "_fromTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1450,
																							"src": "5575:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 1542,
																								"name": "epochEndTimes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1162,
																								"src": "5588:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$3_storage",
																									"typeString": "uint256[3] storage ref"
																								}
																							},
																							"id": 1546,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1545,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1543,
																									"name": "epochId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1458,
																									"src": "5602:7:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1544,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5612:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5602:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5588:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5575:39:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1564,
																					"nodeType": "IfStatement",
																					"src": "5571:195:6",
																					"trueBody": {
																						"id": 1563,
																						"nodeType": "Block",
																						"src": "5616:150:6",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"baseExpression": {
																														"id": 1557,
																														"name": "epochPolyPerSecond",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1166,
																														"src": "5713:18:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_uint256_$3_storage",
																															"typeString": "uint256[3] storage ref"
																														}
																													},
																													"id": 1559,
																													"indexExpression": {
																														"id": 1558,
																														"name": "epochId",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1458,
																														"src": "5732:7:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "5713:27:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"arguments": [
																														{
																															"id": 1554,
																															"name": "_fromTime",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1450,
																															"src": "5698:9:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"expression": {
																														"argumentTypes": [
																															{
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														],
																														"expression": {
																															"baseExpression": {
																																"id": 1550,
																																"name": "epochEndTimes",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1162,
																																"src": "5671:13:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_array$_t_uint256_$3_storage",
																																	"typeString": "uint256[3] storage ref"
																																}
																															},
																															"id": 1552,
																															"indexExpression": {
																																"id": 1551,
																																"name": "epochId",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1458,
																																"src": "5685:7:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint8",
																																	"typeString": "uint8"
																																}
																															},
																															"isConstant": false,
																															"isLValue": true,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "IndexAccess",
																															"src": "5671:22:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"id": 1553,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberName": "sub",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 923,
																														"src": "5671:26:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																															"typeString": "function (uint256,uint256) pure returns (uint256)"
																														}
																													},
																													"id": 1555,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"kind": "functionCall",
																													"lValueRequested": false,
																													"names": [],
																													"nodeType": "FunctionCall",
																													"src": "5671:37:6",
																													"tryCall": false,
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 1556,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "mul",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 957,
																												"src": "5671:41:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 1560,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "5671:70:6",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 1548,
																											"name": "_generatedReward",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1494,
																											"src": "5650:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1549,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "add",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 901,
																										"src": "5650:20:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1561,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "5650:92:6",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"functionReturnParameters": 1456,
																								"id": 1562,
																								"nodeType": "Return",
																								"src": "5643:99:6"
																							}
																						]
																					}
																				},
																				{
																					"expression": {
																						"id": 1584,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1565,
																							"name": "_generatedReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1494,
																							"src": "5788:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"baseExpression": {
																												"id": 1579,
																												"name": "epochPolyPerSecond",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1166,
																												"src": "5887:18:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint256_$3_storage",
																													"typeString": "uint256[3] storage ref"
																												}
																											},
																											"id": 1581,
																											"indexExpression": {
																												"id": 1580,
																												"name": "epochId",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1458,
																												"src": "5906:7:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "5887:27:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"baseExpression": {
																														"id": 1572,
																														"name": "epochEndTimes",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1162,
																														"src": "5855:13:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_uint256_$3_storage",
																															"typeString": "uint256[3] storage ref"
																														}
																													},
																													"id": 1576,
																													"indexExpression": {
																														"commonType": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														},
																														"id": 1575,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"id": 1573,
																															"name": "epochId",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1458,
																															"src": "5869:7:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint8",
																																"typeString": "uint8"
																															}
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "-",
																														"rightExpression": {
																															"hexValue": "31",
																															"id": 1574,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "5879:1:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_1_by_1",
																																"typeString": "int_const 1"
																															},
																															"value": "1"
																														},
																														"src": "5869:11:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "5855:26:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"baseExpression": {
																														"id": 1568,
																														"name": "epochEndTimes",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1162,
																														"src": "5828:13:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_uint256_$3_storage",
																															"typeString": "uint256[3] storage ref"
																														}
																													},
																													"id": 1570,
																													"indexExpression": {
																														"id": 1569,
																														"name": "epochId",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1458,
																														"src": "5842:7:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "5828:22:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 1571,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "sub",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 923,
																												"src": "5828:26:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 1577,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "5828:54:6",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1578,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 957,
																										"src": "5828:58:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1582,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "5828:87:6",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 1566,
																									"name": "_generatedReward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1494,
																									"src": "5807:16:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1567,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "add",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 901,
																								"src": "5807:20:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1583,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5807:109:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5788:128:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1585,
																					"nodeType": "ExpressionStatement",
																					"src": "5788:128:6"
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1535,
																				"name": "epochId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1458,
																				"src": "5523:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5534:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5523:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1587,
																		"initializationExpression": {
																			"expression": {
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1529,
																					"name": "epochId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "5500:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1532,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1530,
																						"name": "epochId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1458,
																						"src": "5510:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5520:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5510:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "5500:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 1534,
																			"nodeType": "ExpressionStatement",
																			"src": "5500:21:6"
																		},
																		"loopExpression": {
																			"expression": {
																				"id": 1539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "5537:9:6",
																				"subExpression": {
																					"id": 1538,
																					"name": "epochId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "5539:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 1540,
																			"nodeType": "ExpressionStatement",
																			"src": "5537:9:6"
																		},
																		"nodeType": "ForStatement",
																		"src": "5495:441:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1597,
																								"name": "epochPolyPerSecond",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1166,
																								"src": "6018:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$3_storage",
																									"typeString": "uint256[3] storage ref"
																								}
																							},
																							"id": 1599,
																							"indexExpression": {
																								"hexValue": "30",
																								"id": 1598,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6037:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6018:21:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1594,
																									"name": "_fromTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1450,
																									"src": "6003:9:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"baseExpression": {
																										"id": 1590,
																										"name": "epochEndTimes",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1162,
																										"src": "5982:13:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$3_storage",
																											"typeString": "uint256[3] storage ref"
																										}
																									},
																									"id": 1592,
																									"indexExpression": {
																										"hexValue": "30",
																										"id": 1591,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "5996:1:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "5982:16:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1593,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 923,
																								"src": "5982:20:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1595,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5982:31:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1596,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "5982:35:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1600,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5982:58:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1588,
																					"name": "_generatedReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1494,
																					"src": "5961:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 901,
																				"src": "5961:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5961:80:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1456,
																		"id": 1602,
																		"nodeType": "Return",
																		"src": "5954:87:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1461,
														"name": "epochId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "4939:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31",
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4950:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4939:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1606,
												"initializationExpression": {
													"assignments": [
														1458
													],
													"declarations": [
														{
															"constant": false,
															"id": 1458,
															"mutability": "mutable",
															"name": "epochId",
															"nodeType": "VariableDeclaration",
															"scope": 1606,
															"src": "4920:13:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 1457,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4920:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1460,
													"initialValue": {
														"hexValue": "32",
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4936:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4920:17:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "4953:9:6",
														"subExpression": {
															"id": 1464,
															"name": "epochId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "4955:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1466,
													"nodeType": "ExpressionStatement",
													"src": "4953:9:6"
												},
												"nodeType": "ForStatement",
												"src": "4915:1153:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1612,
																"name": "epochPolyPerSecond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "6112:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_storage",
																	"typeString": "uint256[3] storage ref"
																}
															},
															"id": 1614,
															"indexExpression": {
																"hexValue": "30",
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6131:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6112:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1609,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "6097:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1607,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "6085:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 923,
																"src": "6085:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6085:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 957,
														"src": "6085:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6085:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1616,
												"nodeType": "Return",
												"src": "6078:56:6"
											}
										]
									},
									"functionSelector": "231f0c6a",
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneratedReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "_fromTime",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "4838:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "_toTime",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "4857:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4857:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4837:36:6"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "4895:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4894:9:6"
									},
									"scope": 2247,
									"src": "4810:1332:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "6288:689:6",
										"statements": [
											{
												"assignments": [
													1628
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "6299:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1627,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "6299:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"baseExpression": {
														"id": 1629,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "6323:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1631,
													"indexExpression": {
														"id": 1630,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "6332:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6323:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6299:38:6"
											},
											{
												"assignments": [
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "6348:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1633,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "6348:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1635,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "6372:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1637,
														"indexExpression": {
															"id": 1636,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "6381:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6372:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1639,
													"indexExpression": {
														"id": 1638,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "6387:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6372:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:45:6"
											},
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "accPolyPerShare",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "6404:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6404:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"expression": {
														"id": 1643,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "6430:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPolyPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1133,
													"src": "6430:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6404:46:6"
											},
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "6461:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6461:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1656,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1653,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6512:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRewardPool_$2247",
																		"typeString": "contract PolyRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRewardPool_$2247",
																		"typeString": "contract PolyRewardPool"
																	}
																],
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1651,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6504:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1648,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "6483:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "6483:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "6483:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6483:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6461:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1657,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6533:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6533:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1659,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "6551:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1131,
															"src": "6551:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6533:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1662,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "6574:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6589:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6574:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6533:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "IfStatement",
												"src": "6529:360:6",
												"trueBody": {
													"id": 1699,
													"nodeType": "Block",
													"src": "6592:297:6",
													"statements": [
														{
															"assignments": [
																1667
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1667,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1699,
																	"src": "6607:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1666,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6607:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1674,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1669,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "6653:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1131,
																		"src": "6653:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1671,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6674:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "6674:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1668,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "6634:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6634:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6607:83:6"
														},
														{
															"assignments": [
																1676
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1676,
																	"mutability": "mutable",
																	"name": "_PolyReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1699,
																	"src": "6705:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1675,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6705:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1685,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1683,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "6769:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1679,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1628,
																					"src": "6748:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1680,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1129,
																				"src": "6748:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1677,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1667,
																				"src": "6727:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "6727:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6727:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 979,
																	"src": "6727:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6727:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6705:80:6"
														},
														{
															"expression": {
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1686,
																	"name": "accPolyPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "6800:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1694,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1647,
																					"src": "6864:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 1691,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6854:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 1689,
																							"name": "_PolyReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1676,
																							"src": "6838:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1690,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "6838:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1692,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6838:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 979,
																				"src": "6838:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6838:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1687,
																			"name": "accPolyPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "6818:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "6818:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6818:59:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6800:77:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1698,
															"nodeType": "ExpressionStatement",
															"src": "6800:77:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1710,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "6953:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																	"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "6953:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6943:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1704,
																			"name": "accPolyPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "6922:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1701,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1634,
																				"src": "6906:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "6906:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "6906:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6906:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 979,
																"src": "6906:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6906:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "6906:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6906:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1626,
												"id": 1713,
												"nodeType": "Return",
												"src": "6899:70:6"
											}
										]
									},
									"functionSelector": "4d1e4f42",
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingPoly",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "6227:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6227:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "6241:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6241:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6226:29:6"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "6279:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6279:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6278:9:6"
									},
									"scope": 2247,
									"src": "6206:771:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "7094:146:6",
										"statements": [
											{
												"assignments": [
													1719
												],
												"declarations": [
													{
														"constant": false,
														"id": 1719,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "7105:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1722,
												"initialValue": {
													"expression": {
														"id": 1720,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7122:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7122:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7105:32:6"
											},
											{
												"body": {
													"id": 1737,
													"nodeType": "Block",
													"src": "7191:42:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1734,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "7217:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1733,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "7206:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7206:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1736,
															"nodeType": "ExpressionStatement",
															"src": "7206:15:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1727,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "7170:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1728,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "7176:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7170:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1738,
												"initializationExpression": {
													"assignments": [
														1724
													],
													"declarations": [
														{
															"constant": false,
															"id": 1724,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"scope": 1738,
															"src": "7153:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1723,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7153:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1726,
													"initialValue": {
														"hexValue": "30",
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7167:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7153:15:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7184:5:6",
														"subExpression": {
															"id": 1730,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "7186:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1732,
													"nodeType": "ExpressionStatement",
													"src": "7184:5:6"
												},
												"nodeType": "ForStatement",
												"src": "7148:85:6"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7084:2:6"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7094:0:6"
									},
									"scope": 2247,
									"src": "7060:180:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "7357:867:6",
										"statements": [
											{
												"assignments": [
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1850,
														"src": "7368:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1745,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "7368:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"baseExpression": {
														"id": 1747,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7392:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1749,
													"indexExpression": {
														"id": 1748,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "7401:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7392:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7368:38:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1751,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7421:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7421:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1753,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "7440:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "7440:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7421:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1758,
												"nodeType": "IfStatement",
												"src": "7417:77:6",
												"trueBody": {
													"id": 1757,
													"nodeType": "Block",
													"src": "7461:33:6",
													"statements": [
														{
															"functionReturnParameters": 1744,
															"id": 1756,
															"nodeType": "Return",
															"src": "7476:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1760
												],
												"declarations": [
													{
														"constant": false,
														"id": 1760,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1850,
														"src": "7504:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7504:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1766,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7555:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRewardPool_$2247",
																		"typeString": "contract PolyRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRewardPool_$2247",
																		"typeString": "contract PolyRewardPool"
																	}
																],
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7547:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1764,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7547:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7547:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1761,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "7526:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "7526:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "7526:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7526:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7504:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1770,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "7576:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7591:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7576:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1782,
												"nodeType": "IfStatement",
												"src": "7572:107:6",
												"trueBody": {
													"id": 1781,
													"nodeType": "Block",
													"src": "7594:85:6",
													"statements": [
														{
															"expression": {
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1773,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "7609:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1131,
																	"src": "7609:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1776,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7631:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7631:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1779,
															"nodeType": "ExpressionStatement",
															"src": "7609:37:6"
														},
														{
															"functionReturnParameters": 1744,
															"id": 1780,
															"nodeType": "Return",
															"src": "7661:7:6"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7693:15:6",
													"subExpression": {
														"expression": {
															"id": 1783,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "7694:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "7694:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "7689:138:6",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "7710:117:6",
													"statements": [
														{
															"expression": {
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1786,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "7725:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1135,
																	"src": "7725:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7742:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7725:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1791,
															"nodeType": "ExpressionStatement",
															"src": "7725:21:6"
														},
														{
															"expression": {
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1792,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "7761:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1795,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1746,
																				"src": "7799:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1796,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1129,
																			"src": "7799:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1793,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "7779:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "7779:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7779:36:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7761:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1799,
															"nodeType": "ExpressionStatement",
															"src": "7761:54:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1802,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "7841:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7859:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7841:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "7837:332:6",
												"trueBody": {
													"id": 1841,
													"nodeType": "Block",
													"src": "7862:307:6",
													"statements": [
														{
															"assignments": [
																1806
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1806,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1841,
																	"src": "7877:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1805,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7877:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1813,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1808,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "7923:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1131,
																		"src": "7923:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1810,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7944:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "7944:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1807,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "7904:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7904:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7877:83:6"
														},
														{
															"assignments": [
																1815
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1815,
																	"mutability": "mutable",
																	"name": "_PolyReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1841,
																	"src": "7975:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1814,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7975:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1824,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1822,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "8039:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1818,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1746,
																					"src": "8018:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1819,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1129,
																				"src": "8018:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1816,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1806,
																				"src": "7997:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "7997:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7997:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 979,
																	"src": "7997:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7997:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7975:80:6"
														},
														{
															"expression": {
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1825,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "8070:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accPolyPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1133,
																	"src": "8070:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1836,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1760,
																					"src": "8144:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 1833,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8134:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 1831,
																							"name": "_PolyReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1815,
																							"src": "8118:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1832,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "8118:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1834,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8118:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 979,
																				"src": "8118:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8118:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1828,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1746,
																				"src": "8093:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPolyPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1133,
																			"src": "8093:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "8093:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8093:64:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8070:87:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1840,
															"nodeType": "ExpressionStatement",
															"src": "8070:87:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1843,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "8179:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "8179:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1846,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8201:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8201:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8179:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "8179:37:6"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7336:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7336:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7335:14:6"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7357:0:6"
									},
									"scope": 2247,
									"src": "7316:908:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "8314:771:6",
										"statements": [
											{
												"assignments": [
													1859
												],
												"declarations": [
													{
														"constant": false,
														"id": 1859,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"scope": 1966,
														"src": "8325:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1858,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8325:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1862,
												"initialValue": {
													"expression": {
														"id": 1860,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8343:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8343:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8325:28:6"
											},
											{
												"assignments": [
													1864
												],
												"declarations": [
													{
														"constant": false,
														"id": 1864,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1966,
														"src": "8364:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1863,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "8364:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"baseExpression": {
														"id": 1865,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "8388:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1867,
													"indexExpression": {
														"id": 1866,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "8397:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8388:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8364:38:6"
											},
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1966,
														"src": "8413:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1869,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "8413:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1876,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1871,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "8437:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1873,
														"indexExpression": {
															"id": 1872,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "8446:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8437:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1875,
													"indexExpression": {
														"id": 1874,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "8452:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8437:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8413:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1878,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "8482:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1877,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "8471:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8471:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "8471:16:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1881,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "8502:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1122,
														"src": "8502:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8516:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8502:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1917,
												"nodeType": "IfStatement",
												"src": "8498:290:6",
												"trueBody": {
													"id": 1916,
													"nodeType": "Block",
													"src": "8519:269:6",
													"statements": [
														{
															"assignments": [
																1886
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1886,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"scope": 1916,
																	"src": "8534:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1885,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8534:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1900,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1897,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "8605:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1124,
																		"src": "8605:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 1894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8595:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1890,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1864,
																							"src": "8569:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																								"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 1891,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPolyPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1133,
																						"src": "8569:20:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1887,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1870,
																							"src": "8553:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																								"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																							}
																						},
																						"id": 1888,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1122,
																						"src": "8553:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1889,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 957,
																					"src": "8553:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8553:37:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 979,
																			"src": "8553:41:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8553:47:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 923,
																	"src": "8553:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8553:68:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8534:87:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1901,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "8640:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8651:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8640:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1915,
															"nodeType": "IfStatement",
															"src": "8636:141:6",
															"trueBody": {
																"id": 1914,
																"nodeType": "Block",
																"src": "8654:123:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1905,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1859,
																					"src": "8690:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1906,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1886,
																					"src": "8699:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1904,
																				"name": "safePolyTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2179,
																				"src": "8673:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8673:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1908,
																		"nodeType": "ExpressionStatement",
																		"src": "8673:35:6"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1910,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1859,
																					"src": "8743:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1911,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1886,
																					"src": "8752:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1909,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1196,
																				"src": "8732:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8732:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1913,
																		"nodeType": "EmitStatement",
																		"src": "8727:34:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1918,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "8802:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8812:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8802:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1945,
												"nodeType": "IfStatement",
												"src": "8798:157:6",
												"trueBody": {
													"id": 1944,
													"nodeType": "Block",
													"src": "8815:140:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1926,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "8858:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1929,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8875:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PolyRewardPool_$2247",
																					"typeString": "contract PolyRewardPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PolyRewardPool_$2247",
																					"typeString": "contract PolyRewardPool"
																				}
																			],
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8867:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1927,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8867:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8867:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1931,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "8882:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1921,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "8830:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "8830:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 246,
																	"src": "8830:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8830:60:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1933,
															"nodeType": "ExpressionStatement",
															"src": "8830:60:6"
														},
														{
															"expression": {
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1934,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "8905:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																			"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "8905:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1940,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1855,
																			"src": "8935:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1937,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1870,
																				"src": "8919:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1938,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "8919:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "8919:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8919:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8905:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1943,
															"nodeType": "ExpressionStatement",
															"src": "8905:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1946,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "8965:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "8965:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9025:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1952,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "8999:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPolyPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "8999:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1949,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "8983:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1122,
																		"src": "8983:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "8983:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8983:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "8983:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8983:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8965:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "8965:65:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1961,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "9054:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1962,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "9063:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1963,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "9069:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1960,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9046:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9046:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1965,
												"nodeType": "EmitStatement",
												"src": "9041:36:6"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "8276:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8276:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "8290:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8275:31:6"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8314:0:6"
									},
									"scope": 2247,
									"src": "8259:826:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2080,
										"nodeType": "Block",
										"src": "9177:754:6",
										"statements": [
											{
												"assignments": [
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"scope": 2080,
														"src": "9188:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1974,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9188:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1978,
												"initialValue": {
													"expression": {
														"id": 1976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9206:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9206:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9188:28:6"
											},
											{
												"assignments": [
													1980
												],
												"declarations": [
													{
														"constant": false,
														"id": 1980,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2080,
														"src": "9227:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1979,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "9227:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1984,
												"initialValue": {
													"baseExpression": {
														"id": 1981,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "9251:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1983,
													"indexExpression": {
														"id": 1982,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "9260:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9251:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9227:38:6"
											},
											{
												"assignments": [
													1986
												],
												"declarations": [
													{
														"constant": false,
														"id": 1986,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2080,
														"src": "9276:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1985,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "9276:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1992,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1987,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "9300:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1989,
														"indexExpression": {
															"id": 1988,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "9309:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9300:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1991,
													"indexExpression": {
														"id": 1990,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "9315:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9300:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9276:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1994,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "9342:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																		"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																	}
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1122,
																"src": "9342:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1996,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "9357:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9342:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9366:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9334:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9334:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "9334:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2002,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "9409:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2001,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "9398:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "9398:16:6"
											},
											{
												"assignments": [
													2006
												],
												"declarations": [
													{
														"constant": false,
														"id": 2006,
														"mutability": "mutable",
														"name": "_pending",
														"nodeType": "VariableDeclaration",
														"scope": 2080,
														"src": "9425:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9425:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2020,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2017,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "9496:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																	"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "9496:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9486:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2010,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1980,
																				"src": "9460:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPolyPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1133,
																			"src": "9460:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2007,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "9444:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 2008,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "9444:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "9444:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9444:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 979,
																"src": "9444:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9444:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "9444:51:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9444:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9425:87:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2021,
														"name": "_pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "9527:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9538:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9527:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2035,
												"nodeType": "IfStatement",
												"src": "9523:129:6",
												"trueBody": {
													"id": 2034,
													"nodeType": "Block",
													"src": "9541:111:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2025,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "9573:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2026,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2006,
																		"src": "9582:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2024,
																	"name": "safePolyTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "9556:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9556:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2028,
															"nodeType": "ExpressionStatement",
															"src": "9556:35:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2030,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "9622:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2031,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2006,
																		"src": "9631:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2029,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "9611:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9611:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2033,
															"nodeType": "EmitStatement",
															"src": "9606:34:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2036,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "9666:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9676:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9666:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2059,
												"nodeType": "IfStatement",
												"src": "9662:138:6",
												"trueBody": {
													"id": 2058,
													"nodeType": "Block",
													"src": "9679:121:6",
													"statements": [
														{
															"expression": {
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2039,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "9694:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																			"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "9694:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2045,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1971,
																			"src": "9724:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2042,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "9708:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 2043,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "9708:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 923,
																		"src": "9708:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9708:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9694:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2048,
															"nodeType": "ExpressionStatement",
															"src": "9694:38:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2054,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "9771:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2055,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1971,
																		"src": "9780:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2049,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1980,
																			"src": "9747:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "9747:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 221,
																	"src": "9747:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9747:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2057,
															"nodeType": "ExpressionStatement",
															"src": "9747:41:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2060,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "9810:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "9810:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9870:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2066,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1980,
																			"src": "9844:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPolyPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "9844:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2063,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1986,
																			"src": "9828:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1122,
																		"src": "9828:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "9828:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9828:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "9828:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9828:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9810:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2073,
												"nodeType": "ExpressionStatement",
												"src": "9810:65:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2075,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "9900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2076,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "9909:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2077,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "9915:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2074,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "9891:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9891:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2079,
												"nodeType": "EmitStatement",
												"src": "9886:37:6"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "9139:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "9153:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9153:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:31:6"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9177:0:6"
									},
									"scope": 2247,
									"src": "9121:810:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2135,
										"nodeType": "Block",
										"src": "10050:329:6",
										"statements": [
											{
												"assignments": [
													2087
												],
												"declarations": [
													{
														"constant": false,
														"id": 2087,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2135,
														"src": "10061:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 2086,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "10061:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2091,
												"initialValue": {
													"baseExpression": {
														"id": 2088,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "10085:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2090,
													"indexExpression": {
														"id": 2089,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "10094:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10085:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10061:38:6"
											},
											{
												"assignments": [
													2093
												],
												"declarations": [
													{
														"constant": false,
														"id": 2093,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2135,
														"src": "10110:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRewardPool.UserInfo"
														},
														"typeName": {
															"id": 2092,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "10110:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2100,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2094,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "10134:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRewardPool.UserInfo storage ref))"
															}
														},
														"id": 2096,
														"indexExpression": {
															"id": 2095,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2083,
															"src": "10143:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10134:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyRewardPool.UserInfo storage ref)"
														}
													},
													"id": 2099,
													"indexExpression": {
														"expression": {
															"id": 2097,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10149:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10149:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10134:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10110:50:6"
											},
											{
												"assignments": [
													2102
												],
												"declarations": [
													{
														"constant": false,
														"id": 2102,
														"mutability": "mutable",
														"name": "_amount",
														"nodeType": "VariableDeclaration",
														"scope": 2135,
														"src": "10171:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10171:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2105,
												"initialValue": {
													"expression": {
														"id": 2103,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "10189:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRewardPool.UserInfo storage pointer"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1122,
													"src": "10189:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10171:29:6"
											},
											{
												"expression": {
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2106,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "10211:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1122,
														"src": "10211:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10225:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10211:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "10211:15:6"
											},
											{
												"expression": {
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2112,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "10237:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "10237:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10255:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10237:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "10237:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10291:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10291:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2125,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "10303:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2118,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "10267:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 2121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "10267:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "10267:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10267:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "10267:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10345:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10345:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2131,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2083,
															"src": "10357:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2132,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "10363:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2128,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "10327:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10327:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "EmitStatement",
												"src": "10322:49:6"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "10029:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10028:14:6"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10050:0:6"
									},
									"scope": 2247,
									"src": "10002:377:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2178,
										"nodeType": "Block",
										"src": "10558:284:6",
										"statements": [
											{
												"assignments": [
													2144
												],
												"declarations": [
													{
														"constant": false,
														"id": 2144,
														"mutability": "mutable",
														"name": "_PolyBal",
														"nodeType": "VariableDeclaration",
														"scope": 2178,
														"src": "10569:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10569:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2152,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2149,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10611:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRewardPool_$2247",
																		"typeString": "contract PolyRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRewardPool_$2247",
																		"typeString": "contract PolyRewardPool"
																	}
																],
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10603:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2147,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10603:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10603:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2145,
															"name": "Poly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "10588:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "10588:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10588:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10569:48:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2153,
														"name": "_PolyBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "10632:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10643:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10632:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2177,
												"nodeType": "IfStatement",
												"src": "10628:207:6",
												"trueBody": {
													"id": 2176,
													"nodeType": "Block",
													"src": "10646:189:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "10665:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2157,
																	"name": "_PolyBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "10675:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10665:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2174,
																"nodeType": "Block",
																"src": "10758:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2170,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2138,
																					"src": "10795:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2171,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2140,
																					"src": "10800:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2167,
																					"name": "Poly",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "10777:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "10777:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10777:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2173,
																		"nodeType": "ExpressionStatement",
																		"src": "10777:31:6"
																	}
																]
															},
															"id": 2175,
															"nodeType": "IfStatement",
															"src": "10661:163:6",
															"trueBody": {
																"id": 2166,
																"nodeType": "Block",
																"src": "10685:67:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2162,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2138,
																					"src": "10722:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2163,
																					"name": "_PolyBal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "10727:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2159,
																					"name": "Poly",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "10704:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "10704:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10704:32:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2165,
																		"nodeType": "ExpressionStatement",
																		"src": "10704:32:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePolyTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "10519:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10519:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "10532:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10532:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10518:30:6"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10558:0:6"
									},
									"scope": 2247,
									"src": "10493:349:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "10987:487:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2190,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11002:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11002:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2192,
																"name": "epochEndTimes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "11020:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_storage",
																	"typeString": "uint256[3] storage ref"
																}
															},
															"id": 2194,
															"indexExpression": {
																"hexValue": "31",
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11034:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11020:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3330",
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11039:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "11020:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11002:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2237,
												"nodeType": "IfStatement",
												"src": "10998:427:6",
												"trueBody": {
													"id": 2236,
													"nodeType": "Block",
													"src": "11048:377:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		},
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2199,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2181,
																			"src": "11150:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2200,
																			"name": "Poly",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "11160:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "11150:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "21506f6c79",
																		"id": 2202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11166:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3041906d675e666a8391788237023b1debd4fb10314ccea9e7c61a0c8ff88b72",
																			"typeString": "literal_string \"!Poly\""
																		},
																		"value": "!Poly"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3041906d675e666a8391788237023b1debd4fb10314ccea9e7c61a0c8ff88b72",
																			"typeString": "literal_string \"!Poly\""
																		}
																	],
																	"id": 2198,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11142:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11142:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2204,
															"nodeType": "ExpressionStatement",
															"src": "11142:32:6"
														},
														{
															"assignments": [
																2206
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2206,
																	"mutability": "mutable",
																	"name": "length",
																	"nodeType": "VariableDeclaration",
																	"scope": 2236,
																	"src": "11189:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2205,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11189:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2209,
															"initialValue": {
																"expression": {
																	"id": 2207,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "11206:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																		"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11206:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11189:32:6"
														},
														{
															"body": {
																"id": 2234,
																"nodeType": "Block",
																"src": "11279:135:6",
																"statements": [
																	{
																		"assignments": [
																			2221
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2221,
																				"mutability": "mutable",
																				"name": "pool",
																				"nodeType": "VariableDeclaration",
																				"scope": 2234,
																				"src": "11298:21:6",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyRewardPool.PoolInfo"
																				},
																				"typeName": {
																					"id": 2220,
																					"name": "PoolInfo",
																					"nodeType": "UserDefinedTypeName",
																					"referencedDeclaration": 1136,
																					"src": "11298:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyRewardPool.PoolInfo"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2225,
																		"initialValue": {
																			"baseExpression": {
																				"id": 2222,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "11322:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																					"typeString": "struct PolyRewardPool.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 2224,
																			"indexExpression": {
																				"id": 2223,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2211,
																				"src": "11331:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11322:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
																				"typeString": "struct PolyRewardPool.PoolInfo storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11298:37:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					},
																					"id": 2230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2227,
																						"name": "_token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2181,
																						"src": "11362:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$187",
																							"typeString": "contract IERC20"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"id": 2228,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2221,
																							"src": "11372:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																								"typeString": "struct PolyRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 2229,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1127,
																						"src": "11372:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$187",
																							"typeString": "contract IERC20"
																						}
																					},
																					"src": "11362:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "21706f6f6c2e746f6b656e",
																					"id": 2231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11384:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_03ff65f32cd9bef1f4aeab39889f5a34519148c6a4b1878bf42b20d46d3cac5e",
																						"typeString": "literal_string \"!pool.token\""
																					},
																					"value": "!pool.token"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_03ff65f32cd9bef1f4aeab39889f5a34519148c6a4b1878bf42b20d46d3cac5e",
																						"typeString": "literal_string \"!pool.token\""
																					}
																				],
																				"id": 2226,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11354:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11354:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2233,
																		"nodeType": "ExpressionStatement",
																		"src": "11354:44:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2214,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "11258:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2215,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "11264:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11258:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2235,
															"initializationExpression": {
																"assignments": [
																	2211
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2211,
																		"mutability": "mutable",
																		"name": "pid",
																		"nodeType": "VariableDeclaration",
																		"scope": 2235,
																		"src": "11241:11:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2210,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11241:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2213,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11255:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "11241:15:6"
															},
															"loopExpression": {
																"expression": {
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "11272:5:6",
																	"subExpression": {
																		"id": 2217,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "11274:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2219,
																"nodeType": "ExpressionStatement",
																"src": "11272:5:6"
															},
															"nodeType": "ForStatement",
															"src": "11236:178:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2241,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "11455:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2242,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "11459:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2238,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "11435:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "11435:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11435:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2244,
												"nodeType": "ExpressionStatement",
												"src": "11435:31:6"
											}
										]
									},
									"functionSelector": "54575af4",
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2188,
											"modifierName": {
												"id": 2187,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2300,
												"src": "10974:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10974:12:6"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10898:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2180,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "10898:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10922:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10922:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10947:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10947:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10887:77:6"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10987:0:6"
									},
									"scope": 2247,
									"src": "10850:624:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2248,
							"src": "464:11013:6"
						}
					],
					"src": "35:11444:6"
				},
				"id": 6
			},
			"contracts/owner/Operator.sol": {
				"ast": {
					"absolutePath": "contracts/owner/Operator.sol",
					"exportedSymbols": {
						"Context": [
							719
						],
						"Operator": [
							2358
						],
						"Ownable": [
							109
						]
					},
					"id": 2359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2249,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2250,
							"nodeType": "ImportDirective",
							"scope": 2359,
							"sourceUnit": 110,
							"src": "70:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2251,
							"nodeType": "ImportDirective",
							"scope": 2359,
							"sourceUnit": 720,
							"src": "124:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2252,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 719,
										"src": "209:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$719",
											"typeString": "contract Context"
										}
									},
									"id": 2253,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:7"
								},
								{
									"baseName": {
										"id": 2254,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "218:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 2255,
									"nodeType": "InheritanceSpecifier",
									"src": "218:7:7"
								}
							],
							"contractDependencies": [
								109,
								719
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2358,
							"linearizedBaseContracts": [
								2358,
								109,
								719
							],
							"name": "Operator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2257,
									"mutability": "mutable",
									"name": "_operator",
									"nodeType": "VariableDeclaration",
									"scope": 2358,
									"src": "233:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2256,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2263,
									"name": "OperatorTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOperator",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "303:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOperator",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "346:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:88:7"
									},
									"src": "267:114:7"
								},
								{
									"body": {
										"id": 2279,
										"nodeType": "Block",
										"src": "412:101:7",
										"statements": [
											{
												"expression": {
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2266,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "423:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2267,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "435:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "435:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "423:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2270,
												"nodeType": "ExpressionStatement",
												"src": "423:24:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "491:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "483:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2272,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "483:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "483:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2276,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "495:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2271,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "463:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "463:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2278,
												"nodeType": "EmitStatement",
												"src": "458:47:7"
											}
										]
									},
									"id": 2280,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:7"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:7"
									},
									"scope": 2358,
									"src": "389:124:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "571:35:7",
										"statements": [
											{
												"expression": {
													"id": 2285,
													"name": "_operator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2257,
													"src": "589:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2284,
												"id": 2286,
												"nodeType": "Return",
												"src": "582:16:7"
											}
										]
									},
									"functionSelector": "570ca735",
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:7"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "562:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:9:7"
									},
									"scope": 2358,
									"src": "521:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2299,
										"nodeType": "Block",
										"src": "638:140:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2291,
																"name": "_operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "671:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2292,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "684:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "684:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "671:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "709:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															},
															"value": "operator: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															}
														],
														"id": 2290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "649:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:109:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "649:109:7"
											},
											{
												"id": 2298,
												"nodeType": "PlaceholderStatement",
												"src": "769:1:7"
											}
										]
									},
									"id": 2300,
									"name": "onlyOperator",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:7"
									},
									"src": "614:164:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2310,
										"nodeType": "Block",
										"src": "835:51:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2305,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "853:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "853:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2307,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "869:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "853:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2304,
												"id": 2309,
												"nodeType": "Return",
												"src": "846:32:7"
											}
										]
									},
									"functionSelector": "4456eda2",
									"id": 2311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:7"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "829:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:6:7"
									},
									"scope": 2358,
									"src": "786:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "959:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2319,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "988:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2318,
														"name": "_transferOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2357,
														"src": "970:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2321,
												"nodeType": "ExpressionStatement",
												"src": "970:31:7"
											}
										]
									},
									"functionSelector": "29605e77",
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2316,
											"modifierName": {
												"id": 2315,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "949:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "949:9:7"
										}
									],
									"name": "transferOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "920:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:22:7"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:7"
									},
									"scope": 2358,
									"src": "894:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "1075:286:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2329,
																"name": "newOperator_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "1108:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1132:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1124:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2330,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1124:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1124:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1108:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1149:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															},
															"value": "operator: zero address given for new operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															}
														],
														"id": 2328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1086:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2337,
												"nodeType": "ExpressionStatement",
												"src": "1086:121:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1251:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1243:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2339,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1243:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1243:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2343,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "1255:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2338,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "1223:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2345,
												"nodeType": "EmitStatement",
												"src": "1218:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2349,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "1305:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2346,
															"name": "Ownable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1279:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Ownable_$109_$",
																"typeString": "type(contract Ownable)"
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "1279:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2351,
												"nodeType": "ExpressionStatement",
												"src": "1279:39:7"
											},
											{
												"expression": {
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2352,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "1329:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2353,
														"name": "newOperator_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "1341:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1329:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2355,
												"nodeType": "ExpressionStatement",
												"src": "1329:24:7"
											}
										]
									},
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "1044:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:22:7"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:0:7"
									},
									"scope": 2358,
									"src": "1017:344:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2359,
							"src": "179:1185:7"
						}
					],
					"src": "35:1331:7"
				},
				"id": 7
			}
		}
	}
}