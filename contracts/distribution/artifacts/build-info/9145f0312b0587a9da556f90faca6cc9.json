{
	"id": "9145f0312b0587a9da556f90faca6cc9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/distribution/TShareRewardPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../owner/Operator.sol\";\r\n// Note that this pool has no minter key of Rock (rewards).\r\n// Instead, the governance will call Rock distributeReward method and send reward to this pool at the beginning.\r\ncontract PolyRockRewardPool is Operator {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // governance\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 token; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Rocks to distribute per block.\r\n        uint256 lastRewardTime; // Last time that Rocks distribution occurs.\r\n        uint256 accRockPerShare; // Accumulated Rocks per share, times 1e18. See below.\r\n        bool isStarted; // if lastRewardTime has passed\r\n    }\r\n\r\n    IERC20 public Rock;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n\r\n    // The time when Rock mining starts.\r\n    uint256 public poolStartTime;\r\n\r\n    // The time when Rock mining ends.\r\n    uint256 public poolEndTime;\r\n\r\n    uint256 public RockPerSecond = 0.00187687 ether; // 60000 3share / (370 days * 24h * 60min * 60s)\r\n    uint256 public runningTime = 370 days; // 370 days\r\n    uint256 public constant TOTAL_REWARDS = 60000 ether;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 amount);\r\n\r\n    constructor(\r\n        address _Rock,\r\n        uint256 _poolStartTime\r\n    ) public {\r\n        require(block.timestamp < _poolStartTime, \"late\");\r\n        if (_Rock != address(0)) Rock = IERC20(_Rock);\r\n        poolStartTime = _poolStartTime;\r\n        poolEndTime = poolStartTime + runningTime;\r\n    }\r\n\r\n    function checkPoolDuplicate(IERC20 _token) internal view {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            require(poolInfo[pid].token != _token, \"RockRewardPool: existing pool?\");\r\n        }\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _token,\r\n        bool _withUpdate,\r\n        uint256 _lastRewardTime\r\n    ) public onlyOperator {\r\n        checkPoolDuplicate(_token);\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        if (block.timestamp < poolStartTime) {\r\n            // chef is sleeping\r\n            if (_lastRewardTime == 0) {\r\n                _lastRewardTime = poolStartTime;\r\n            } else {\r\n                if (_lastRewardTime < poolStartTime) {\r\n                    _lastRewardTime = poolStartTime;\r\n                }\r\n            }\r\n        } else {\r\n            // chef is cooking\r\n            if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r\n                _lastRewardTime = block.timestamp;\r\n            }\r\n        }\r\n        bool _isStarted =\r\n        (_lastRewardTime <= poolStartTime) ||\r\n        (_lastRewardTime <= block.timestamp);\r\n        poolInfo.push(PoolInfo({\r\n            token : _token,\r\n            allocPoint : _allocPoint,\r\n            lastRewardTime : _lastRewardTime,\r\n            accRockPerShare : 0,\r\n            isStarted : _isStarted\r\n            }));\r\n        if (_isStarted) {\r\n            totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        }\r\n    }\r\n\r\n    // Update the given pool's Rock allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r\n        massUpdatePools();\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (pool.isStarted) {\r\n            totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r\n                _allocPoint\r\n            );\r\n        }\r\n        pool.allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return accumulate rewards over the given _from to _to block.\r\n    function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r\n        if (_fromTime >= _toTime) return 0;\r\n        if (_toTime >= poolEndTime) {\r\n            if (_fromTime >= poolEndTime) return 0;\r\n            if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(RockPerSecond);\r\n            return poolEndTime.sub(_fromTime).mul(RockPerSecond);\r\n        } else {\r\n            if (_toTime <= poolStartTime) return 0;\r\n            if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(RockPerSecond);\r\n            return _toTime.sub(_fromTime).mul(RockPerSecond);\r\n        }\r\n    }\r\n\r\n    // View function to see pending Rocks on frontend.\r\n    function pendingShare(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accRockPerShare = pool.accRockPerShare;\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _RockReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            accRockPerShare = accRockPerShare.add(_RockReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        return user.amount.mul(accRockPerShare).div(1e18).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.timestamp <= pool.lastRewardTime) {\r\n            return;\r\n        }\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (tokenSupply == 0) {\r\n            pool.lastRewardTime = block.timestamp;\r\n            return;\r\n        }\r\n        if (!pool.isStarted) {\r\n            pool.isStarted = true;\r\n            totalAllocPoint = totalAllocPoint.add(pool.allocPoint);\r\n        }\r\n        if (totalAllocPoint > 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _RockReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            pool.accRockPerShare = pool.accRockPerShare.add(_RockReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        pool.lastRewardTime = block.timestamp;\r\n    }\r\n\r\n    // Deposit LP tokens.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 _pending = user.amount.mul(pool.accRockPerShare).div(1e18).sub(user.rewardDebt);\r\n            if (_pending > 0) {\r\n                safeRockTransfer(_sender, _pending);\r\n                emit RewardPaid(_sender, _pending);\r\n            }\r\n        }\r\n        if (_amount > 0) {\r\n            pool.token.safeTransferFrom(_sender, address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accRockPerShare).div(1e18);\r\n        emit Deposit(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 _pending = user.amount.mul(pool.accRockPerShare).div(1e18).sub(user.rewardDebt);\r\n        if (_pending > 0) {\r\n            safeRockTransfer(_sender, _pending);\r\n            emit RewardPaid(_sender, _pending);\r\n        }\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.token.safeTransfer(_sender, _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accRockPerShare).div(1e18);\r\n        emit Withdraw(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 _amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        pool.token.safeTransfer(msg.sender, _amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Safe Rock transfer function, just in case if rounding error causes pool to not have enough Rocks.\r\n    function safeRockTransfer(address _to, uint256 _amount) internal {\r\n        uint256 _RockBal = Rock.balanceOf(address(this));\r\n        if (_RockBal > 0) {\r\n            if (_amount > _RockBal) {\r\n                Rock.safeTransfer(_to, _RockBal);\r\n            } else {\r\n                Rock.safeTransfer(_to, _amount);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r\n        if (block.timestamp < poolEndTime + 90 days) {\r\n            // do not allow to drain core token (Rock or lps) if less than 90 days after pool ends\r\n            require(_token != Rock, \"Rock\");\r\n            uint256 length = poolInfo.length;\r\n            for (uint256 pid = 0; pid < length; ++pid) {\r\n                PoolInfo storage pool = poolInfo[pid];\r\n                require(_token != pool.token, \"pool.token\");\r\n            }\r\n        }\r\n        _token.safeTransfer(to, amount);\r\n    }\r\n}\r\n"
			},
			"contracts/owner/Operator.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\n\r\nabstract contract Operator is Context, Ownable {\r\n    address private _operator;\r\n\r\n    event OperatorTransferred(\r\n        address indexed previousOperator,\r\n        address indexed newOperator\r\n    );\r\n\r\n    constructor() internal {\r\n        _operator = _msgSender();\r\n        emit OperatorTransferred(address(0), _operator);\r\n    }\r\n\r\n    function operator() public view returns (address) {\r\n        return _operator;\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(\r\n            _operator == msg.sender,\r\n            \"operator: caller is not the operator\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function isOperator() public view returns (bool) {\r\n        return _msgSender() == _operator;\r\n    }\r\n\r\n    function transferOperator(address newOperator_) public onlyOwner {\r\n        _transferOperator(newOperator_);\r\n    }\r\n\r\n    function _transferOperator(address newOperator_) internal {\r\n        require(\r\n            newOperator_ != address(0),\r\n            \"operator: zero address given for new operator\"\r\n        );\r\n        emit OperatorTransferred(address(0), newOperator_);\r\n        Ownable.transferOwnership(newOperator_);\r\n        _operator = newOperator_;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n        uint256 c = add(a, m);\n        uint256 d = sub(c, 1);\n        return mul(div(d, m), m);\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\nimport \"../../../utils/math/SafeMath.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB7 NUMBER DUP8 0xE9 0xB1 XOR 0x28 0xDA 0x5E 0xEF DUP10 DELEGATECALL PUSH16 0xE361EF212AB84898BFAFDB079A879C0E 0xA9 DUP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB7 NUMBER DUP8 0xE9 0xB1 XOR 0x28 0xDA 0x5E 0xEF DUP10 DELEGATECALL PUSH16 0xE361EF212AB84898BFAFDB079A879C0E 0xA9 DUP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
									".code": [
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP12 DIV 0x22 PUSH5 0xC341000E3A GASLIMIT SWAP16 0xB1 0xB2 0x5E 0x5E PUSH16 0x7C0A332A2B272244935D98A1AD012D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP12 DIV 0x22 PUSH5 0xC341000E3A GASLIMIT SWAP16 0xB1 0xB2 0x5E 0x5E PUSH16 0x7C0A332A2B272244935D98A1AD012D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
									".code": [
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH25 0x9C7DC208C1CDAF180832363C00B8838A69482D3509FF06125B SWAP10 0xAA SWAP10 0x26 SELFDESTRUCT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH25 0x9C7DC208C1CDAF180832363C00B8838A69482D3509FF06125B SWAP10 0xAA SWAP10 0x26 SELFDESTRUCT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"ceil(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/distribution/TShareRewardPool.sol": {
				"PolyRockRewardPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Rock",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolStartTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Rock",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RockPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_REWARDS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lastRewardTime",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTime",
									"type": "uint256"
								}
							],
							"name": "getGeneratedReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accRockPerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStarted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "runningTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/distribution/TShareRewardPool.sol\":462:10689  contract PolyRockRewardPool is Operator {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/distribution/TShareRewardPool.sol\":1579:1580  0 */\n  0x00\n    /* \"contracts/distribution/TShareRewardPool.sol\":1546:1580  uint256 public totalAllocPoint = 0 */\n  0x05\n  sstore\n    /* \"contracts/distribution/TShareRewardPool.sol\":1774:1790  0.00187687 ether */\n  0x06ab00d9a3bc00\n    /* \"contracts/distribution/TShareRewardPool.sol\":1743:1790  uint256 public RockPerSecond = 0.00187687 ether */\n  0x08\n  sstore\n    /* \"contracts/distribution/TShareRewardPool.sol\":1875:1883  370 days */\n  0x01e7cb00\n    /* \"contracts/distribution/TShareRewardPool.sol\":1846:1883  uint256 public runningTime = 370 days */\n  0x09\n  sstore\n    /* \"contracts/distribution/TShareRewardPool.sol\":2273:2573  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:955  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:968  _msgSender */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:970  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":989:998  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:986  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:998  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1046:1055  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1042:1043  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:1063  constructor () internal {... */\n  pop\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  tag_10\n    /* \"contracts/owner/Operator.sol\":435:445  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/owner/Operator.sol\":423:432  _operator */\n  0x01\n  0x00\n    /* \"contracts/owner/Operator.sol\":423:447  _operator = _msgSender() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/owner/Operator.sol\":495:504  _operator */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":491:492  0 */\n  0x00\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/distribution/TShareRewardPool.sol\":2393:2407  _poolStartTime */\n  dup1\n    /* \"contracts/distribution/TShareRewardPool.sol\":2375:2390  block.timestamp */\n  timestamp\n    /* \"contracts/distribution/TShareRewardPool.sol\":2375:2407  block.timestamp < _poolStartTime */\n  lt\n    /* \"contracts/distribution/TShareRewardPool.sol\":2367:2416  require(block.timestamp < _poolStartTime, \"late\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x6c61746500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"contracts/distribution/TShareRewardPool.sol\":2448:2449  0 */\n  0x00\n    /* \"contracts/distribution/TShareRewardPool.sol\":2431:2450  _Rock != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/distribution/TShareRewardPool.sol\":2431:2436  _Rock */\n  dup3\n    /* \"contracts/distribution/TShareRewardPool.sol\":2431:2450  _Rock != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/distribution/TShareRewardPool.sol\":2427:2472  if (_Rock != address(0)) Rock = IERC20(_Rock) */\n  tag_13\n  jumpi\n    /* \"contracts/distribution/TShareRewardPool.sol\":2466:2471  _Rock */\n  dup2\n    /* \"contracts/distribution/TShareRewardPool.sol\":2452:2456  Rock */\n  0x02\n  0x00\n    /* \"contracts/distribution/TShareRewardPool.sol\":2452:2472  Rock = IERC20(_Rock) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":2427:2472  if (_Rock != address(0)) Rock = IERC20(_Rock) */\ntag_13:\n    /* \"contracts/distribution/TShareRewardPool.sol\":2499:2513  _poolStartTime */\n  dup1\n    /* \"contracts/distribution/TShareRewardPool.sol\":2483:2496  poolStartTime */\n  0x06\n    /* \"contracts/distribution/TShareRewardPool.sol\":2483:2513  poolStartTime = _poolStartTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":2554:2565  runningTime */\n  sload(0x09)\n    /* \"contracts/distribution/TShareRewardPool.sol\":2538:2551  poolStartTime */\n  sload(0x06)\n    /* \"contracts/distribution/TShareRewardPool.sol\":2538:2565  poolStartTime + runningTime */\n  add\n    /* \"contracts/distribution/TShareRewardPool.sol\":2524:2535  poolEndTime */\n  0x07\n    /* \"contracts/distribution/TShareRewardPool.sol\":2524:2565  poolEndTime = poolStartTime + runningTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":2273:2573  constructor(\r... */\n  pop\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":462:10689  contract PolyRockRewardPool is Operator {\r... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/distribution/TShareRewardPool.sol\":462:10689  contract PolyRockRewardPool is Operator {\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/distribution/TShareRewardPool.sol\":462:10689  contract PolyRockRewardPool is Operator {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x570ca735\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x96805e54\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x96805e54\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcf4b55cb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x943f013d\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x570ca735\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5f96dc11\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x60689557\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6e271dd5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x29605e77\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x29605e77\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4456eda2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x022cbf18\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x09cf6091\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x231f0c6a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/distribution/TShareRewardPool.sol\":1743:1790  uint256 public RockPerSecond = 0.00187687 ether */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1902:1953  uint256 public constant TOTAL_REWARDS = 60000 ether */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1301:1327  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1546:1580  uint256 public totalAllocPoint = 0 */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":4288:4641  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4718:5371  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8351:9161  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":6546:7454  function updatePool(uint256 _pid) public {\r... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9232:9609  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10082:10686  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_14:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_15:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1631:1659  uint256 public poolStartTime */\n    tag_16:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1247:1265  IERC20 public Rock */\n    tag_17:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":6290:6470  function massUpdatePools() public {\r... */\n    tag_18:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":1708:1734  uint256 public poolEndTime */\n    tag_19:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1385:1449  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_22:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1846:1883  uint256 public runningTime = 370 days */\n    tag_23:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":2916:4192  function add(\r... */\n    tag_24:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5435:6207  function pendingShare(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_25:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":7489:8315  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_26:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":1743:1790  uint256 public RockPerSecond = 0.00187687 ether */\n    tag_33:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1902:1953  uint256 public constant TOTAL_REWARDS = 60000 ether */\n    tag_35:\n        /* \"contracts/distribution/TShareRewardPool.sol\":1942:1953  60000 ether */\n      0x0cb49b44ba602d800000\n        /* \"contracts/distribution/TShareRewardPool.sol\":1902:1953  uint256 public constant TOTAL_REWARDS = 60000 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1301:1327  PoolInfo[] public poolInfo */\n    tag_38:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_95\n      jumpi\n      invalid\n    tag_95:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1546:1580  uint256 public totalAllocPoint = 0 */\n    tag_40:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":4288:4641  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_43:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4367:4384  massUpdatePools() */\n      tag_100\n        /* \"contracts/distribution/TShareRewardPool.sol\":4367:4382  massUpdatePools */\n      tag_71\n        /* \"contracts/distribution/TShareRewardPool.sol\":4367:4384  massUpdatePools() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4395:4416  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":4419:4427  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":4428:4432  _pid */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":4419:4433  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_101\n      jumpi\n      invalid\n    tag_101:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4395:4433  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4448:4452  pool */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4448:4462  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":4444:4594  if (pool.isStarted) {\r... */\n      iszero\n      tag_103\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":4497:4582  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      tag_104\n        /* \"contracts/distribution/TShareRewardPool.sol\":4556:4567  _allocPoint */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":4497:4533  totalAllocPoint.sub(pool.allocPoint) */\n      tag_105\n        /* \"contracts/distribution/TShareRewardPool.sol\":4517:4521  pool */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":4517:4532  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":4497:4512  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4497:4516  totalAllocPoint.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4497:4533  totalAllocPoint.sub(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4497:4537  totalAllocPoint.sub(pool.allocPoint).add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4497:4582  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4479:4494  totalAllocPoint */\n      0x05\n        /* \"contracts/distribution/TShareRewardPool.sol\":4479:4582  totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4444:4594  if (pool.isStarted) {\r... */\n    tag_103:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4622:4633  _allocPoint */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":4604:4608  pool */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":4604:4619  pool.allocPoint */\n      0x01\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4604:4633  pool.allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4288:4641  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":4718:5371  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_46:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4803:4810  uint256 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":4840:4847  _toTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":4827:4836  _fromTime */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":4827:4847  _fromTime >= _toTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":4823:4857  if (_fromTime >= _toTime) return 0 */\n      tag_109\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":4856:4857  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":4849:4857  return 0 */\n      swap1\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4823:4857  if (_fromTime >= _toTime) return 0 */\n    tag_109:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4883:4894  poolEndTime */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4872:4879  _toTime */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":4872:4894  _toTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":4868:5364  if (_toTime >= poolEndTime) {\r... */\n      tag_110\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":4928:4939  poolEndTime */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4915:4924  _fromTime */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":4915:4939  _fromTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":4911:4949  if (_fromTime >= poolEndTime) return 0 */\n      tag_111\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":4948:4949  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":4941:4949  return 0 */\n      swap1\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4911:4949  if (_fromTime >= poolEndTime) return 0 */\n    tag_111:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4981:4994  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4968:4977  _fromTime */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":4968:4994  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":4964:5052  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(RockPerSecond) */\n      tag_112\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5003:5052  poolEndTime.sub(poolStartTime).mul(RockPerSecond) */\n      tag_113\n        /* \"contracts/distribution/TShareRewardPool.sol\":5038:5051  RockPerSecond */\n      sload(0x08)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5003:5033  poolEndTime.sub(poolStartTime) */\n      tag_114\n        /* \"contracts/distribution/TShareRewardPool.sol\":5019:5032  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5003:5014  poolEndTime */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5003:5018  poolEndTime.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5003:5033  poolEndTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5003:5037  poolEndTime.sub(poolStartTime).mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5003:5052  poolEndTime.sub(poolStartTime).mul(RockPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4996:5052  return poolEndTime.sub(poolStartTime).mul(RockPerSecond) */\n      swap1\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4964:5052  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(RockPerSecond) */\n    tag_112:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5074:5119  poolEndTime.sub(_fromTime).mul(RockPerSecond) */\n      tag_116\n        /* \"contracts/distribution/TShareRewardPool.sol\":5105:5118  RockPerSecond */\n      sload(0x08)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5074:5100  poolEndTime.sub(_fromTime) */\n      tag_117\n        /* \"contracts/distribution/TShareRewardPool.sol\":5090:5099  _fromTime */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5074:5085  poolEndTime */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5074:5089  poolEndTime.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5074:5100  poolEndTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5074:5104  poolEndTime.sub(_fromTime).mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5074:5119  poolEndTime.sub(_fromTime).mul(RockPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5067:5119  return poolEndTime.sub(_fromTime).mul(RockPerSecond) */\n      swap1\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4868:5364  if (_toTime >= poolEndTime) {\r... */\n    tag_110:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5167:5180  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5156:5163  _toTime */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":5156:5180  _toTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5152:5190  if (_toTime <= poolStartTime) return 0 */\n      tag_119\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5189:5190  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5182:5190  return 0 */\n      swap1\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5152:5190  if (_toTime <= poolStartTime) return 0 */\n    tag_119:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5222:5235  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5209:5218  _fromTime */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5209:5235  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5205:5289  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(RockPerSecond) */\n      tag_120\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5244:5289  _toTime.sub(poolStartTime).mul(RockPerSecond) */\n      tag_121\n        /* \"contracts/distribution/TShareRewardPool.sol\":5275:5288  RockPerSecond */\n      sload(0x08)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5244:5270  _toTime.sub(poolStartTime) */\n      tag_122\n        /* \"contracts/distribution/TShareRewardPool.sol\":5256:5269  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5244:5251  _toTime */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5244:5255  _toTime.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5244:5270  _toTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5244:5274  _toTime.sub(poolStartTime).mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5244:5289  _toTime.sub(poolStartTime).mul(RockPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5237:5289  return _toTime.sub(poolStartTime).mul(RockPerSecond) */\n      swap1\n      pop\n      jump(tag_108)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5205:5289  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(RockPerSecond) */\n    tag_120:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5311:5352  _toTime.sub(_fromTime).mul(RockPerSecond) */\n      tag_123\n        /* \"contracts/distribution/TShareRewardPool.sol\":5338:5351  RockPerSecond */\n      sload(0x08)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5311:5333  _toTime.sub(_fromTime) */\n      tag_124\n        /* \"contracts/distribution/TShareRewardPool.sol\":5323:5332  _fromTime */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5311:5318  _toTime */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5311:5322  _toTime.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5311:5333  _toTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5311:5337  _toTime.sub(_fromTime).mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5311:5352  _toTime.sub(_fromTime).mul(RockPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5304:5352  return _toTime.sub(_fromTime).mul(RockPerSecond) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4718:5371  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_108:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      tag_131\n        /* \"contracts/owner/Operator.sol\":988:1000  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":970:987  _transferOperator */\n      tag_132\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":8351:9161  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_52:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8418:8433  address _sender */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8436:8446  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":8418:8446  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8457:8478  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8481:8489  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":8490:8494  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8481:8495  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_134\n      jumpi\n      invalid\n    tag_134:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":8457:8495  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8506:8527  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8530:8538  userInfo */\n      0x04\n        /* \"contracts/distribution/TShareRewardPool.sol\":8530:8544  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8539:8543  _pid */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":8530:8544  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":8530:8553  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8545:8552  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8530:8553  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":8506:8553  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8587:8594  _amount */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8572:8576  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8572:8583  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8572:8594  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":8564:8617  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8628:8644  updatePool(_pid) */\n      tag_137\n        /* \"contracts/distribution/TShareRewardPool.sol\":8639:8643  _pid */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":8628:8638  updatePool */\n      tag_57\n        /* \"contracts/distribution/TShareRewardPool.sol\":8628:8644  updatePool(_pid) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8655:8671  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8742  user.amount.mul(pool.accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_138\n        /* \"contracts/distribution/TShareRewardPool.sol\":8726:8730  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8726:8741  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8721  user.amount.mul(pool.accRockPerShare).div(1e18) */\n      tag_139\n        /* \"contracts/distribution/TShareRewardPool.sol\":8716:8720  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8711  user.amount.mul(pool.accRockPerShare) */\n      tag_140\n        /* \"contracts/distribution/TShareRewardPool.sol\":8690:8694  pool */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":8690:8710  pool.accRockPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8678  user */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8685  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8689  user.amount.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8711  user.amount.mul(pool.accRockPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8715  user.amount.mul(pool.accRockPerShare).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8721  user.amount.mul(pool.accRockPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8725  user.amount.mul(pool.accRockPerShare).div(1e18).sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8674:8742  user.amount.mul(pool.accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8655:8742  uint256 _pending = user.amount.mul(pool.accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8768:8769  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8757:8765  _pending */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8757:8769  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":8753:8882  if (_pending > 0) {\r... */\n      iszero\n      tag_142\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":8786:8821  safeRockTransfer(_sender, _pending) */\n      tag_143\n        /* \"contracts/distribution/TShareRewardPool.sol\":8803:8810  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8812:8820  _pending */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8786:8802  safeRockTransfer */\n      tag_144\n        /* \"contracts/distribution/TShareRewardPool.sol\":8786:8821  safeRockTransfer(_sender, _pending) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8852:8859  _sender */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8841:8870  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TShareRewardPool.sol\":8861:8869  _pending */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8841:8870  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8753:8882  if (_pending > 0) {\r... */\n    tag_142:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8907  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8896:8903  _amount */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":8896:8907  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":8892:9030  if (_amount > 0) {\r... */\n      iszero\n      tag_145\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":8938:8962  user.amount.sub(_amount) */\n      tag_146\n        /* \"contracts/distribution/TShareRewardPool.sol\":8954:8961  _amount */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":8938:8942  user */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8938:8949  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8938:8953  user.amount.sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8938:8962  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8924:8928  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8924:8935  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":8924:8962  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8977:9018  pool.token.safeTransfer(_sender, _amount) */\n      tag_147\n        /* \"contracts/distribution/TShareRewardPool.sol\":9001:9008  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":9010:9017  _amount */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":8977:8981  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":8977:8987  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":8977:9000  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_148\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8977:9018  pool.token.safeTransfer(_sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8892:9030  if (_amount > 0) {\r... */\n    tag_145:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9058:9105  user.amount.mul(pool.accRockPerShare).div(1e18) */\n      tag_149\n        /* \"contracts/distribution/TShareRewardPool.sol\":9100:9104  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":9058:9095  user.amount.mul(pool.accRockPerShare) */\n      tag_150\n        /* \"contracts/distribution/TShareRewardPool.sol\":9074:9078  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9074:9094  pool.accRockPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":9058:9062  user */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9058:9069  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":9058:9073  user.amount.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9058:9095  user.amount.mul(pool.accRockPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9058:9099  user.amount.mul(pool.accRockPerShare).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9058:9105  user.amount.mul(pool.accRockPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9040:9044  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9040:9055  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9040:9105  user.rewardDebt = user.amount.mul(pool.accRockPerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9139:9143  _pid */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9130:9137  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":9121:9153  Withdraw(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/distribution/TShareRewardPool.sol\":9145:9152  _amount */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":9121:9153  Withdraw(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8351:9161  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_54:\n        /* \"contracts/owner/Operator.sol\":829:833  bool */\n      0x00\n        /* \"contracts/owner/Operator.sol\":869:878  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      tag_152\n        /* \"contracts/owner/Operator.sol\":853:863  _msgSender */\n      tag_127\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":846:878  return _msgSender() == _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":6546:7454  function updatePool(uint256 _pid) public {\r... */\n    tag_57:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6598:6619  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6622:6630  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":6631:6635  _pid */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":6622:6636  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      invalid\n    tag_154:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":6598:6636  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6670:6674  pool */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6670:6689  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":6651:6666  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":6651:6689  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":6647:6724  if (block.timestamp <= pool.lastRewardTime) {\r... */\n      tag_156\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":6706:6713  return; */\n      pop\n      jump(tag_153)\n        /* \"contracts/distribution/TShareRewardPool.sol\":6647:6724  if (block.timestamp <= pool.lastRewardTime) {\r... */\n    tag_156:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6734:6753  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6756:6760  pool */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6756:6766  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":6756:6776  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TShareRewardPool.sol\":6785:6789  this */\n      address\n        /* \"contracts/distribution/TShareRewardPool.sol\":6756:6791  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6734:6791  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6821:6822  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6806:6817  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6806:6822  tokenSupply == 0 */\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":6802:6909  if (tokenSupply == 0) {\r... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":6861:6876  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":6839:6843  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":6839:6858  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":6839:6876  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6891:6898  return; */\n      pop\n      pop\n      jump(tag_153)\n        /* \"contracts/distribution/TShareRewardPool.sol\":6802:6909  if (tokenSupply == 0) {\r... */\n    tag_161:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6924:6928  pool */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6924:6938  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":6919:7057  if (!pool.isStarted) {\r... */\n      tag_162\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":6972:6976  true */\n      0x01\n        /* \"contracts/distribution/TShareRewardPool.sol\":6955:6959  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":6955:6969  pool.isStarted */\n      0x04\n      add\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6955:6976  pool.isStarted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7009:7045  totalAllocPoint.add(pool.allocPoint) */\n      tag_163\n        /* \"contracts/distribution/TShareRewardPool.sol\":7029:7033  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7029:7044  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7009:7024  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":7009:7028  totalAllocPoint.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7009:7045  totalAllocPoint.add(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6991:7006  totalAllocPoint */\n      0x05\n        /* \"contracts/distribution/TShareRewardPool.sol\":6991:7045  totalAllocPoint = totalAllocPoint.add(pool.allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6919:7057  if (!pool.isStarted) {\r... */\n    tag_162:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7089:7090  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7071:7086  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":7071:7090  totalAllocPoint > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":7067:7399  if (totalAllocPoint > 0) {\r... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":7107:7131  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7134:7190  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_165\n        /* \"contracts/distribution/TShareRewardPool.sol\":7153:7157  pool */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":7153:7172  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7174:7189  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":7134:7152  getGeneratedReward */\n      tag_46\n        /* \"contracts/distribution/TShareRewardPool.sol\":7134:7190  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7107:7190  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7205:7224  uint256 _RockReward */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7285  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_166\n        /* \"contracts/distribution/TShareRewardPool.sol\":7269:7284  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7264  _generatedReward.mul(pool.allocPoint) */\n      tag_167\n        /* \"contracts/distribution/TShareRewardPool.sol\":7248:7252  pool */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":7248:7263  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7243  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7247  _generatedReward.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7264  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7268  _generatedReward.mul(pool.allocPoint).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7285  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7205:7285  uint256 _RockReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7323:7387  pool.accRockPerShare.add(_RockReward.mul(1e18).div(tokenSupply)) */\n      tag_168\n        /* \"contracts/distribution/TShareRewardPool.sol\":7348:7386  _RockReward.mul(1e18).div(tokenSupply) */\n      tag_169\n        /* \"contracts/distribution/TShareRewardPool.sol\":7374:7385  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7348:7369  _RockReward.mul(1e18) */\n      tag_170\n        /* \"contracts/distribution/TShareRewardPool.sol\":7364:7368  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":7348:7359  _RockReward */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":7348:7363  _RockReward.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7348:7369  _RockReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7348:7373  _RockReward.mul(1e18).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7348:7386  _RockReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7323:7327  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":7323:7343  pool.accRockPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7323:7347  pool.accRockPerShare.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7323:7387  pool.accRockPerShare.add(_RockReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7300:7304  pool */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7300:7320  pool.accRockPerShare */\n      0x03\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":7300:7387  pool.accRockPerShare = pool.accRockPerShare.add(_RockReward.mul(1e18).div(tokenSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7067:7399  if (totalAllocPoint > 0) {\r... */\n      pop\n      pop\n    tag_164:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7431:7446  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":7409:7413  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7409:7428  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":7409:7446  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6546:7454  function updatePool(uint256 _pid) public {\r... */\n      pop\n      pop\n    tag_153:\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":9232:9609  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_60:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9291:9312  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9315:9323  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":9324:9328  _pid */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9315:9329  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      invalid\n    tag_172:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9291:9329  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9340:9361  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9364:9372  userInfo */\n      0x04\n        /* \"contracts/distribution/TShareRewardPool.sol\":9364:9378  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9373:9377  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":9364:9378  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":9364:9390  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9379:9389  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":9364:9390  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":9340:9390  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9401:9416  uint256 _amount */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9419:9423  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":9419:9430  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":9401:9430  uint256 _amount = user.amount */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9455:9456  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9441:9445  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9441:9452  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9441:9456  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9485:9486  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9467:9471  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9467:9482  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9467:9486  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9497:9541  pool.token.safeTransfer(msg.sender, _amount) */\n      tag_174\n        /* \"contracts/distribution/TShareRewardPool.sol\":9521:9531  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":9533:9540  _amount */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9497:9501  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9497:9507  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":9497:9520  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_148\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9497:9541  pool.token.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9587:9591  _pid */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":9575:9585  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":9557:9601  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/distribution/TShareRewardPool.sol\":9593:9600  _amount */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":9557:9601  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9232:9609  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":10082:10686  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_63:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10232:10239  90 days */\n      0x76a700\n        /* \"contracts/distribution/TShareRewardPool.sol\":10218:10229  poolEndTime */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":10218:10239  poolEndTime + 90 days */\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":10200:10215  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":10200:10239  block.timestamp < poolEndTime + 90 days */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":10196:10637  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":10374:10378  Rock */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10364:10378  _token != Rock */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10364:10370  _token */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":10364:10378  _token != Rock */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":10356:10387  require(_token != Rock, \"Rock\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x526f636b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10402:10416  uint256 length */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":10419:10427  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":10419:10434  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10402:10434  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10454:10465  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":10449:10626  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_180:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10477:10483  length */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":10471:10474  pid */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":10471:10483  pid < length */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":10449:10626  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":10511:10532  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":10535:10543  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":10544:10547  pid */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":10535:10548  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_183\n      jumpi\n      invalid\n    tag_183:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":10511:10548  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10585:10589  pool */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10585:10595  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10575:10595  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10575:10581  _token */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":10575:10595  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":10567:10610  require(_token != pool.token, \"pool.token\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x706f6f6c2e746f6b656e00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10449:10626  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10485:10490  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10449:10626  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_180)\n    tag_181:\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10196:10637  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      pop\n    tag_178:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10647:10678  _token.safeTransfer(to, amount) */\n      tag_186\n        /* \"contracts/distribution/TShareRewardPool.sol\":10667:10669  to */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":10671:10677  amount */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":10647:10653  _token */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":10647:10666  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_148\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10647:10678  _token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10082:10686  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_65:\n        /* \"contracts/owner/Operator.sol\":562:569  address */\n      0x00\n        /* \"contracts/owner/Operator.sol\":589:598  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":582:598  return _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1631:1659  uint256 public poolStartTime */\n    tag_67:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1247:1265  IERC20 public Rock */\n    tag_69:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":6290:6470  function massUpdatePools() public {\r... */\n    tag_71:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6335:6349  uint256 length */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6360  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6367  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6335:6367  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6383:6394  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6378:6463  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_189:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6406:6412  length */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6400:6403  pid */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6400:6412  pid < length */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":6378:6463  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":6436:6451  updatePool(pid) */\n      tag_192\n        /* \"contracts/distribution/TShareRewardPool.sol\":6447:6450  pid */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6436:6446  updatePool */\n      tag_57\n        /* \"contracts/distribution/TShareRewardPool.sol\":6436:6451  updatePool(pid) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6414:6419  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6378:6463  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_189)\n    tag_190:\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6290:6470  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1708:1734  uint256 public poolEndTime */\n    tag_73:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1877:1878  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1861:1867  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1907:1908  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1896  _owner */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1909  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1211:1217  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1204:1217  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1385:1449  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_80:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1846:1883  uint256 public runningTime = 370 days */\n    tag_82:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":2916:4192  function add(\r... */\n    tag_85:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3082:3108  checkPoolDuplicate(_token) */\n      tag_202\n        /* \"contracts/distribution/TShareRewardPool.sol\":3101:3107  _token */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":3082:3100  checkPoolDuplicate */\n      tag_203\n        /* \"contracts/distribution/TShareRewardPool.sol\":3082:3108  checkPoolDuplicate(_token) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3123:3134  _withUpdate */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3119:3180  if (_withUpdate) {\r... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3151:3168  massUpdatePools() */\n      tag_205\n        /* \"contracts/distribution/TShareRewardPool.sol\":3151:3166  massUpdatePools */\n      tag_71\n        /* \"contracts/distribution/TShareRewardPool.sol\":3151:3168  massUpdatePools() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3119:3180  if (_withUpdate) {\r... */\n    tag_204:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3212:3225  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3194:3209  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":3194:3225  block.timestamp < poolStartTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":3190:3724  if (block.timestamp < poolStartTime) {\r... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3298:3299  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":3279:3294  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3279:3299  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":3275:3518  if (_lastRewardTime == 0) {\r... */\n      iszero\n      tag_207\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3338:3351  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3320:3351  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3275:3518  if (_lastRewardTime == 0) {\r... */\n      jump(tag_208)\n    tag_207:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3414:3427  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3396:3411  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3396:3427  _lastRewardTime < poolStartTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":3392:3503  if (_lastRewardTime < poolStartTime) {\r... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3470:3483  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3452:3483  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3392:3503  if (_lastRewardTime < poolStartTime) {\r... */\n    tag_209:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3275:3518  if (_lastRewardTime == 0) {\r... */\n    tag_208:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3190:3724  if (block.timestamp < poolStartTime) {\r... */\n      jump(tag_210)\n    tag_206:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3605:3606  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":3586:3601  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3586:3606  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":3586:3643  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n      dup1\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3628:3643  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":3610:3625  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3610:3643  _lastRewardTime < block.timestamp */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":3586:3643  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n    tag_211:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3582:3713  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3682:3697  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":3664:3697  _lastRewardTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3582:3713  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n    tag_212:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3190:3724  if (block.timestamp < poolStartTime) {\r... */\n    tag_210:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3734:3749  bool _isStarted */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":3781:3794  poolStartTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3762:3777  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":3762:3794  _lastRewardTime <= poolStartTime */\n      gt\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":3761:3844  (_lastRewardTime <= poolStartTime) ||\r... */\n      dup1\n      tag_213\n      jumpi\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3828:3843  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":3809:3824  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":3809:3843  _lastRewardTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":3761:3844  (_lastRewardTime <= poolStartTime) ||\r... */\n    tag_213:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3734:3844  bool _isStarted =\r... */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3855:3863  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":3869:4080  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":3901:3907  _token */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":3869:4080  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":3935:3946  _allocPoint */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":3869:4080  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":3978:3993  _lastRewardTime */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":3869:4080  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4026:4027  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":3869:4080  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4054:4064  _isStarted */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":3869:4080  PoolInfo({\r... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3855:4081  poolInfo.push(PoolInfo({\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4096:4106  _isStarted */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4092:4185  if (_isStarted) {\r... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":4141:4173  totalAllocPoint.add(_allocPoint) */\n      tag_216\n        /* \"contracts/distribution/TShareRewardPool.sol\":4161:4172  _allocPoint */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":4141:4156  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4141:4160  totalAllocPoint.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4141:4173  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4123:4138  totalAllocPoint */\n      0x05\n        /* \"contracts/distribution/TShareRewardPool.sol\":4123:4173  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4092:4185  if (_isStarted) {\r... */\n    tag_215:\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2916:4192  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":5435:6207  function pendingShare(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5509:5516  uint256 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5529:5550  PoolInfo storage pool */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5553:5561  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":5562:5566  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":5553:5567  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      invalid\n    tag_218:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":5529:5567  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5578:5599  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5602:5610  userInfo */\n      0x04\n        /* \"contracts/distribution/TShareRewardPool.sol\":5602:5616  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5611:5615  _pid */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":5602:5616  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":5602:5623  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5617:5622  _user */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5602:5623  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":5578:5623  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5634:5657  uint256 accRockPerShare */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5660:5664  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":5660:5680  pool.accRockPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":5634:5680  uint256 accRockPerShare = pool.accRockPerShare */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5691:5710  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5713:5717  pool */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5713:5723  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":5713:5733  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TShareRewardPool.sol\":5742:5746  this */\n      address\n        /* \"contracts/distribution/TShareRewardPool.sol\":5713:5748  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5691:5748  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5781:5785  pool */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5781:5800  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":5763:5778  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":5763:5800  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5763:5820  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5819:5820  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5804:5815  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":5804:5820  tokenSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":5763:5820  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n    tag_224:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5759:6119  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5837:5861  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5864:5920  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_226\n        /* \"contracts/distribution/TShareRewardPool.sol\":5883:5887  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5883:5902  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":5904:5919  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":5864:5882  getGeneratedReward */\n      tag_46\n        /* \"contracts/distribution/TShareRewardPool.sol\":5864:5920  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5837:5920  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5935:5954  uint256 _RockReward */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5957:6015  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_227\n        /* \"contracts/distribution/TShareRewardPool.sol\":5999:6014  totalAllocPoint */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5957:5994  _generatedReward.mul(pool.allocPoint) */\n      tag_228\n        /* \"contracts/distribution/TShareRewardPool.sol\":5978:5982  pool */\n      dup9\n        /* \"contracts/distribution/TShareRewardPool.sol\":5978:5993  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":5957:5973  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5957:5977  _generatedReward.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5957:5994  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5957:5998  _generatedReward.mul(pool.allocPoint).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5957:6015  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5935:6015  uint256 _RockReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6048:6107  accRockPerShare.add(_RockReward.mul(1e18).div(tokenSupply)) */\n      tag_229\n        /* \"contracts/distribution/TShareRewardPool.sol\":6068:6106  _RockReward.mul(1e18).div(tokenSupply) */\n      tag_230\n        /* \"contracts/distribution/TShareRewardPool.sol\":6094:6105  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":6068:6089  _RockReward.mul(1e18) */\n      tag_231\n        /* \"contracts/distribution/TShareRewardPool.sol\":6084:6088  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":6068:6079  _RockReward */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":6068:6083  _RockReward.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6068:6089  _RockReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6068:6093  _RockReward.mul(1e18).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6068:6106  _RockReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6048:6063  accRockPerShare */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":6048:6067  accRockPerShare.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6048:6107  accRockPerShare.add(_RockReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6030:6107  accRockPerShare = accRockPerShare.add(_RockReward.mul(1e18).div(tokenSupply)) */\n      swap4\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5759:6119  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      pop\n      pop\n    tag_225:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6199  user.amount.mul(accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_232\n        /* \"contracts/distribution/TShareRewardPool.sol\":6183:6187  user */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":6183:6198  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6178  user.amount.mul(accRockPerShare).div(1e18) */\n      tag_233\n        /* \"contracts/distribution/TShareRewardPool.sol\":6173:6177  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6168  user.amount.mul(accRockPerShare) */\n      tag_234\n        /* \"contracts/distribution/TShareRewardPool.sol\":6152:6167  accRockPerShare */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6140  user */\n      dup9\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6147  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6151  user.amount.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6168  user.amount.mul(accRockPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6172  user.amount.mul(accRockPerShare).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6178  user.amount.mul(accRockPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6182  user.amount.mul(accRockPerShare).div(1e18).sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6136:6199  user.amount.mul(accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6129:6199  return user.amount.mul(accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5435:6207  function pendingShare(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":7489:8315  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_91:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7555:7570  address _sender */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7573:7583  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":7555:7583  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7594:7615  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7618:7626  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":7627:7631  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7618:7632  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_236\n      jumpi\n      invalid\n    tag_236:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":7594:7632  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7643:7664  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7667:7675  userInfo */\n      0x04\n        /* \"contracts/distribution/TShareRewardPool.sol\":7667:7681  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7676:7680  _pid */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":7667:7681  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":7667:7690  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7682:7689  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7667:7690  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":7643:7690  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7701:7717  updatePool(_pid) */\n      tag_238\n        /* \"contracts/distribution/TShareRewardPool.sol\":7712:7716  _pid */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":7701:7711  updatePool */\n      tag_57\n        /* \"contracts/distribution/TShareRewardPool.sol\":7701:7717  updatePool(_pid) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7746:7747  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7732:7736  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":7732:7743  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7732:7747  user.amount > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":7728:8018  if (user.amount > 0) {\r... */\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":7764:7780  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7851  user.amount.mul(pool.accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_240\n        /* \"contracts/distribution/TShareRewardPool.sol\":7835:7839  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7835:7850  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7830  user.amount.mul(pool.accRockPerShare).div(1e18) */\n      tag_241\n        /* \"contracts/distribution/TShareRewardPool.sol\":7825:7829  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7820  user.amount.mul(pool.accRockPerShare) */\n      tag_242\n        /* \"contracts/distribution/TShareRewardPool.sol\":7799:7803  pool */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":7799:7819  pool.accRockPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7787  user */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7794  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7798  user.amount.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7820  user.amount.mul(pool.accRockPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7824  user.amount.mul(pool.accRockPerShare).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7830  user.amount.mul(pool.accRockPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7834  user.amount.mul(pool.accRockPerShare).div(1e18).sub */\n      tag_106\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7783:7851  user.amount.mul(pool.accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7764:7851  uint256 _pending = user.amount.mul(pool.accRockPerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7881:7882  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7870:7878  _pending */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":7870:7882  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":7866:8007  if (_pending > 0) {\r... */\n      iszero\n      tag_243\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":7903:7938  safeRockTransfer(_sender, _pending) */\n      tag_244\n        /* \"contracts/distribution/TShareRewardPool.sol\":7920:7927  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7929:7937  _pending */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7903:7919  safeRockTransfer */\n      tag_144\n        /* \"contracts/distribution/TShareRewardPool.sol\":7903:7938  safeRockTransfer(_sender, _pending) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7973:7980  _sender */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":7962:7991  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TShareRewardPool.sol\":7982:7990  _pending */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7962:7991  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TShareRewardPool.sol\":7866:8007  if (_pending > 0) {\r... */\n    tag_243:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7728:8018  if (user.amount > 0) {\r... */\n      pop\n    tag_239:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8042:8043  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8032:8039  _amount */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8032:8043  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":8028:8185  if (_amount > 0) {\r... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":8060:8120  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      tag_246\n        /* \"contracts/distribution/TShareRewardPool.sol\":8088:8095  _sender */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8105:8109  this */\n      address\n        /* \"contracts/distribution/TShareRewardPool.sol\":8112:8119  _amount */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":8060:8064  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":8060:8070  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":8060:8087  pool.token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_247\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8060:8120  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8149:8173  user.amount.add(_amount) */\n      tag_248\n        /* \"contracts/distribution/TShareRewardPool.sol\":8165:8172  _amount */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8149:8153  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8149:8160  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8149:8164  user.amount.add */\n      tag_107\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8149:8173  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8135:8139  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8135:8146  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":8135:8173  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8028:8185  if (_amount > 0) {\r... */\n    tag_245:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8213:8260  user.amount.mul(pool.accRockPerShare).div(1e18) */\n      tag_249\n        /* \"contracts/distribution/TShareRewardPool.sol\":8255:8259  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":8213:8250  user.amount.mul(pool.accRockPerShare) */\n      tag_250\n        /* \"contracts/distribution/TShareRewardPool.sol\":8229:8233  pool */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8229:8249  pool.accRockPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8213:8217  user */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8213:8224  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8213:8228  user.amount.mul */\n      tag_115\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8213:8250  user.amount.mul(pool.accRockPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8213:8254  user.amount.mul(pool.accRockPerShare).div */\n      tag_141\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8213:8260  user.amount.mul(pool.accRockPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8195:8199  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8195:8210  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":8195:8260  user.rewardDebt = user.amount.mul(pool.accRockPerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8293:8297  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8284:8291  _sender */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8276:8307  Deposit(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/distribution/TShareRewardPool.sol\":8299:8306  _amount */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":8276:8307  Deposit(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7489:8315  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2173:2174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2161  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2145:2218  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2262:2270  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2254:2260  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2290:2298  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2287  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2298  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3624:3625  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3620  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3625  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      iszero\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3627:3635  return 0 */\n      swap1\n      pop\n      jump(tag_261)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3654  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3662  a * b */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3662  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3689:3690  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3684:3685  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3681  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3685  c / a */\n      dup2\n      tag_263\n      jumpi\n      invalid\n    tag_263:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3745:3746  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3738:3746  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_261:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n    tag_132:\n        /* \"contracts/owner/Operator.sol\":1132:1133  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1108:1120  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/owner/Operator.sol\":1086:1207  require(\r... */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7\n      0x2d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"contracts/owner/Operator.sol\":1255:1267  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1251:1252  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      tag_268\n        /* \"contracts/owner/Operator.sol\":1305:1317  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1279:1304  Ownable.transferOwnership */\n      tag_94\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      jump\t// in\n    tag_268:\n        /* \"contracts/owner/Operator.sol\":1341:1353  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1329:1338  _operator */\n      0x01\n      0x00\n        /* \"contracts/owner/Operator.sol\":1329:1353  _operator = newOperator_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_271\n      jumpi\n      invalid\n    tag_271:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4348:4360  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":9723:10072  function safeRockTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_144:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9799:9815  uint256 _RockBal */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9818:9822  Rock */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":9818:9832  Rock.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TShareRewardPool.sol\":9841:9845  this */\n      address\n        /* \"contracts/distribution/TShareRewardPool.sol\":9818:9847  Rock.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_273:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9799:9847  uint256 _RockBal = Rock.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9873:9874  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9862:9870  _RockBal */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":9862:9874  _RockBal > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":9858:10065  if (_RockBal > 0) {\r... */\n      iszero\n      tag_277\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":9905:9913  _RockBal */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9895:9902  _amount */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9895:9913  _amount > _RockBal */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":9891:10054  if (_amount > _RockBal) {\r... */\n      iszero\n      tag_278\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":9934:9966  Rock.safeTransfer(_to, _RockBal) */\n      tag_279\n        /* \"contracts/distribution/TShareRewardPool.sol\":9952:9955  _to */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":9957:9965  _RockBal */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9934:9938  Rock */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":9934:9951  Rock.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_148\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9934:9966  Rock.safeTransfer(_to, _RockBal) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_279:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9891:10054  if (_amount > _RockBal) {\r... */\n      jump(tag_280)\n    tag_278:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10007:10038  Rock.safeTransfer(_to, _amount) */\n      tag_281\n        /* \"contracts/distribution/TShareRewardPool.sol\":10025:10028  _to */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":10030:10037  _amount */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":10007:10011  Rock */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10007:10024  Rock.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_148\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10007:10038  Rock.safeTransfer(_to, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9891:10054  if (_amount > _RockBal) {\r... */\n    tag_280:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9858:10065  if (_RockBal > 0) {\r... */\n    tag_277:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9723:10072  function safeRockTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":819:824  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":849:872  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":874:876  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":878:883  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":826:884  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:818  _callOptionalReturn */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":2581:2841  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n    tag_203:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2649:2663  uint256 length */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":2666:2674  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":2666:2681  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2649:2681  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2697:2708  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":2692:2834  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_286:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2720:2726  length */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":2714:2717  pid */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":2714:2726  pid < length */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":2692:2834  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_287\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":2781:2787  _token */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":2758:2787  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2758:2766  poolInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":2767:2770  pid */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":2758:2771  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_289\n      jumpi\n      invalid\n    tag_289:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":2758:2777  poolInfo[pid].token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2758:2787  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":2750:2822  require(poolInfo[pid].token != _token, \"RockRewardPool: existing pool?\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x526f636b526577617264506f6f6c3a206578697374696e6720706f6f6c3f0000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2728:2733  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2692:2834  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_286)\n    tag_287:\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2581:2841  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1018:1023  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1048:1075  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1081  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1083:1085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1087:1092  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1025:1093  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1017  _callOptionalReturn */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3422  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3453:3457  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3433:3438  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3452  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_296\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3494  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3528:3529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3518  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3525  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3529  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3648:3658  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3637:3667  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_298\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_298:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3629:3714  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3603:3615  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_301\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3656:3662  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3668  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3670:3671  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3673:3685  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3655  functionCallWithValue */\n      tag_302\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3627:3686  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4722:4734  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4779:4784  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4775  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4784  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4746:4827  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4856:4862  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4855  isContract */\n      tag_306\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4897  require(isContract(target), \"Address: call to non-contract\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4909:4921  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4923:4946  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4961  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4974  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4980  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4981  target.call{value: value}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_308:\n      0x20\n      dup4\n      lt\n      tag_310\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_308)\n    tag_310:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_313\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_312)\n    tag_313:\n      0x60\n      swap2\n      pop\n    tag_312:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4908:4981  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      tag_314\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5015:5022  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5024:5034  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5036:5048  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5014  verifyCallResult */\n      tag_315\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4991:5049  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":787:791  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":990:1002  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1055:1062  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1043:1063  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1035:1063  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1096:1097  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1093  size */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1097  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1082:1097  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7316:7328  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7344:7351  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7374:7384  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7384  return returndata */\n      swap1\n      pop\n      jump(tag_317)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7495  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7502  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7506  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7481:7846  if (returndata.length > 0) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7679:7689  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7673:7690  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7739:7754  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7726:7736  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7724  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7718:7737  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7711:7755  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7628:7773  {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7818:7830  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7811:7831  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_322:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_324\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_322)\n    tag_324:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_325\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_325:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_317:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7 6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb 6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa264697066735822122054115d976e120adbd6e274e2d59342d24c6d4415018a6ca05d0b6ad5c547305064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260006005556606ab00d9a3bc006008556301e7cb006009553480156200002957600080fd5b5060405162002d6238038062002d62833981810160405260408110156200004f57600080fd5b81019080805190602001909291908051906020019092919050505060006200007c620002f060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506200012a620002f060201b60201c565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a38042106200025d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620002d45781600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600681905550600954600654016007819055505050620002f8565b600033905090565b612a5a80620003086000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063570ca735116100de5780638da5cb5b1161009757806396805e541161007157806396805e54146105a5578063cf4b55cb14610609578063e2bbb1581461066b578063f2fde38b146106a357610173565b80638da5cb5b146104ea57806393f1a40b1461051e578063943f013d1461058757610173565b8063570ca735146104325780635f96dc11146104665780636068955714610484578063630b5ba1146104b85780636e271dd5146104c2578063715018a6146104e057610173565b806329605e771161013057806329605e77146102cc578063441a3e70146103105780634456eda21461034857806351eb05a6146103685780635312ea8e1461039657806354575af4146103c457610173565b8063022cbf181461017857806309cf6091146101965780631526fe27146101b457806317caf6f11461022a5780631ab06ee514610248578063231f0c6a14610280575b600080fd5b6101806106e7565b6040518082815260200191505060405180910390f35b61019e6106ed565b6040518082815260200191505060405180910390f35b6101e0600480360360208110156101ca57600080fd5b81019080803590602001909291905050506106fb565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b61023261076b565b6040518082815260200191505060405180910390f35b61027e6004803603604081101561025e57600080fd5b810190808035906020019092919080359060200190929190505050610771565b005b6102b66004803603604081101561029657600080fd5b810190808035906020019092919080359060200190929190505050610895565b6040518082815260200191505060405180910390f35b61030e600480360360208110156102e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a8565b005b6103466004803603604081101561032657600080fd5b810190808035906020019092919080359060200190929190505050610a63565b005b610350610d1b565b60405180821515815260200191505060405180910390f35b6103946004803603602081101561037e57600080fd5b8101908080359060200190929190505050610d7a565b005b6103c2600480360360208110156103ac57600080fd5b8101908080359060200190929190505050610f89565b005b610430600480360360608110156103da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110bd565b005b61043a61136f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61046e611399565b6040518082815260200191505060405180910390f35b61048c61139f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c06113c5565b005b6104ca6113f2565b6040518082815260200191505060405180910390f35b6104e86113f8565b005b6104f2611565565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61056a6004803603604081101561053457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158e565b604051808381526020018281526020019250505060405180910390f35b61058f6115bf565b6040518082815260200191505060405180910390f35b610607600480360360808110156105bb57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190803590602001909291905050506115c5565b005b6106556004803603604081101561061f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117fe565b6040518082815260200191505060405180910390f35b6106a16004803603604081101561068157600080fd5b810190808035906020019092919080359060200190929190505050611a36565b005b6106e5600480360360208110156106b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c84565b005b60085481565b690cb49b44ba602d80000081565b6003818154811061070857fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60055481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610817576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129d76024913960400191505060405180910390fd5b61081f6113c5565b60006003838154811061082e57fe5b906000526020600020906005020190508060040160009054906101000a900460ff161561088757610880826108728360010154600554611e7690919063ffffffff16565b611ef990919063ffffffff16565b6005819055505b818160010181905550505050565b60008183106108a757600090506109a2565b600754821061092d5760075483106108c257600090506109a2565b60065483116108fd576108f66008546108e8600654600754611e7690919063ffffffff16565b611f8190919063ffffffff16565b90506109a2565b61092660085461091885600754611e7690919063ffffffff16565b611f8190919063ffffffff16565b90506109a2565b600654821161093f57600090506109a2565b60065483116109785761097160085461096360065485611e7690919063ffffffff16565b611f8190919063ffffffff16565b90506109a2565b61099f6008546109918585611e7690919063ffffffff16565b611f8190919063ffffffff16565b90505b92915050565b6109b0612007565b73ffffffffffffffffffffffffffffffffffffffff166109ce611565565b73ffffffffffffffffffffffffffffffffffffffff1614610a57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610a608161200f565b50565b6000339050600060038481548110610a7757fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610b55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610b5e85610d7a565b6000610bab8260010154610b9d670de0b6b3a7640000610b8f87600301548760000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b611e7690919063ffffffff16565b90506000811115610c0f57610bc084826121c6565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610c8757610c2f858360000154611e7690919063ffffffff16565b8260000181905550610c8684868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b5b610cbc670de0b6b3a7640000610cae85600301548560000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d5e612007565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060038281548110610d8957fe5b9060005260206000209060050201905080600201544211610daa5750610f86565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e3757600080fd5b505afa158015610e4b573d6000803e3d6000fd5b505050506040513d6020811015610e6157600080fd5b810190808051906020019092919050505090506000811415610e8d574282600201819055505050610f86565b8160040160009054906101000a900460ff16610ee05760018260040160006101000a81548160ff021916908315150217905550610ed98260010154600554611ef990919063ffffffff16565b6005819055505b60006005541115610f7a576000610efb836002015442610895565b90506000610f2a600554610f1c866001015485611f8190919063ffffffff16565b61213d90919063ffffffff16565b9050610f6f610f5c84610f4e670de0b6b3a764000085611f8190919063ffffffff16565b61213d90919063ffffffff16565b8560030154611ef990919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b600060038281548110610f9857fe5b9060005260206000209060050201905060006004600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061106833828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611163576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129d76024913960400191505060405180910390fd5b6276a7006007540142101561133f57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611236576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f526f636b0000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600380549050905060005b8181101561133c5760006003828154811061125a57fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415611330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611243565b50505b61136a81838573ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905060005b818110156113ee576113e381610d7a565b8060010190506113d2565b5050565b60075481565b611400612007565b73ffffffffffffffffffffffffffffffffffffffff1661141e611565565b73ffffffffffffffffffffffffffffffffffffffff16146114a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b60095481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461166b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129d76024913960400191505060405180910390fd5b611674836123e7565b8115611683576116826113c5565b5b6006544210156116b65760008114156116a05760065490506116b1565b6006548110156116b05760065490505b5b6116ce565b60008114806116c457504281105b156116cd574290505b5b6000600654821115806116e15750428211155b905060036040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505080156117f7576117f085600554611ef990919063ffffffff16565b6005819055505b5050505050565b6000806003848154811061180e57fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561190857600080fd5b505afa15801561191c573d6000803e3d6000fd5b505050506040513d602081101561193257600080fd5b81019080805190602001909291905050509050836002015442118015611959575060008114155b156119e357600061196e856002015442610895565b9050600061199d60055461198f886001015485611f8190919063ffffffff16565b61213d90919063ffffffff16565b90506119de6119cf846119c1670de0b6b3a764000085611f8190919063ffffffff16565b61213d90919063ffffffff16565b85611ef990919063ffffffff16565b935050505b611a2a8360010154611a1c670de0b6b3a7640000611a0e868860000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b611e7690919063ffffffff16565b94505050505092915050565b6000339050600060038481548110611a4a57fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611ab785610d7a565b600081600001541115611b77576000611b118260010154611b03670de0b6b3a7640000611af587600301548760000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b611e7690919063ffffffff16565b90506000811115611b7557611b2684826121c6565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000841115611bf157611bd18330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124ec909392919063ffffffff16565b611be8848260000154611ef990919063ffffffff16565b81600001819055505b611c26670de0b6b3a7640000611c1884600301548460000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b8160010181905550848373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040518082815260200191505060405180910390a35050505050565b611c8c612007565b73ffffffffffffffffffffffffffffffffffffffff16611caa611565565b73ffffffffffffffffffffffffffffffffffffffff1614611d33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061293d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115611eee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015611f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611f945760009050612001565b6000828402905082848281611fa557fe5b0414611ffc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806129b66021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612989602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36120f981611c84565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082116121b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816121bd57fe5b04905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561225157600080fd5b505afa158015612265573d6000803e3d6000fd5b505050506040513d602081101561227b57600080fd5b81019080805190602001909291905050509050600081111561234057808211156122f1576122ec8382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b61233f565b61233e8383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b5b5b505050565b6123e28363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506125ad565b505050565b6000600380549050905060005b818110156124e7578273ffffffffffffffffffffffffffffffffffffffff166003828154811061242057fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156124dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f526f636b526577617264506f6f6c3a206578697374696e6720706f6f6c3f000081525060200191505060405180910390fd5b8060010190506123f4565b505050565b6125a7846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506125ad565b50505050565b606061260f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661269c9092919063ffffffff16565b90506000815111156126975780806020019051602081101561263057600080fd5b8101908080519060200190929190505050612696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806129fb602a913960400191505060405180910390fd5b5b505050565b60606126ab84846000856126b4565b90509392505050565b60608247101561270f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806129636026913960400191505060405180910390fd5b6127188561285d565b61278a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106127da57805182526020820191506020810190506020830392506127b7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461283c576040519150601f19603f3d011682016040523d82523d6000602084013e612841565b606091505b5091509150612851828286612870565b92505050949350505050565b600080823b905060008111915050919050565b6060831561288057829050612935565b6000835111156128935782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128fa5780820151818401526020810190506128df565b50505050905090810190601f1680156129275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122054115d976e120adbd6e274e2d59342d24c6d4415018a6ca05d0b6ad5c547305064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH7 0x6AB00D9A3BC00 PUSH1 0x8 SSTORE PUSH4 0x1E7CB00 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2D62 CODESIZE SUB DUP1 PUSH3 0x2D62 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH3 0x7C PUSH3 0x2F0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x12A PUSH3 0x2F0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 TIMESTAMP LT PUSH3 0x25D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x2D4 JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD PUSH1 0x6 SLOAD ADD PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x2F8 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2A5A DUP1 PUSH3 0x308 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x96805E54 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xCF4B55CB EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6A3 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x587 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x570CA735 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x60689557 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E0 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x29605E77 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x3C4 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x22CBF18 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x280 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x771 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43A PUSH2 0x136F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C0 PUSH2 0x13C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CA PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH2 0x13F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F2 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x655 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C84 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH10 0xCB49B44BA602D800000 DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x708 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81F PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x82E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x887 JUMPI PUSH2 0x880 DUP3 PUSH2 0x872 DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x8A7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 LT PUSH2 0x92D JUMPI PUSH1 0x7 SLOAD DUP4 LT PUSH2 0x8C2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 GT PUSH2 0x8FD JUMPI PUSH2 0x8F6 PUSH1 0x8 SLOAD PUSH2 0x8E8 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x926 PUSH1 0x8 SLOAD PUSH2 0x918 DUP6 PUSH1 0x7 SLOAD PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 GT PUSH2 0x93F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 GT PUSH2 0x978 JUMPI PUSH2 0x971 PUSH1 0x8 SLOAD PUSH2 0x963 PUSH1 0x6 SLOAD DUP6 PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x99F PUSH1 0x8 SLOAD PUSH2 0x991 DUP6 DUP6 PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0x2007 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9CE PUSH2 0x1565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA60 DUP2 PUSH2 0x200F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA77 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5E DUP6 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAB DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xB9D PUSH8 0xDE0B6B3A7640000 PUSH2 0xB8F DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xC0F JUMPI PUSH2 0xBC0 DUP5 DUP3 PUSH2 0x21C6 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xC87 JUMPI PUSH2 0xC2F DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xC86 DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xCBC PUSH8 0xDE0B6B3A7640000 PUSH2 0xCAE DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5E PUSH2 0x2007 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD89 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xDAA JUMPI POP PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xE8D JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xF86 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEE0 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xED9 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 PUSH2 0xEFB DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x895 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF2A PUSH1 0x5 SLOAD PUSH2 0xF1C DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xF6F PUSH2 0xF5C DUP5 PUSH2 0xF4E PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF98 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1068 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x7 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x133F JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526F636B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x133C JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x125A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1243 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x136A DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13E3 DUP2 PUSH2 0xD7A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x13D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1400 PUSH2 0x2007 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x141E PUSH2 0x1565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x166B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1674 DUP4 PUSH2 0x23E7 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x13C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x16A0 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x16B0 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x16C4 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x16CD JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x16E1 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x17F7 JUMPI PUSH2 0x17F0 DUP6 PUSH1 0x5 SLOAD PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x180E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x191C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1959 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x0 PUSH2 0x196E DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x895 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x199D PUSH1 0x5 SLOAD PUSH2 0x198F DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x19DE PUSH2 0x19CF DUP5 PUSH2 0x19C1 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x1A2A DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x1A1C PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A0E DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A4A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1AB7 DUP6 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 PUSH2 0x1B11 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1B03 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AF5 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B26 DUP5 DUP3 PUSH2 0x21C6 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BD1 DUP4 ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24EC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BE8 DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1C26 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C18 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C8C PUSH2 0x2007 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CAA PUSH2 0x1565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x293D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1EEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1F77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1F94 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2001 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1FA5 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1FFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29B6 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2095 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2989 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x20F9 DUP2 PUSH2 0x1C84 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x21B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x21BD JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x227B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2340 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x22F1 JUMPI PUSH2 0x22EC DUP4 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST PUSH2 0x233E DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x23E2 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x25AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24E7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2420 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526F636B526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x23F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x25A7 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x25AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x260F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x269C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2697 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2696 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29FB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x26AB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x26B4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x270F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2963 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2718 DUP6 PUSH2 0x285D JUMP JUMPDEST PUSH2 0x278A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x27DA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x27B7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x283C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2841 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2851 DUP3 DUP3 DUP7 PUSH2 0x2870 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2880 JUMPI DUP3 SWAP1 POP PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2893 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28FA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28DF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2927 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A264697066735822122054115D97 PUSH15 0x120ADBD6E274E2D59342D24C6D4415 ADD DUP11 PUSH13 0xA05D0B6AD5C547305064736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "462:10227:6:-:0;;;1579:1;1546:34;;1774:16;1743:47;;1875:8;1846:37;;2273:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:17:0;958:12;:10;;;:12;;:::i;:::-;938:32;;989:9;980:6;;:18;;;;;;;;;;;;;;;;;;1046:9;1013:43;;1042:1;1013:43;;;;;;;;;;;;904:159;435:12:7;:10;;;:12;;:::i;:::-;423:9;;:24;;;;;;;;;;;;;;;;;;495:9;;;;;;;;;;;463:42;;491:1;463:42;;;;;;;;;;;;2393:14:6;2375:15;:32;2367:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:1;2431:19;;:5;:19;;;2427:45;;2466:5;2452:4;;:20;;;;;;;;;;;;;;;;;;2427:45;2499:14;2483:13;:30;;;;2554:11;;2538:13;;:27;2524:11;:41;;;;2273:300;;462:10227;;596:96:4;649:7;675:10;668:17;;596:96;:::o;462:10227:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c8063570ca735116100de5780638da5cb5b1161009757806396805e541161007157806396805e54146105a5578063cf4b55cb14610609578063e2bbb1581461066b578063f2fde38b146106a357610173565b80638da5cb5b146104ea57806393f1a40b1461051e578063943f013d1461058757610173565b8063570ca735146104325780635f96dc11146104665780636068955714610484578063630b5ba1146104b85780636e271dd5146104c2578063715018a6146104e057610173565b806329605e771161013057806329605e77146102cc578063441a3e70146103105780634456eda21461034857806351eb05a6146103685780635312ea8e1461039657806354575af4146103c457610173565b8063022cbf181461017857806309cf6091146101965780631526fe27146101b457806317caf6f11461022a5780631ab06ee514610248578063231f0c6a14610280575b600080fd5b6101806106e7565b6040518082815260200191505060405180910390f35b61019e6106ed565b6040518082815260200191505060405180910390f35b6101e0600480360360208110156101ca57600080fd5b81019080803590602001909291905050506106fb565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b61023261076b565b6040518082815260200191505060405180910390f35b61027e6004803603604081101561025e57600080fd5b810190808035906020019092919080359060200190929190505050610771565b005b6102b66004803603604081101561029657600080fd5b810190808035906020019092919080359060200190929190505050610895565b6040518082815260200191505060405180910390f35b61030e600480360360208110156102e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a8565b005b6103466004803603604081101561032657600080fd5b810190808035906020019092919080359060200190929190505050610a63565b005b610350610d1b565b60405180821515815260200191505060405180910390f35b6103946004803603602081101561037e57600080fd5b8101908080359060200190929190505050610d7a565b005b6103c2600480360360208110156103ac57600080fd5b8101908080359060200190929190505050610f89565b005b610430600480360360608110156103da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110bd565b005b61043a61136f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61046e611399565b6040518082815260200191505060405180910390f35b61048c61139f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c06113c5565b005b6104ca6113f2565b6040518082815260200191505060405180910390f35b6104e86113f8565b005b6104f2611565565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61056a6004803603604081101561053457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158e565b604051808381526020018281526020019250505060405180910390f35b61058f6115bf565b6040518082815260200191505060405180910390f35b610607600480360360808110156105bb57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190803590602001909291905050506115c5565b005b6106556004803603604081101561061f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117fe565b6040518082815260200191505060405180910390f35b6106a16004803603604081101561068157600080fd5b810190808035906020019092919080359060200190929190505050611a36565b005b6106e5600480360360208110156106b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c84565b005b60085481565b690cb49b44ba602d80000081565b6003818154811061070857fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60055481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610817576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129d76024913960400191505060405180910390fd5b61081f6113c5565b60006003838154811061082e57fe5b906000526020600020906005020190508060040160009054906101000a900460ff161561088757610880826108728360010154600554611e7690919063ffffffff16565b611ef990919063ffffffff16565b6005819055505b818160010181905550505050565b60008183106108a757600090506109a2565b600754821061092d5760075483106108c257600090506109a2565b60065483116108fd576108f66008546108e8600654600754611e7690919063ffffffff16565b611f8190919063ffffffff16565b90506109a2565b61092660085461091885600754611e7690919063ffffffff16565b611f8190919063ffffffff16565b90506109a2565b600654821161093f57600090506109a2565b60065483116109785761097160085461096360065485611e7690919063ffffffff16565b611f8190919063ffffffff16565b90506109a2565b61099f6008546109918585611e7690919063ffffffff16565b611f8190919063ffffffff16565b90505b92915050565b6109b0612007565b73ffffffffffffffffffffffffffffffffffffffff166109ce611565565b73ffffffffffffffffffffffffffffffffffffffff1614610a57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610a608161200f565b50565b6000339050600060038481548110610a7757fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610b55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610b5e85610d7a565b6000610bab8260010154610b9d670de0b6b3a7640000610b8f87600301548760000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b611e7690919063ffffffff16565b90506000811115610c0f57610bc084826121c6565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610c8757610c2f858360000154611e7690919063ffffffff16565b8260000181905550610c8684868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b5b610cbc670de0b6b3a7640000610cae85600301548560000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d5e612007565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060038281548110610d8957fe5b9060005260206000209060050201905080600201544211610daa5750610f86565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e3757600080fd5b505afa158015610e4b573d6000803e3d6000fd5b505050506040513d6020811015610e6157600080fd5b810190808051906020019092919050505090506000811415610e8d574282600201819055505050610f86565b8160040160009054906101000a900460ff16610ee05760018260040160006101000a81548160ff021916908315150217905550610ed98260010154600554611ef990919063ffffffff16565b6005819055505b60006005541115610f7a576000610efb836002015442610895565b90506000610f2a600554610f1c866001015485611f8190919063ffffffff16565b61213d90919063ffffffff16565b9050610f6f610f5c84610f4e670de0b6b3a764000085611f8190919063ffffffff16565b61213d90919063ffffffff16565b8560030154611ef990919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b600060038281548110610f9857fe5b9060005260206000209060050201905060006004600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061106833828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611163576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129d76024913960400191505060405180910390fd5b6276a7006007540142101561133f57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611236576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f526f636b0000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600380549050905060005b8181101561133c5760006003828154811061125a57fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415611330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611243565b50505b61136a81838573ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905060005b818110156113ee576113e381610d7a565b8060010190506113d2565b5050565b60075481565b611400612007565b73ffffffffffffffffffffffffffffffffffffffff1661141e611565565b73ffffffffffffffffffffffffffffffffffffffff16146114a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b60095481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461166b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129d76024913960400191505060405180910390fd5b611674836123e7565b8115611683576116826113c5565b5b6006544210156116b65760008114156116a05760065490506116b1565b6006548110156116b05760065490505b5b6116ce565b60008114806116c457504281105b156116cd574290505b5b6000600654821115806116e15750428211155b905060036040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505080156117f7576117f085600554611ef990919063ffffffff16565b6005819055505b5050505050565b6000806003848154811061180e57fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561190857600080fd5b505afa15801561191c573d6000803e3d6000fd5b505050506040513d602081101561193257600080fd5b81019080805190602001909291905050509050836002015442118015611959575060008114155b156119e357600061196e856002015442610895565b9050600061199d60055461198f886001015485611f8190919063ffffffff16565b61213d90919063ffffffff16565b90506119de6119cf846119c1670de0b6b3a764000085611f8190919063ffffffff16565b61213d90919063ffffffff16565b85611ef990919063ffffffff16565b935050505b611a2a8360010154611a1c670de0b6b3a7640000611a0e868860000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b611e7690919063ffffffff16565b94505050505092915050565b6000339050600060038481548110611a4a57fe5b9060005260206000209060050201905060006004600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611ab785610d7a565b600081600001541115611b77576000611b118260010154611b03670de0b6b3a7640000611af587600301548760000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b611e7690919063ffffffff16565b90506000811115611b7557611b2684826121c6565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000841115611bf157611bd18330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124ec909392919063ffffffff16565b611be8848260000154611ef990919063ffffffff16565b81600001819055505b611c26670de0b6b3a7640000611c1884600301548460000154611f8190919063ffffffff16565b61213d90919063ffffffff16565b8160010181905550848373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040518082815260200191505060405180910390a35050505050565b611c8c612007565b73ffffffffffffffffffffffffffffffffffffffff16611caa611565565b73ffffffffffffffffffffffffffffffffffffffff1614611d33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061293d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115611eee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015611f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611f945760009050612001565b6000828402905082848281611fa557fe5b0414611ffc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806129b66021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612989602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36120f981611c84565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082116121b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816121bd57fe5b04905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561225157600080fd5b505afa158015612265573d6000803e3d6000fd5b505050506040513d602081101561227b57600080fd5b81019080805190602001909291905050509050600081111561234057808211156122f1576122ec8382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b61233f565b61233e8383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123459092919063ffffffff16565b5b5b505050565b6123e28363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506125ad565b505050565b6000600380549050905060005b818110156124e7578273ffffffffffffffffffffffffffffffffffffffff166003828154811061242057fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156124dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f526f636b526577617264506f6f6c3a206578697374696e6720706f6f6c3f000081525060200191505060405180910390fd5b8060010190506123f4565b505050565b6125a7846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506125ad565b50505050565b606061260f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661269c9092919063ffffffff16565b90506000815111156126975780806020019051602081101561263057600080fd5b8101908080519060200190929190505050612696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806129fb602a913960400191505060405180910390fd5b5b505050565b60606126ab84846000856126b4565b90509392505050565b60608247101561270f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806129636026913960400191505060405180910390fd5b6127188561285d565b61278a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106127da57805182526020820191506020810190506020830392506127b7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461283c576040519150601f19603f3d011682016040523d82523d6000602084013e612841565b606091505b5091509150612851828286612870565b92505050949350505050565b600080823b905060008111915050919050565b6060831561288057829050612935565b6000835111156128935782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128fa5780820151818401526020810190506128df565b50505050905090810190601f1680156129275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122054115d976e120adbd6e274e2d59342d24c6d4415018a6ca05d0b6ad5c547305064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x96805E54 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xCF4B55CB EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6A3 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x587 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x570CA735 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x60689557 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E0 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x29605E77 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x3C4 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x22CBF18 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x280 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x771 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43A PUSH2 0x136F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C0 PUSH2 0x13C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CA PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH2 0x13F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F2 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x655 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C84 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH10 0xCB49B44BA602D800000 DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x708 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81F PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x82E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x887 JUMPI PUSH2 0x880 DUP3 PUSH2 0x872 DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x8A7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 LT PUSH2 0x92D JUMPI PUSH1 0x7 SLOAD DUP4 LT PUSH2 0x8C2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 GT PUSH2 0x8FD JUMPI PUSH2 0x8F6 PUSH1 0x8 SLOAD PUSH2 0x8E8 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x926 PUSH1 0x8 SLOAD PUSH2 0x918 DUP6 PUSH1 0x7 SLOAD PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 GT PUSH2 0x93F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 GT PUSH2 0x978 JUMPI PUSH2 0x971 PUSH1 0x8 SLOAD PUSH2 0x963 PUSH1 0x6 SLOAD DUP6 PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x99F PUSH1 0x8 SLOAD PUSH2 0x991 DUP6 DUP6 PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0x2007 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9CE PUSH2 0x1565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA60 DUP2 PUSH2 0x200F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA77 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5E DUP6 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAB DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xB9D PUSH8 0xDE0B6B3A7640000 PUSH2 0xB8F DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xC0F JUMPI PUSH2 0xBC0 DUP5 DUP3 PUSH2 0x21C6 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xC87 JUMPI PUSH2 0xC2F DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xC86 DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xCBC PUSH8 0xDE0B6B3A7640000 PUSH2 0xCAE DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5E PUSH2 0x2007 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD89 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xDAA JUMPI POP PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xE8D JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xF86 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEE0 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xED9 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 PUSH2 0xEFB DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x895 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF2A PUSH1 0x5 SLOAD PUSH2 0xF1C DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xF6F PUSH2 0xF5C DUP5 PUSH2 0xF4E PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF98 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1068 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x7 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x133F JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526F636B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x133C JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x125A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1243 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x136A DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13E3 DUP2 PUSH2 0xD7A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x13D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1400 PUSH2 0x2007 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x141E PUSH2 0x1565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x166B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1674 DUP4 PUSH2 0x23E7 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x13C5 JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x16A0 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x16B0 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x16C4 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x16CD JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x16E1 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x17F7 JUMPI PUSH2 0x17F0 DUP6 PUSH1 0x5 SLOAD PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x180E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x191C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1959 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x0 PUSH2 0x196E DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x895 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x199D PUSH1 0x5 SLOAD PUSH2 0x198F DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x19DE PUSH2 0x19CF DUP5 PUSH2 0x19C1 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x1A2A DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x1A1C PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A0E DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A4A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1AB7 DUP6 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 PUSH2 0x1B11 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1B03 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AF5 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B26 DUP5 DUP3 PUSH2 0x21C6 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BD1 DUP4 ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24EC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BE8 DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x1EF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1C26 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C18 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1F81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x213D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C8C PUSH2 0x2007 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CAA PUSH2 0x1565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x293D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1EEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1F77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1F94 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2001 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1FA5 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1FFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29B6 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2095 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2989 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x20F9 DUP2 PUSH2 0x1C84 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x21B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x21BD JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x227B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2340 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x22F1 JUMPI PUSH2 0x22EC DUP4 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST PUSH2 0x233E DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2345 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x23E2 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x25AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24E7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2420 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526F636B526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x23F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x25A7 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x25AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x260F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x269C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2697 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2696 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29FB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x26AB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x26B4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x270F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2963 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2718 DUP6 PUSH2 0x285D JUMP JUMPDEST PUSH2 0x278A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x27DA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x27B7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x283C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2841 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2851 DUP3 DUP3 DUP7 PUSH2 0x2870 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2880 JUMPI DUP3 SWAP1 POP PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2893 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28FA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28DF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2927 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A264697066735822122054115D97 PUSH15 0x120ADBD6E274E2D59342D24C6D4415 ADD DUP11 PUSH13 0xA05D0B6AD5C547305064736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "462:10227:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1902:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1301:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4288:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4718:653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;894:115:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8351:810:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;786:100:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6546:908:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9232:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10082:604;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;521:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1631:28:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1247:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6290:180;;;:::i;:::-;;1708:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1771:145:0;;;:::i;:::-;;1139:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1385:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1846:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2916:1276;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5435:772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7489:826;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2065:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1743:47:6;;;;:::o;1902:51::-;1942:11;1902:51;:::o;1301:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1546:34::-;;;;:::o;4288:353::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4367:17:6::1;:15;:17::i;:::-;4395:21;4419:8;4428:4;4419:14;;;;;;;;;;;;;;;;;;4395:38;;4448:4;:14;;;;;;;;;;;;4444:150;;;4497:85;4556:11;4497:36;4517:4;:15;;;4497;;:19;;:36;;;;:::i;:::-;:40;;:85;;;;:::i;:::-;4479:15;:103;;;;4444:150;4622:11;4604:4;:15;;:29;;;;769:1:7;4288:353:6::0;;:::o;4718:653::-;4803:7;4840;4827:9;:20;4823:34;;4856:1;4849:8;;;;4823:34;4883:11;;4872:7;:22;4868:496;;4928:11;;4915:9;:24;4911:38;;4948:1;4941:8;;;;4911:38;4981:13;;4968:9;:26;4964:88;;5003:49;5038:13;;5003:30;5019:13;;5003:11;;:15;;:30;;;;:::i;:::-;:34;;:49;;;;:::i;:::-;4996:56;;;;4964:88;5074:45;5105:13;;5074:26;5090:9;5074:11;;:15;;:26;;;;:::i;:::-;:30;;:45;;;;:::i;:::-;5067:52;;;;4868:496;5167:13;;5156:7;:24;5152:38;;5189:1;5182:8;;;;5152:38;5222:13;;5209:9;:26;5205:84;;5244:45;5275:13;;5244:26;5256:13;;5244:7;:11;;:26;;;;:::i;:::-;:30;;:45;;;;:::i;:::-;5237:52;;;;5205:84;5311:41;5338:13;;5311:22;5323:9;5311:7;:11;;:22;;;;:::i;:::-;:26;;:41;;;;:::i;:::-;5304:48;;4718:653;;;;;:::o;894:115:7:-;1362:12:0;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;970:31:7::1;988:12;970:17;:31::i;:::-;894:115:::0;:::o;8351:810:6:-;8418:15;8436:10;8418:28;;8457:21;8481:8;8490:4;8481:14;;;;;;;;;;;;;;;;;;8457:38;;8506:21;8530:8;:14;8539:4;8530:14;;;;;;;;;;;:23;8545:7;8530:23;;;;;;;;;;;;;;;8506:47;;8587:7;8572:4;:11;;;:22;;8564:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8628:16;8639:4;8628:10;:16::i;:::-;8655;8674:68;8726:4;:15;;;8674:47;8716:4;8674:37;8690:4;:20;;;8674:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;:51;;:68;;;;:::i;:::-;8655:87;;8768:1;8757:8;:12;8753:129;;;8786:35;8803:7;8812:8;8786:16;:35::i;:::-;8852:7;8841:29;;;8861:8;8841:29;;;;;;;;;;;;;;;;;;8753:129;8906:1;8896:7;:11;8892:138;;;8938:24;8954:7;8938:4;:11;;;:15;;:24;;;;:::i;:::-;8924:4;:11;;:38;;;;8977:41;9001:7;9010;8977:4;:10;;;;;;;;;;;;:23;;;;:41;;;;;:::i;:::-;8892:138;9058:47;9100:4;9058:37;9074:4;:20;;;9058:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;9040:4;:15;;:65;;;;9139:4;9130:7;9121:32;;;9145:7;9121:32;;;;;;;;;;;;;;;;;;8351:810;;;;;;:::o;786:100:7:-;829:4;869:9;;;;;;;;;;;853:25;;:12;:10;:12::i;:::-;:25;;;846:32;;786:100;:::o;6546:908:6:-;6598:21;6622:8;6631:4;6622:14;;;;;;;;;;;;;;;;;;6598:38;;6670:4;:19;;;6651:15;:38;6647:77;;6706:7;;;6647:77;6734:19;6756:4;:10;;;;;;;;;;;;:20;;;6785:4;6756:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6734:57;;6821:1;6806:11;:16;6802:107;;;6861:15;6839:4;:19;;:37;;;;6891:7;;;;6802:107;6924:4;:14;;;;;;;;;;;;6919:138;;6972:4;6955;:14;;;:21;;;;;;;;;;;;;;;;;;7009:36;7029:4;:15;;;7009;;:19;;:36;;;;:::i;:::-;6991:15;:54;;;;6919:138;7089:1;7071:15;;:19;7067:332;;;7107:24;7134:56;7153:4;:19;;;7174:15;7134:18;:56::i;:::-;7107:83;;7205:19;7227:58;7269:15;;7227:37;7248:4;:15;;;7227:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;7205:80;;7323:64;7348:38;7374:11;7348:21;7364:4;7348:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;7323:4;:20;;;:24;;:64;;;;:::i;:::-;7300:4;:20;;:87;;;;7067:332;;;7431:15;7409:4;:19;;:37;;;;6546:908;;;;:::o;9232:377::-;9291:21;9315:8;9324:4;9315:14;;;;;;;;;;;;;;;;;;9291:38;;9340:21;9364:8;:14;9373:4;9364:14;;;;;;;;;;;:26;9379:10;9364:26;;;;;;;;;;;;;;;9340:50;;9401:15;9419:4;:11;;;9401:29;;9455:1;9441:4;:11;;:15;;;;9485:1;9467:4;:15;;:19;;;;9497:44;9521:10;9533:7;9497:4;:10;;;;;;;;;;;;:23;;;;:44;;;;;:::i;:::-;9587:4;9575:10;9557:44;;;9593:7;9557:44;;;;;;;;;;;;;;;;;;9232:377;;;;:::o;10082:604::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10232:7:6::1;10218:11;;:21;10200:15;:39;10196:441;;;10374:4;;;;;;;;;;;10364:14;;:6;:14;;;;10356:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;10402:14;10419:8;:15;;;;10402:32;;10454:11;10449:177;10477:6;10471:3;:12;10449:177;;;10511:21;10535:8;10544:3;10535:13;;;;;;;;;;;;;;;;;;10511:37;;10585:4;:10;;;;;;;;;;;;10575:20;;:6;:20;;;;10567:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;10449:177;10485:5;;;;;10449:177;;;;10196:441;;10647:31;10667:2;10671:6;10647;:19;;;;:31;;;;;:::i;:::-;10082:604:::0;;;:::o;521:85:7:-;562:7;589:9;;;;;;;;;;;582:16;;521:85;:::o;1631:28:6:-;;;;:::o;1247:18::-;;;;;;;;;;;;;:::o;6290:180::-;6335:14;6352:8;:15;;;;6335:32;;6383:11;6378:85;6406:6;6400:3;:12;6378:85;;;6436:15;6447:3;6436:10;:15::i;:::-;6414:5;;;;;6378:85;;;;6290:180;:::o;1708:26::-;;;;:::o;1771:145:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:1:::1;1840:40;;1861:6;::::0;::::1;;;;;;;;1840:40;;;;;;;;;;;;1907:1;1890:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1771:145::o:0;1139:85::-;1185:7;1211:6;;;;;;;;;;;1204:13;;1139:85;:::o;1385:64:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1846:37::-;;;;:::o;2916:1276::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3082:26:6::1;3101:6;3082:18;:26::i;:::-;3123:11;3119:61;;;3151:17;:15;:17::i;:::-;3119:61;3212:13;;3194:15;:31;3190:534;;;3298:1;3279:15;:20;3275:243;;;3338:13;;3320:31;;3275:243;;;3414:13;;3396:15;:31;3392:111;;;3470:13;;3452:31;;3392:111;3275:243;3190:534;;;3605:1;3586:15;:20;:57;;;;3628:15;3610;:33;3586:57;3582:131;;;3682:15;3664:33;;3582:131;3190:534;3734:15;3781:13;;3762:15;:32;;3761:83;;;;3828:15;3809;:34;;3761:83;3734:110;;3855:8;3869:211;;;;;;;;3901:6;3869:211;;;;;;3935:11;3869:211;;;;3978:15;3869:211;;;;4026:1;3869:211;;;;4054:10;3869:211;;;;::::0;3855:226:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4096:10;4092:93;;;4141:32;4161:11;4141:15;;:19;;:32;;;;:::i;:::-;4123:15;:50;;;;4092:93;769:1:7;2916:1276:6::0;;;;:::o;5435:772::-;5509:7;5529:21;5553:8;5562:4;5553:14;;;;;;;;;;;;;;;;;;5529:38;;5578:21;5602:8;:14;5611:4;5602:14;;;;;;;;;;;:21;5617:5;5602:21;;;;;;;;;;;;;;;5578:45;;5634:23;5660:4;:20;;;5634:46;;5691:19;5713:4;:10;;;;;;;;;;;;:20;;;5742:4;5713:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5691:57;;5781:4;:19;;;5763:15;:37;:57;;;;;5819:1;5804:11;:16;;5763:57;5759:360;;;5837:24;5864:56;5883:4;:19;;;5904:15;5864:18;:56::i;:::-;5837:83;;5935:19;5957:58;5999:15;;5957:37;5978:4;:15;;;5957:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;5935:80;;6048:59;6068:38;6094:11;6068:21;6084:4;6068:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;6048:15;:19;;:59;;;;:::i;:::-;6030:77;;5759:360;;;6136:63;6183:4;:15;;;6136:42;6173:4;6136:32;6152:15;6136:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;:46;;:63;;;;:::i;:::-;6129:70;;;;;;5435:772;;;;:::o;7489:826::-;7555:15;7573:10;7555:28;;7594:21;7618:8;7627:4;7618:14;;;;;;;;;;;;;;;;;;7594:38;;7643:21;7667:8;:14;7676:4;7667:14;;;;;;;;;;;:23;7682:7;7667:23;;;;;;;;;;;;;;;7643:47;;7701:16;7712:4;7701:10;:16::i;:::-;7746:1;7732:4;:11;;;:15;7728:290;;;7764:16;7783:68;7835:4;:15;;;7783:47;7825:4;7783:37;7799:4;:20;;;7783:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;:51;;:68;;;;:::i;:::-;7764:87;;7881:1;7870:8;:12;7866:141;;;7903:35;7920:7;7929:8;7903:16;:35::i;:::-;7973:7;7962:29;;;7982:8;7962:29;;;;;;;;;;;;;;;;;;7866:141;7728:290;;8042:1;8032:7;:11;8028:157;;;8060:60;8088:7;8105:4;8112:7;8060:4;:10;;;;;;;;;;;;:27;;;;:60;;;;;;:::i;:::-;8149:24;8165:7;8149:4;:11;;;:15;;:24;;;;:::i;:::-;8135:4;:11;;:38;;;;8028:157;8213:47;8255:4;8213:37;8229:4;:20;;;8213:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;8195:4;:15;;:65;;;;8293:4;8284:7;8276:31;;;8299:7;8276:31;;;;;;;;;;;;;;;;;;7489:826;;;;;:::o;2065:240:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:1:::1;2153:22;;:8;:22;;;;2145:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:8;2233:38;;2254:6;::::0;::::1;;;;;;;;2233:38;;;;;;;;;;;;2290:8;2281:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2065:240:::0;:::o;3136:155:5:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3538:215::-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;596:96:4:-;649:7;675:10;668:17;;596:96;:::o;1017:344:7:-;1132:1;1108:26;;:12;:26;;;;1086:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:12;1223:45;;1251:1;1223:45;;;;;;;;;;;;1279:39;1305:12;1279:25;:39::i;:::-;1341:12;1329:9;;:24;;;;;;;;;;;;;;;;;;1017:344;:::o;4217:150:5:-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;9723:349:6:-;9799:16;9818:4;;;;;;;;;;;:14;;;9841:4;9818:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9799:48;;9873:1;9862:8;:12;9858:207;;;9905:8;9895:7;:18;9891:163;;;9934:32;9952:3;9957:8;9934:4;;;;;;;;;;;:17;;;;:32;;;;;:::i;:::-;9891:163;;;10007:31;10025:3;10030:7;10007:4;;;;;;;;;;;:17;;;;:31;;;;;:::i;:::-;9891:163;9858:207;9723:349;;;:::o;717:175:2:-;799:86;819:5;849:23;;;874:2;878:5;826:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:19;:86::i;:::-;717:175;;;:::o;2581:260:6:-;2649:14;2666:8;:15;;;;2649:32;;2697:11;2692:142;2720:6;2714:3;:12;2692:142;;;2781:6;2758:29;;:8;2767:3;2758:13;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:29;;;;2750:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2728:5;;;;;2692:142;;;;2581:260;;:::o;898:203:2:-;998:96;1018:5;1048:27;;;1077:4;1083:2;1087:5;1025:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;998:19;:96::i;:::-;898:203;;;;:::o;2980:751::-;3399:23;3425:69;3453:4;3425:69;;;;;;;;;;;;;;;;;3433:5;3425:27;;;;:69;;;;;:::i;:::-;3399:95;;3528:1;3508:10;:17;:21;3504:221;;;3648:10;3637:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3629:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3504:221;2980:751;;;:::o;3470:223:3:-;3603:12;3634:52;3656:6;3664:4;3670:1;3673:12;3634:21;:52::i;:::-;3627:59;;3470:223;;;;;:::o;4557:499::-;4722:12;4779:5;4754:21;:30;;4746:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:18;4856:6;4845:10;:18::i;:::-;4837:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:12;4923:23;4950:6;:11;;4969:5;4976:4;4950:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4908:73;;;;4998:51;5015:7;5024:10;5036:12;4998:16;:51::i;:::-;4991:58;;;;4557:499;;;;;;:::o;727:377::-;787:4;990:12;1055:7;1043:20;1035:28;;1096:1;1089:4;:8;1082:15;;;727:377;;;:::o;7170:692::-;7316:12;7344:7;7340:516;;;7374:10;7367:17;;;;7340:516;7505:1;7485:10;:17;:21;7481:365;;;7679:10;7673:17;7739:15;7726:10;7722:2;7718:19;7711:44;7628:145;7818:12;7811:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:692;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2168400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Rock()": "1114",
								"RockPerSecond()": "1029",
								"TOTAL_REWARDS()": "251",
								"add(uint256,address,bool,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getGeneratedReward(uint256,uint256)": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"isOperator()": "1174",
								"massUpdatePools()": "infinite",
								"operator()": "1078",
								"owner()": "1100",
								"pendingShare(uint256,address)": "infinite",
								"poolEndTime()": "1116",
								"poolInfo(uint256)": "5485",
								"poolStartTime()": "1050",
								"renounceOwnership()": "24462",
								"runningTime()": "1094",
								"set(uint256,uint256)": "infinite",
								"totalAllocPoint()": "1095",
								"transferOperator(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "2174",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkPoolDuplicate(contract IERC20)": "infinite",
								"safeRockTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 462,
									"end": 10689,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1546,
									"end": 1580,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1546,
									"end": 1580,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1774,
									"end": 1790,
									"name": "PUSH",
									"source": 6,
									"value": "6AB00D9A3BC00"
								},
								{
									"begin": 1743,
									"end": 1790,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1743,
									"end": 1790,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1875,
									"end": 1883,
									"name": "PUSH",
									"source": 6,
									"value": "1E7CB00"
								},
								{
									"begin": 1846,
									"end": 1883,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1846,
									"end": 1883,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 938,
									"end": 955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 989,
									"end": 998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 904,
									"end": 1063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 491,
									"end": 492,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 2393,
									"end": 2407,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2375,
									"end": 2390,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "6C61746500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2367,
									"end": 2416,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2448,
									"end": 2449,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2427,
									"end": 2472,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2466,
									"end": 2471,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2456,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2452,
									"end": 2456,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2472,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2472,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2427,
									"end": 2472,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2499,
									"end": 2513,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2483,
									"end": 2496,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2483,
									"end": 2513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2483,
									"end": 2513,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2483,
									"end": 2513,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2483,
									"end": 2513,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2554,
									"end": 2565,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2554,
									"end": 2565,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2538,
									"end": 2551,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2538,
									"end": 2551,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2538,
									"end": 2565,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2524,
									"end": 2535,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2524,
									"end": 2565,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2524,
									"end": 2565,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2524,
									"end": 2565,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2524,
									"end": 2565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 596,
									"end": 692,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 649,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 685,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 10689,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054115d976e120adbd6e274e2d59342d24c6d4415018a6ca05d0b6ad5c547305064736f6c634300060c0033",
									".code": [
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "570CA735"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "CF4B55CB"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "E2BBB158"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "93F1A40B"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "943F013D"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "570CA735"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "60689557"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "630B5BA1"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "6E271DD5"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "29605E77"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "29605E77"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "441A3E70"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "4456EDA2"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "54575AF4"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "22CBF18"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "9CF6091"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "1526FE27"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "17CAF6F1"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "1AB06EE5"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "231F0C6A"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 10689,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "CB49B44BA602D800000"
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1953,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4367,
											"end": 4384,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4367,
											"end": 4384,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4367,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4427,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4452,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4594,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4444,
											"end": 4594,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4556,
											"end": 4567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4517,
											"end": 4521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4517,
											"end": 4532,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4517,
											"end": 4532,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4517,
											"end": 4532,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4512,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4497,
											"end": 4512,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4497,
											"end": 4516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4497,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4497,
											"end": 4582,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4497,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4494,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4479,
											"end": 4582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4582,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4594,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4444,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4622,
											"end": 4633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4633,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4641,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4847,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4823,
											"end": 4857,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4857,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4823,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4883,
											"end": 4894,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4883,
											"end": 4894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4894,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4868,
											"end": 5364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4939,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4911,
											"end": 4949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 4949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4949,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4911,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4981,
											"end": 4994,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4981,
											"end": 4994,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4977,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4994,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5038,
											"end": 5051,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5038,
											"end": 5051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5019,
											"end": 5032,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5019,
											"end": 5032,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5003,
											"end": 5018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5003,
											"end": 5037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4996,
											"end": 5052,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4964,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5105,
											"end": 5118,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5105,
											"end": 5118,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5090,
											"end": 5099,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5085,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5074,
											"end": 5085,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5074,
											"end": 5089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5100,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5074,
											"end": 5100,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5100,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5100,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5074,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5074,
											"end": 5104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5119,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5074,
											"end": 5119,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5119,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5119,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5074,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5067,
											"end": 5119,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 5364,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4868,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5180,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5167,
											"end": 5180,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5180,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5152,
											"end": 5190,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5190,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5190,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5152,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5222,
											"end": 5235,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5222,
											"end": 5235,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5209,
											"end": 5218,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5209,
											"end": 5235,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5205,
											"end": 5289,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5275,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5275,
											"end": 5288,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5256,
											"end": 5269,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5256,
											"end": 5269,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5251,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5244,
											"end": 5255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5244,
											"end": 5274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5289,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5237,
											"end": 5289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5289,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5205,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5338,
											"end": 5351,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5338,
											"end": 5351,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5323,
											"end": 5332,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5318,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5311,
											"end": 5322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5311,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5311,
											"end": 5337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5352,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5352,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5311,
											"end": 5352,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5311,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 5371,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 988,
											"end": 1000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8446,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8490,
											"end": 8494,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8506,
											"end": 8527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8538,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8545,
											"end": 8552,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8506,
											"end": 8553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8506,
											"end": 8553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8594,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8572,
											"end": 8576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8572,
											"end": 8583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8572,
											"end": 8583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8572,
											"end": 8583,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8572,
											"end": 8594,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8572,
											"end": 8594,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8564,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8639,
											"end": 8643,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 8628,
											"end": 8644,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8628,
											"end": 8644,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8628,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8674,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8726,
											"end": 8730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8741,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8726,
											"end": 8741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8741,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8716,
											"end": 8720,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8710,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8690,
											"end": 8710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8710,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 8674,
											"end": 8689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8674,
											"end": 8715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8674,
											"end": 8721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8721,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8674,
											"end": 8721,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8674,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8674,
											"end": 8725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8742,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8674,
											"end": 8742,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8742,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8674,
											"end": 8742,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8674,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8768,
											"end": 8769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8757,
											"end": 8765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8757,
											"end": 8769,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8882,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8753,
											"end": 8882,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8786,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8812,
											"end": 8820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8786,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 8786,
											"end": 8821,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8786,
											"end": 8821,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8786,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8859,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8861,
											"end": 8869,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8882,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8753,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 8907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8896,
											"end": 8903,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8896,
											"end": 8907,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8892,
											"end": 9030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8892,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 8892,
											"end": 9030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 8954,
											"end": 8961,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8942,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8938,
											"end": 8949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8949,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8938,
											"end": 8953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8924,
											"end": 8935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8962,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 9001,
											"end": 9008,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9010,
											"end": 9017,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8981,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9000,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8977,
											"end": 9000,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8977,
											"end": 9000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8977,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8892,
											"end": 9030,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 8892,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9100,
											"end": 9104,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9058,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9074,
											"end": 9078,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9062,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9069,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9069,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9095,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9058,
											"end": 9095,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9095,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9095,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9058,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 9058,
											"end": 9099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9105,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9058,
											"end": 9105,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9105,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9105,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9058,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9040,
											"end": 9055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9105,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9105,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9139,
											"end": 9143,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9130,
											"end": 9137,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "PUSH",
											"source": 6,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 9145,
											"end": 9152,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9153,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 9161,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6630,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6598,
											"end": 6636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6598,
											"end": 6636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6689,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6670,
											"end": 6689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6689,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6666,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6689,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6647,
											"end": 6724,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6706,
											"end": 6713,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6724,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6647,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6776,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6776,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6785,
											"end": 6789,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6802,
											"end": 6909,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6802,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6802,
											"end": 6909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6861,
											"end": 6876,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6858,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6839,
											"end": 6858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6876,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6802,
											"end": 6909,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6802,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6919,
											"end": 7057,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6955,
											"end": 6959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6969,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6955,
											"end": 6969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7044,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7029,
											"end": 7044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7044,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 7009,
											"end": 7028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7045,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7009,
											"end": 7045,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7045,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7009,
											"end": 7045,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7009,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6991,
											"end": 7045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6991,
											"end": 7045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6991,
											"end": 7045,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6991,
											"end": 7045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 7057,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6919,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7071,
											"end": 7086,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7071,
											"end": 7086,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7090,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7399,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7067,
											"end": 7399,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7153,
											"end": 7157,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7153,
											"end": 7172,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7153,
											"end": 7172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7153,
											"end": 7172,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7189,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 7134,
											"end": 7190,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7134,
											"end": 7190,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7134,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7227,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7269,
											"end": 7284,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7269,
											"end": 7284,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7248,
											"end": 7252,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7263,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7248,
											"end": 7263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7243,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7227,
											"end": 7247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7264,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7264,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7227,
											"end": 7264,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7264,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7227,
											"end": 7264,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7227,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7227,
											"end": 7268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7285,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7285,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7227,
											"end": 7285,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7285,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7227,
											"end": 7285,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7227,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7348,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7374,
											"end": 7385,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7364,
											"end": 7368,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7348,
											"end": 7359,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7348,
											"end": 7363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7348,
											"end": 7373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7386,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7348,
											"end": 7386,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7348,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7323,
											"end": 7343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7343,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 7323,
											"end": 7347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7304,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7320,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7300,
											"end": 7320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7387,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7399,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7067,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7428,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7409,
											"end": 7428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7446,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 7454,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9323,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9324,
											"end": 9328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9372,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9373,
											"end": 9377,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9379,
											"end": 9389,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9455,
											"end": 9456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9456,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9485,
											"end": 9486,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9467,
											"end": 9471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9482,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9467,
											"end": 9482,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9486,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9521,
											"end": 9531,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9533,
											"end": 9540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9501,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9497,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9591,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9585,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "PUSH",
											"source": 6,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 9593,
											"end": 9600,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9601,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9609,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10232,
											"end": 10239,
											"name": "PUSH",
											"source": 6,
											"value": "76A700"
										},
										{
											"begin": 10218,
											"end": 10229,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 10218,
											"end": 10229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10218,
											"end": 10239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10215,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10239,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10637,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 10196,
											"end": 10637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10364,
											"end": 10370,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "526F636B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 10356,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10402,
											"end": 10416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10419,
											"end": 10427,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10419,
											"end": 10434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10419,
											"end": 10434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10419,
											"end": 10434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10419,
											"end": 10434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10402,
											"end": 10434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10402,
											"end": 10434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10483,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10511,
											"end": 10532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10535,
											"end": 10543,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10544,
											"end": 10547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10511,
											"end": 10548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10511,
											"end": 10548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10585,
											"end": 10595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10575,
											"end": 10595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10581,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10575,
											"end": 10595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10595,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10595,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "706F6F6C2E746F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10567,
											"end": 10610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10485,
											"end": 10490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10485,
											"end": 10490,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10485,
											"end": 10490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10485,
											"end": 10490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10485,
											"end": 10490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10637,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 10196,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 10667,
											"end": 10669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10671,
											"end": 10677,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10653,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10666,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10647,
											"end": 10666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10647,
											"end": 10666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10686,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 562,
											"end": 569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6360,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6447,
											"end": 6450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6419,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6414,
											"end": 6419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6470,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1883,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3082,
											"end": 3108,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3108,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3082,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3180,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3119,
											"end": 3180,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3180,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3119,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3225,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3212,
											"end": 3225,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3209,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3225,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3299,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3338,
											"end": 3351,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3338,
											"end": 3351,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3427,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3414,
											"end": 3427,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3427,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3392,
											"end": 3503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3503,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3392,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3275,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3606,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3643,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3586,
											"end": 3643,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3643,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3625,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3643,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3643,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3586,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3713,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3582,
											"end": 3713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3713,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3582,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3190,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3781,
											"end": 3794,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3794,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3761,
											"end": 3844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3843,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3843,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3843,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3844,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3761,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3863,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3935,
											"end": 3946,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4064,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4096,
											"end": 4106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4156,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4141,
											"end": 4156,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4138,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4123,
											"end": 4173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4173,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 4192,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5561,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5562,
											"end": 5566,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5578,
											"end": 5599,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5615,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5616,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5622,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5623,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5578,
											"end": 5623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5578,
											"end": 5623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5717,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5733,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5733,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 5742,
											"end": 5746,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5800,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5781,
											"end": 5800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5800,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5778,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5800,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5820,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5763,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5820,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5820,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5763,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 6119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5759,
											"end": 6119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5883,
											"end": 5887,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5902,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5883,
											"end": 5902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5902,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5919,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5864,
											"end": 5920,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5864,
											"end": 5920,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5864,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 5954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5957,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5999,
											"end": 6014,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5999,
											"end": 6014,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5978,
											"end": 5982,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 5993,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5978,
											"end": 5993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 5993,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5973,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5994,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5957,
											"end": 5994,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5994,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5957,
											"end": 5994,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5957,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5957,
											"end": 5998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 6015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 6015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 6015,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5957,
											"end": 6015,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 6015,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5957,
											"end": 6015,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5957,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 6015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 6015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6094,
											"end": 6105,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6084,
											"end": 6088,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6068,
											"end": 6079,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6068,
											"end": 6083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6089,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6089,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 6089,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6068,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6068,
											"end": 6093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6048,
											"end": 6067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6107,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6048,
											"end": 6107,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6107,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6048,
											"end": 6107,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6048,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6107,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 6119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 6119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 6119,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5759,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 6183,
											"end": 6187,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6198,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6183,
											"end": 6198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6198,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6173,
											"end": 6177,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6152,
											"end": 6167,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6140,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6147,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6136,
											"end": 6151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6136,
											"end": 6172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6178,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6136,
											"end": 6178,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6178,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6136,
											"end": 6178,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6136,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6136,
											"end": 6182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6199,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6136,
											"end": 6199,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6199,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6136,
											"end": 6199,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 6136,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6199,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 6207,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7583,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7626,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7627,
											"end": 7631,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7643,
											"end": 7664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7667,
											"end": 7675,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7676,
											"end": 7680,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7667,
											"end": 7681,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7643,
											"end": 7690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7643,
											"end": 7690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7712,
											"end": 7716,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7701,
											"end": 7717,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7701,
											"end": 7717,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7701,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7736,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 7743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 7743,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 7747,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 8018,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7728,
											"end": 8018,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7764,
											"end": 7780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7835,
											"end": 7839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7850,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7835,
											"end": 7850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7850,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7783,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7799,
											"end": 7803,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7819,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7799,
											"end": 7819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7819,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7794,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7783,
											"end": 7798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7820,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7820,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7783,
											"end": 7820,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7820,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7783,
											"end": 7820,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7783,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7783,
											"end": 7824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7830,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7783,
											"end": 7830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7830,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7783,
											"end": 7830,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7783,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 7783,
											"end": 7834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7851,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7783,
											"end": 7851,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7851,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7783,
											"end": 7851,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7783,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7764,
											"end": 7851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7764,
											"end": 7851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7881,
											"end": 7882,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 7882,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8007,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7866,
											"end": 8007,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7920,
											"end": 7927,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7903,
											"end": 7938,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7903,
											"end": 7938,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7903,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 7982,
											"end": 7990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7991,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8007,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7866,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 8018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 8018,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7728,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8032,
											"end": 8039,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8032,
											"end": 8043,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8028,
											"end": 8185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8119,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8064,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8087,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8060,
											"end": 8087,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8060,
											"end": 8087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8060,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8160,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8149,
											"end": 8164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8149,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8173,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8185,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8028,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8255,
											"end": 8259,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8229,
											"end": 8233,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8249,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8229,
											"end": 8249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8249,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8217,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8213,
											"end": 8224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8224,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 8213,
											"end": 8228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8213,
											"end": 8254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8199,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8210,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8195,
											"end": 8210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8260,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8260,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8291,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 8299,
											"end": 8306,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 8315,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 649,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH data",
											"source": 7,
											"value": "756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9723,
											"end": 10072,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 9723,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9832,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9818,
											"end": 9832,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9832,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 9841,
											"end": 9845,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9818,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 10065,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 9858,
											"end": 10065,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9905,
											"end": 9913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9895,
											"end": 9902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9895,
											"end": 9913,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9952,
											"end": 9955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9957,
											"end": 9965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9951,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9934,
											"end": 9951,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9934,
											"end": 9951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10025,
											"end": 10028,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10007,
											"end": 10024,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10007,
											"end": 10024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10007,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 9891,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 10065,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 9858,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9723,
											"end": 10072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9723,
											"end": 10072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9723,
											"end": 10072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9723,
											"end": 10072,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 874,
											"end": 876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2581,
											"end": 2841,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2581,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2666,
											"end": 2681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2681,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2726,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2758,
											"end": 2787,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2766,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2767,
											"end": 2770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2758,
											"end": 2787,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2787,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2787,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "526F636B526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2750,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2728,
											"end": 2733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2841,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH data",
											"source": 2,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH data",
											"source": 3,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4974,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7316,
											"end": 7328,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7506,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7673,
											"end": 7690,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7711,
											"end": 7755,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Rock()": "60689557",
							"RockPerSecond()": "022cbf18",
							"TOTAL_REWARDS()": "09cf6091",
							"add(uint256,address,bool,uint256)": "96805e54",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getGeneratedReward(uint256,uint256)": "231f0c6a",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"isOperator()": "4456eda2",
							"massUpdatePools()": "630b5ba1",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"pendingShare(uint256,address)": "cf4b55cb",
							"poolEndTime()": "6e271dd5",
							"poolInfo(uint256)": "1526fe27",
							"poolStartTime()": "5f96dc11",
							"renounceOwnership()": "715018a6",
							"runningTime()": "943f013d",
							"set(uint256,uint256)": "1ab06ee5",
							"totalAllocPoint()": "17caf6f1",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Rock\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolStartTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Rock\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RockPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_REWARDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastRewardTime\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTime\",\"type\":\"uint256\"}],\"name\":\"getGeneratedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRockPerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStarted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"runningTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/distribution/TShareRewardPool.sol\":\"PolyRockRewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]},\"contracts/distribution/TShareRewardPool.sol\":{\"keccak256\":\"0xb7ead61bc2d8f9d910c3f8cd121539a3051a57b9d07e50bd0d328016690a46ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b95114f299e255e1eb60ec857b85af2edf428523413583cbf1c953d08f667be\",\"dweb:/ipfs/Qmcwpik8YoRqq6ZugJ4VQHEzNi5j7A3JYeuWn2yfTvHb2o\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2116,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "_operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1138,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "Rock",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)187"
							},
							{
								"astId": 1141,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "poolInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_struct(PoolInfo)1136_storage)dyn_storage"
							},
							{
								"astId": 1147,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1125_storage))"
							},
							{
								"astId": 1150,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1152,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "poolStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1154,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "poolEndTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1157,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "RockPerSecond",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1160,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
								"label": "runningTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1136_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1136_storage",
								"encoding": "dynamic_array",
								"label": "struct PolyRockRewardPool.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)187": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1125_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PolyRockRewardPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1125_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1125_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct PolyRockRewardPool.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1125_storage)"
							},
							"t_struct(PoolInfo)1136_storage": {
								"encoding": "inplace",
								"label": "struct PolyRockRewardPool.PoolInfo",
								"members": [
									{
										"astId": 1127,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)187"
									},
									{
										"astId": 1129,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1131,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1133,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
										"label": "accRockPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1135,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
										"label": "isStarted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)1125_storage": {
								"encoding": "inplace",
								"label": "struct PolyRockRewardPool.UserInfo",
								"members": [
									{
										"astId": 1122,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1124,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRockRewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/owner/Operator.sol": {
				"Operator": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOperator()": "4456eda2",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/owner/Operator.sol\":\"Operator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2116,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "@openzeppelin/contracts/utils/Context.sol:20:5: Warning: Function state mutability can be restricted to pure\n    function _msgData() internal view virtual returns (bytes calldata) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 797,
					"file": "@openzeppelin/contracts/utils/Context.sol",
					"start": 698
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 720,
							"src": "120:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 719,
										"src": "675:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$719",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "675:7:0"
								}
							],
							"contractDependencies": [
								719
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "151:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								719
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 109,
									"src": "689:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "745:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "776:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:57:0"
									},
									"src": "718:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "928:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "938:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "938:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "958:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "958:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "938:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "980:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "989:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "980:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "980:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1042:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1034:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1034:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1034:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1046:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1013:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "1008:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "808:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:0:0"
									},
									"scope": 109,
									"src": "904:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1194:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1204:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1069:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1184:9:0"
									},
									"scope": 109,
									"src": "1139:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1333:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1351:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "1362:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1362:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1351:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1343:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1421:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1230:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:2:0"
									},
									"src": "1312:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1825:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1877:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1869:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1840:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1840:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1835:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1907:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1899:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1899:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1890:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1890:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1435:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 62,
											"modifierName": {
												"argumentTypes": null,
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1815:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1815:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:0:0"
									},
									"scope": 109,
									"src": "1771:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2135:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2173:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2165:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2165:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2153:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2145:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2262:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2233:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2228:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2281:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2281:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2281:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1922:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 86,
											"modifierName": {
												"argumentTypes": null,
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2125:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2125:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2092:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2091:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:0:0"
									},
									"scope": 109,
									"src": "2065:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "646:1661:0"
						}
					],
					"src": "87:2220:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							187
						]
					},
					"id": 188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "67:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 187,
							"linearizedBaseContracts": [
								187
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "161:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 118,
												"src": "278:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "277:9:1"
									},
									"scope": 187,
									"src": "232:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "293:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "389:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "388:17:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "429:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:9:1"
									},
									"scope": 187,
									"src": "370:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "444:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "676:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:35:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "729:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:6:1"
									},
									"scope": 187,
									"src": "658:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "741:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "1029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "1044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1028:32:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "1084:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1083:9:1"
									},
									"scope": 187,
									"src": "1010:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1099:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1763:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1780:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1762:33:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1814:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1813:6:1"
									},
									"scope": 187,
									"src": "1746:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "1826:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2158:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2182:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2209:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2148:81:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2248:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2247:6:1"
									},
									"scope": 187,
									"src": "2127:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2260:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 177,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "2438:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "2460:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "2480:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2437:57:1"
									},
									"src": "2423:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2501:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 186,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2669:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2692:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2717:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2668:63:1"
									},
									"src": "2654:78:1"
								}
							],
							"scope": 188,
							"src": "138:2596:1"
						}
					],
					"src": "33:2702:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							400
						]
					},
					"id": 401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 189,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 190,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 188,
							"src": "66:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 191,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 698,
							"src": "90:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../../../utils/math/SafeMath.sol",
							"id": 192,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 1107,
							"src": "127:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "171:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 400,
							"linearizedBaseContracts": [
								400
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 196,
									"libraryName": {
										"contractScope": null,
										"id": 194,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1106,
										"src": "659:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1106",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:27:2",
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 199,
									"libraryName": {
										"contractScope": null,
										"id": 197,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 697,
										"src": "691:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$697",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "685:26:2",
									"typeName": {
										"id": 198,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "789:103:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 209,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 212,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "849:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 136,
																		"src": "849:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "849:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 215,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "874:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 216,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "878:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 210,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "826:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "826:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 208,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "799:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "799:86:2"
											}
										]
									},
									"documentation": null,
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "739:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 200,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "739:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "753:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "765:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:41:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:2"
									},
									"scope": 400,
									"src": "717:175:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "988:113:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "1018:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 236,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "1048:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 168,
																		"src": "1048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1048:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 239,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1077:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 240,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1083:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "1087:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 234,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1025:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1025:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 232,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "998:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "998:96:2"
											}
										]
									},
									"documentation": null,
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "924:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 222,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "924:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "938:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "952:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "964:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "923:55:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:2"
									},
									"scope": 400,
									"src": "898:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1437:537:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 257,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "1726:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1735:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1726:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1725:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 265,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1766:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$400",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$400",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 264,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1758:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 263,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1758:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1758:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 267,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 251,
																					"src": "1773:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 261,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "1742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 146,
																				"src": "1742:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1742:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1785:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1742:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1741:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1725:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:56:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1717:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1717:150:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 277,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1897:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 280,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1927:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "1927:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1927:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 283,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1951:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1960:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 278,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1904:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1904:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1904:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 276,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1877:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1877:90:2"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "1107:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "1382:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 248,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "1382:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "1396:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "1413:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1381:46:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 400,
									"src": "1361:613:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "2066:197:2",
										"statements": [
											{
												"assignments": [
													299
												],
												"declarations": [
													{
														"constant": false,
														"id": 299,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 324,
														"src": "2076:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2076:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "2143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 304,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2123:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2115:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 302,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2115:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2115:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 306,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2130:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 300,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "2099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "2099:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2099:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "2099:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2076:73:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 313,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "2179:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 316,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "2209:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "2209:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2209:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 319,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2233:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 320,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "2242:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 314,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2186:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2186:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 312,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2159:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2159:97:2"
											}
										]
									},
									"documentation": null,
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 290,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2011:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2042:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2010:46:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:2"
									},
									"scope": 400,
									"src": "1980:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "2355:242:2",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 361,
														"src": "2365:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2432:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2439:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 340,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2412:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2404:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 338,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2404:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2419:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 336,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2388:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "2388:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1025,
														"src": "2388:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:118:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "2513:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 353,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2543:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "2543:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2543:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 356,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 357,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2576:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2520:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2520:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 349,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2493:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "2493:97:2"
											}
										]
									},
									"documentation": null,
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2300:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 326,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2314:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2331:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2299:46:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:2"
									},
									"scope": 400,
									"src": "2269:328:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "3050:681:2",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 398,
														"src": "3399:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 370,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3399:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "3453:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 374,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3433:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3425:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 372,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3425:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3425:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 491,
														"src": "3425:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3425:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:95:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 381,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "3508:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3508:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3528:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3508:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 397,
												"nodeType": "IfStatement",
												"src": "3504:221:2",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "3531:194:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 388,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "3648:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3661:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 389,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3661:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 391,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3660:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 386,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3637:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3637:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3669:44:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 385,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3629:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "3629:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2603:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "3009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 364,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "3009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "3023:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3023:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3008:33:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:0:2"
									},
									"scope": 400,
									"src": "2980:751:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 401,
							"src": "629:3104:2"
						}
					],
					"src": "33:3700:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							697
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 402,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "67:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "793:311:3",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 419,
														"src": "990:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "990:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "990:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1021:52:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1035:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1055:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1043:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 406,
														"isOffset": false,
														"isSlot": false,
														"src": "1055:7:3",
														"valueSize": 1
													},
													{
														"declaration": 412,
														"isOffset": false,
														"isSlot": false,
														"src": "1035:4:3",
														"valueSize": 1
													}
												],
												"id": 414,
												"nodeType": "InlineAssembly",
												"src": "1012:61:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 415,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1089:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1096:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1089:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 410,
												"id": 418,
												"nodeType": "Return",
												"src": "1082:15:3"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "157:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "747:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:17:3"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "787:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "786:6:3"
									},
									"scope": 697,
									"src": "727:377:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2092:241:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 431,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2118:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		],
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2110:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 429,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2110:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2110:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2110:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2135:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2110:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2143:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2102:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "2102:73:3"
											},
											{
												"assignments": [
													440,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 453,
														"src": "2187:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 439,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2187:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 447,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:2:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 441,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2205:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2205:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 443,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2227:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2205:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:52:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 449,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2256:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2265:60:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2248:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2248:78:3"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1110:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 454,
												"src": "2040:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 454,
												"src": "2067:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2039:43:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:0:3"
									},
									"scope": 697,
									"src": "2021:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3164:84:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3194:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3202:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 464,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															491
														],
														"referencedDeclaration": 491,
														"src": "3181:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 469,
												"nodeType": "Return",
												"src": "3174:67:3"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2339:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "3097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "3113:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3096:35:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "3150:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3150:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3149:14:3"
									},
									"scope": 697,
									"src": "3075:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3617:76:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 484,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3656:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 485,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "3664:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3670:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 487,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3673:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 483,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															561
														],
														"referencedDeclaration": 561,
														"src": "3634:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 489,
												"nodeType": "Return",
												"src": "3627:59:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3254:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "3501:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "3525:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3525:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "3552:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3552:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3491:93:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "3603:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:14:3"
									},
									"scope": 697,
									"src": "3470:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "4198:111:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 504,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4237:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 505,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4245:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4251:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4258:43:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 503,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															561
														],
														"referencedDeclaration": 561,
														"src": "4215:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 502,
												"id": 509,
												"nodeType": "Return",
												"src": "4208:94:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3699:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "4095:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "4119:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "4146:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4085:80:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "4184:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4184:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4183:14:3"
									},
									"scope": 697,
									"src": "4055:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "4736:320:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 528,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4762:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		],
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4754:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 526,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4754:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4754:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4754:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "4779:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4754:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "4746:81:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 538,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "4856:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 537,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "4845:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4845:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4865:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4837:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "4837:60:3"
											},
											{
												"assignments": [
													544,
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 560,
														"src": "4909:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4909:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 560,
														"src": "4923:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 545,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4923:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 551,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 547,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "4950:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4950:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 549,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "4969:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4950:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4908:73:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 555,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 556,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5024:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 557,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5036:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 554,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "4998:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 524,
												"id": 559,
												"nodeType": "Return",
												"src": "4991:58:3"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "4315:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4597:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4621:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4621:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4671:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4587:116:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4722:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4722:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4721:14:3"
									},
									"scope": 697,
									"src": "4557:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5333:97:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 572,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5369:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 573,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5377:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 571,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															613
														],
														"referencedDeclaration": 613,
														"src": "5350:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 570,
												"id": 576,
												"nodeType": "Return",
												"src": "5343:80:3"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "5062:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "5261:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "5277:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5277:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5260:35:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "5319:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5318:14:3"
									},
									"scope": 697,
									"src": "5233:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "5772:228:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 592,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5801:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 591,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "5790:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5782:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5782:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "5782:67:3"
											},
											{
												"assignments": [
													598,
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 612,
														"src": "5861:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 597,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5861:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 612,
														"src": "5875:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 599,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5875:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 603,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5920:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 601,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5902:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5902:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5860:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 607,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5959:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 608,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5968:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 609,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5980:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 606,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5942:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 589,
												"id": 611,
												"nodeType": "Return",
												"src": "5935:58:3"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5436:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "5651:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "5675:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5675:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "5702:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5702:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5641:93:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "5758:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5758:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5757:14:3"
									},
									"scope": 697,
									"src": "5614:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "6276:101:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 624,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6314:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "6322:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6328:41:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 623,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															665
														],
														"referencedDeclaration": 665,
														"src": "6293:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 628,
												"nodeType": "Return",
												"src": "6286:84:3"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "6006:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "6209:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "6225:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6225:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6208:35:3"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "6262:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6262:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6261:14:3"
									},
									"scope": 697,
									"src": "6179:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "6718:232:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 644,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "6747:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 643,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6736:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6728:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "6728:69:3"
											},
											{
												"assignments": [
													650,
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 664,
														"src": "6809:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 649,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6809:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 664,
														"src": "6823:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 651,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6823:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 655,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "6870:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 653,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "6850:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6850:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6850:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6808:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 659,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "6909:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 660,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "6918:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 661,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6930:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 658,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "6892:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 641,
												"id": 663,
												"nodeType": "Return",
												"src": "6885:58:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "6383:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "6602:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "6626:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6626:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "6653:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6653:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6592:93:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "6704:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6704:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6703:14:3"
									},
									"scope": 697,
									"src": "6563:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7330:532:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 677,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 668,
													"src": "7344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "7401:455:3",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 681,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "7485:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7485:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7505:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7485:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 691,
																"nodeType": "Block",
																"src": "7793:53:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 688,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 672,
																					"src": "7818:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 687,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7811:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7811:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 690,
																		"nodeType": "ExpressionStatement",
																		"src": "7811:20:3"
																	}
																]
															},
															"id": 692,
															"nodeType": "IfStatement",
															"src": "7481:365:3",
															"trueBody": {
																"id": 686,
																"nodeType": "Block",
																"src": "7508:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7628:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7650:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7679:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7673:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7673:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7654:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7722:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7726:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7718:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7718:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7739:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7711:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7711:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7711:44:3"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 670,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7679:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 670,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7726:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 685,
																		"nodeType": "InlineAssembly",
																		"src": "7619:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7340:516:3",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "7353:42:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 678,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "7374:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 676,
															"id": 679,
															"nodeType": "Return",
															"src": "7367:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "6956:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7205:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7205:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7227:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7260:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7260:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7195:97:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7316:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7316:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7315:14:3"
									},
									"scope": 697,
									"src": "7170:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "135:7729:3"
						}
					],
					"src": "33:7832:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							719
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "67:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "658:34:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "675:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "675:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "668:17:4"
											}
										]
									},
									"documentation": null,
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:4"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 709,
												"src": "649:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "648:9:4"
									},
									"scope": 719,
									"src": "596:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "765:32:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 714,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "782:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "782:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 713,
												"id": 716,
												"nodeType": "Return",
												"src": "775:15:4"
											}
										]
									},
									"documentation": null,
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:2:4"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 718,
												"src": "749:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "749:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "748:16:4"
									},
									"scope": 719,
									"src": "698:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 720,
							"src": "564:235:4"
						}
					],
					"src": "33:767:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 721,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 722,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "865:98:5",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 752,
														"src": "875:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 736,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "887:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 737,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "891:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 740,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "906:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "910:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 747,
												"nodeType": "IfStatement",
												"src": "902:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 745,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 733,
													"id": 746,
													"nodeType": "Return",
													"src": "913:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 749,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 750,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 733,
												"id": 751,
												"nodeType": "Return",
												"src": "940:16:5"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "805:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "816:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:5"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "850:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "856:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:5"
									},
									"scope": 1106,
									"src": "789:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "1185:75:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 765,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "1199:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 766,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1203:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 772,
												"nodeType": "IfStatement",
												"src": "1195:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 770,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 764,
													"id": 771,
													"nodeType": "Return",
													"src": "1206:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 774,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1247:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 775,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "1251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 777,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 764,
												"id": 778,
												"nodeType": "Return",
												"src": "1233:20:5"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "1125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "1136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:5"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "1170:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "1176:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:5"
									},
									"scope": 1106,
									"src": "1109:151:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1484:359:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 792,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1716:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 799,
												"nodeType": "IfStatement",
												"src": "1712:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 797,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 791,
													"id": 798,
													"nodeType": "Return",
													"src": "1724:16:5"
												}
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 820,
														"src": "1750:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 802,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1762:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 803,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1766:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 806,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 807,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "1785:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 809,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 815,
												"nodeType": "IfStatement",
												"src": "1777:33:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 791,
													"id": 814,
													"nodeType": "Return",
													"src": "1793:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 817,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1834:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 818,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 791,
												"id": 819,
												"nodeType": "Return",
												"src": "1820:16:5"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "1424:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "1435:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "1469:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "1475:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:5"
									},
									"scope": 1106,
									"src": "1408:435:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "2068:76:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "2082:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 840,
												"nodeType": "IfStatement",
												"src": "2078:29:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 838,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 832,
													"id": 839,
													"nodeType": "Return",
													"src": "2090:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 842,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "2131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 843,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2135:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 845,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 832,
												"id": 846,
												"nodeType": "Return",
												"src": "2117:20:5"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "2019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "2053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "2059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:5"
									},
									"scope": 1106,
									"src": "1992:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2379:76:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2393:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 867,
												"nodeType": "IfStatement",
												"src": "2389:29:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 865,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 859,
													"id": 866,
													"nodeType": "Return",
													"src": "2401:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 869,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "2442:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 870,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "2446:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 872,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 859,
												"id": 873,
												"nodeType": "Return",
												"src": "2428:20:5"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "2319:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "2330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "2364:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "2370:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:5"
									},
									"scope": 1106,
									"src": "2303:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "2757:108:5",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 900,
														"src": "2767:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 887,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "2779:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 888,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "2783:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 892,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2802:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 893,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "2807:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 898,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 886,
													"src": "2857:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 899,
												"nodeType": "Return",
												"src": "2850:8:5"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 901,
												"src": "2703:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 901,
												"src": "2714:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:5"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 901,
												"src": "2748:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:5"
									},
									"scope": 1106,
									"src": "2690:175:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "3203:88:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 912,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "3221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 913,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "3226:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 918,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "3279:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 919,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3283:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 921,
												"nodeType": "Return",
												"src": "3272:12:5"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 923,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 923,
												"src": "3160:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 923,
												"src": "3194:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:5"
									},
									"scope": 1106,
									"src": "3136:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "3605:148:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 933,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3619:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 938,
												"nodeType": "IfStatement",
												"src": "3615:20:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 932,
													"id": 937,
													"nodeType": "Return",
													"src": "3627:8:5"
												}
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 956,
														"src": "3645:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 941,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3657:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 942,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "3661:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 946,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3680:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 947,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "3684:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 949,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "3689:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 954,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 940,
													"src": "3745:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 932,
												"id": 955,
												"nodeType": "Return",
												"src": "3738:8:5"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "3551:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "3562:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "3596:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:5"
									},
									"scope": 1106,
									"src": "3538:215:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4284:83:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 968,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "4302:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 974,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4355:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 975,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "4359:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 966,
												"id": 977,
												"nodeType": "Return",
												"src": "4348:12:5"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "4230:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "4241:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "4275:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:5"
									},
									"scope": 1106,
									"src": "4217:150:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "4887:81:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "4905:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 996,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4956:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 997,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "4960:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 999,
												"nodeType": "Return",
												"src": "4949:12:5"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1001,
												"src": "4833:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1001,
												"src": "4844:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:5"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1001,
												"src": "4878:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:5"
									},
									"scope": 1106,
									"src": "4820:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "5527:68:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1014,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "5545:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "5550:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1017,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "5553:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1020,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1021,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "5587:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1023,
												"nodeType": "Return",
												"src": "5576:12:5"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "5445:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "5456:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "5467:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:5"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "5518:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:5"
									},
									"scope": 1106,
									"src": "5432:163:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "5669:103:5",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1056,
														"src": "5679:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5679:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1037,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "5695:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1038,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5698:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5691:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:21:5"
											},
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "d",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1056,
														"src": "5710:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1044,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "5726:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1043,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															1025
														],
														"referencedDeclaration": 923,
														"src": "5722:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5710:21:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1050,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "5756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1051,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5759:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1049,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	979,
																	1081
																],
																"referencedDeclaration": 979,
																"src": "5752:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5752:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1053,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5763:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "5748:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5748:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1055,
												"nodeType": "Return",
												"src": "5741:24:5"
											}
										]
									},
									"documentation": null,
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "5615:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "m",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "5626:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5614:22:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "5660:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5659:9:5"
									},
									"scope": 1106,
									"src": "5601:171:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "6524:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1070,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "6542:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6546:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6542:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1073,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6549:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6534:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "6534:28:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1076,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "6579:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1077,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "6583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6579:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1079,
												"nodeType": "Return",
												"src": "6572:12:5"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "5778:646:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "6442:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "6453:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "6464:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1063,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6464:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6441:50:5"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "6515:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6514:9:5"
									},
									"scope": 1106,
									"src": "6429:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "7332:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1094,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "7350:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7354:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7350:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1097,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "7357:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7342:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "7342:28:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "7387:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "7391:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7387:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1103,
												"nodeType": "Return",
												"src": "7380:12:5"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "6597:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "7250:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "7261:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "7272:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7272:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7249:50:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "7323:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7322:9:5"
									},
									"scope": 1106,
									"src": "7237:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "630:6771:5"
						}
					],
					"src": "33:7368:5"
				},
				"id": 5
			},
			"contracts/distribution/TShareRewardPool.sol": {
				"ast": {
					"absolutePath": "contracts/distribution/TShareRewardPool.sol",
					"exportedSymbols": {
						"PolyRockRewardPool": [
							2106
						]
					},
					"id": 2107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1109,
							"nodeType": "ImportDirective",
							"scope": 2107,
							"sourceUnit": 188,
							"src": "70:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1110,
							"nodeType": "ImportDirective",
							"scope": 2107,
							"sourceUnit": 401,
							"src": "128:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1111,
							"nodeType": "ImportDirective",
							"scope": 2107,
							"sourceUnit": 1107,
							"src": "195:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/owner/Operator.sol",
							"file": "../owner/Operator.sol",
							"id": 1112,
							"nodeType": "ImportDirective",
							"scope": 2107,
							"sourceUnit": 2218,
							"src": "254:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1113,
										"name": "Operator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2217,
										"src": "493:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Operator_$2217",
											"typeString": "contract Operator"
										}
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "493:8:6"
								}
							],
							"contractDependencies": [
								109,
								719,
								2217
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2106,
							"linearizedBaseContracts": [
								2106,
								2217,
								109,
								719
							],
							"name": "PolyRockRewardPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1117,
									"libraryName": {
										"contractScope": null,
										"id": 1115,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1106,
										"src": "515:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1106",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "509:27:6",
									"typeName": {
										"id": 1116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "528:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1120,
									"libraryName": {
										"contractScope": null,
										"id": 1118,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "548:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$400",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "542:27:6",
									"typeName": {
										"contractScope": null,
										"id": 1119,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 187,
										"src": "562:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$187",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "PolyRockRewardPool.UserInfo",
									"id": 1125,
									"members": [
										{
											"constant": false,
											"id": 1122,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1125,
											"src": "652:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "652:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1124,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1125,
											"src": "722:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "722:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 2106,
									"src": "625:162:6",
									"visibility": "public"
								},
								{
									"canonicalName": "PolyRockRewardPool.PoolInfo",
									"id": 1136,
									"members": [
										{
											"constant": false,
											"id": 1127,
											"mutability": "mutable",
											"name": "token",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "849:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$187",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"contractScope": null,
												"id": 1126,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 187,
												"src": "849:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1129,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "905:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "905:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1131,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "1018:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1130,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1018:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1133,
											"mutability": "mutable",
											"name": "accRockPerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "1096:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1096:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1135,
											"mutability": "mutable",
											"name": "isStarted",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "1185:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1134,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1185:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 2106,
									"src": "822:417:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60689557",
									"id": 1138,
									"mutability": "mutable",
									"name": "Rock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1247:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$187",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 1137,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 187,
										"src": "1247:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$187",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1141,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1301:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
										"typeString": "struct PolyRockRewardPool.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 1139,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1136,
											"src": "1301:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
												"typeString": "struct PolyRockRewardPool.PoolInfo"
											}
										},
										"id": 1140,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "1301:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage_ptr",
											"typeString": "struct PolyRockRewardPool.PoolInfo[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1147,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1385:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct PolyRockRewardPool.UserInfo))"
									},
									"typeName": {
										"id": 1146,
										"keyType": {
											"id": 1142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1393:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1385:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct PolyRockRewardPool.UserInfo))"
										},
										"valueType": {
											"id": 1145,
											"keyType": {
												"id": 1143,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1412:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1404:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
												"typeString": "mapping(address => struct PolyRockRewardPool.UserInfo)"
											},
											"valueType": {
												"contractScope": null,
												"id": 1144,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1125,
												"src": "1423:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
													"typeString": "struct PolyRockRewardPool.UserInfo"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1150,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1546:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1546:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 1149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1579:1:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f96dc11",
									"id": 1152,
									"mutability": "mutable",
									"name": "poolStartTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1631:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e271dd5",
									"id": 1154,
									"mutability": "mutable",
									"name": "poolEndTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1708:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "022cbf18",
									"id": 1157,
									"mutability": "mutable",
									"name": "RockPerSecond",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1743:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1155,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1743:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "302e3030313837363837",
										"id": 1156,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1774:16:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1876870000000000_by_1",
											"typeString": "int_const 1876870000000000"
										},
										"value": "0.00187687"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "943f013d",
									"id": 1160,
									"mutability": "mutable",
									"name": "runningTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1846:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1846:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "333730",
										"id": 1159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1875:8:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31968000_by_1",
											"typeString": "int_const 31968000"
										},
										"value": "370"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "09cf6091",
									"id": 1163,
									"mutability": "constant",
									"name": "TOTAL_REWARDS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2106,
									"src": "1902:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1902:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3630303030",
										"id": 1162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1942:11:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60000000000000000000000_by_1",
											"typeString": "int_const 60000000000000000000000"
										},
										"value": "60000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1171,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1171,
												"src": "1976:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1171,
												"src": "1998:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1171,
												"src": "2019:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1975:59:6"
									},
									"src": "1962:73:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1179,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1179,
												"src": "2056:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1179,
												"src": "2078:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1179,
												"src": "2099:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2055:59:6"
									},
									"src": "2041:74:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1187,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "2145:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "2167:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "2188:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2144:59:6"
									},
									"src": "2121:83:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1193,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1193,
												"src": "2227:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2227:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1193,
												"src": "2249:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2226:38:6"
									},
									"src": "2210:55:6"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "2356:217:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1201,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "2375:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2375:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1203,
																"name": "_poolStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "2393:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2375:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c617465",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2409:6:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															},
															"value": "late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															}
														],
														"id": 1200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2367:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "2367:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1208,
														"name": "_Rock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "2431:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2448:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2440:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1209,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2440:7:6",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2440:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2431:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "2427:45:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1214,
															"name": "Rock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2452:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1216,
																	"name": "_Rock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "2466:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1215,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2459:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2459:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"src": "2452:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$187",
															"typeString": "contract IERC20"
														}
													},
													"id": 1219,
													"nodeType": "ExpressionStatement",
													"src": "2452:20:6"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1221,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "2483:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1222,
														"name": "_poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2499:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2483:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "2483:30:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1225,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "2524:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1226,
															"name": "poolStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "2538:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1227,
															"name": "runningTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "2554:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2538:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2524:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "2524:41:6"
											}
										]
									},
									"documentation": null,
									"id": 1232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "_Rock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1232,
												"src": "2295:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "_poolStartTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1232,
												"src": "2319:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2284:64:6"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:0:6"
									},
									"scope": 2106,
									"src": "2273:300:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "2638:203:6",
										"statements": [
											{
												"assignments": [
													1238
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1264,
														"src": "2649:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2649:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1241,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1239,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "2666:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2666:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2649:32:6"
											},
											{
												"body": {
													"id": 1262,
													"nodeType": "Block",
													"src": "2735:99:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1253,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "2758:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																						"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1255,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1254,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1243,
																					"src": "2767:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2758:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
																					"typeString": "struct PolyRockRewardPool.PoolInfo storage ref"
																				}
																			},
																			"id": 1256,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1127,
																			"src": "2758:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1257,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1234,
																			"src": "2781:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "2758:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "526f636b526577617264506f6f6c3a206578697374696e6720706f6f6c3f",
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2789:32:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_91a2538ef87ef478696a6197b3e19dd0e62e7c3512ccead866a9230e43a5760f",
																			"typeString": "literal_string \"RockRewardPool: existing pool?\""
																		},
																		"value": "RockRewardPool: existing pool?"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_91a2538ef87ef478696a6197b3e19dd0e62e7c3512ccead866a9230e43a5760f",
																			"typeString": "literal_string \"RockRewardPool: existing pool?\""
																		}
																	],
																	"id": 1252,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "2750:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2750:72:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1261,
															"nodeType": "ExpressionStatement",
															"src": "2750:72:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1246,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "2714:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1247,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "2720:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1263,
												"initializationExpression": {
													"assignments": [
														1243
													],
													"declarations": [
														{
															"constant": false,
															"id": 1243,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1263,
															"src": "2697:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1242,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2697:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1245,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2711:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2697:15:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2728:5:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1249,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "2730:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1251,
													"nodeType": "ExpressionStatement",
													"src": "2728:5:6"
												},
												"nodeType": "ForStatement",
												"src": "2692:142:6"
											}
										]
									},
									"documentation": null,
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPoolDuplicate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1265,
												"src": "2609:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1233,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2609:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2608:15:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:0:6"
									},
									"scope": 2106,
									"src": "2581:260:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "3071:1121:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1279,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "3101:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														],
														"id": 1278,
														"name": "checkPoolDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "3082:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$187_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3082:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "3082:26:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1282,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1271,
													"src": "3123:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1287,
												"nodeType": "IfStatement",
												"src": "3119:61:6",
												"trueBody": {
													"id": 1286,
													"nodeType": "Block",
													"src": "3136:44:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1283,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "3151:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3151:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1285,
															"nodeType": "ExpressionStatement",
															"src": "3151:17:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1288,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "3194:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3194:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1290,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "3212:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3194:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1327,
													"nodeType": "Block",
													"src": "3535:189:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1312,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "3586:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3605:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3586:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1315,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "3610:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1316,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "3628:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3628:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3610:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3586:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1326,
															"nodeType": "IfStatement",
															"src": "3582:131:6",
															"trueBody": {
																"id": 1325,
																"nodeType": "Block",
																"src": "3645:68:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1320,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1273,
																				"src": "3664:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1321,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -4,
																					"src": "3682:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3682:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3664:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1324,
																		"nodeType": "ExpressionStatement",
																		"src": "3664:33:6"
																	}
																]
															}
														}
													]
												},
												"id": 1328,
												"nodeType": "IfStatement",
												"src": "3190:534:6",
												"trueBody": {
													"id": 1311,
													"nodeType": "Block",
													"src": "3227:302:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1292,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3279:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3298:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3279:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1309,
																"nodeType": "Block",
																"src": "3373:145:6",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1300,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1273,
																				"src": "3396:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1301,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1152,
																				"src": "3414:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3396:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1308,
																		"nodeType": "IfStatement",
																		"src": "3392:111:6",
																		"trueBody": {
																			"id": 1307,
																			"nodeType": "Block",
																			"src": "3429:74:6",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1305,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1303,
																							"name": "_lastRewardTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1273,
																							"src": "3452:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 1304,
																							"name": "poolStartTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1152,
																							"src": "3470:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3452:31:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1306,
																					"nodeType": "ExpressionStatement",
																					"src": "3452:31:6"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1310,
															"nodeType": "IfStatement",
															"src": "3275:243:6",
															"trueBody": {
																"id": 1299,
																"nodeType": "Block",
																"src": "3301:66:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1295,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1273,
																				"src": "3320:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 1296,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1152,
																				"src": "3338:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3320:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1298,
																		"nodeType": "ExpressionStatement",
																		"src": "3320:31:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1330
												],
												"declarations": [
													{
														"constant": false,
														"id": 1330,
														"mutability": "mutable",
														"name": "_isStarted",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1364,
														"src": "3734:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1329,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3734:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1331,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3762:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1332,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "3781:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3762:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1334,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3761:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1335,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3809:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1336,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "3828:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3828:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3809:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1339,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3808:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3761:83:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3734:110:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1346,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "3901:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1347,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "3935:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1348,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3978:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4026:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"argumentTypes": null,
																	"id": 1350,
																	"name": "_isStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "4054:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1345,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "3869:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1136_storage_ptr_$",
																	"typeString": "type(struct PolyRockRewardPool.PoolInfo storage pointer)"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"token",
																"allocPoint",
																"lastRewardTime",
																"accRockPerShare",
																"isStarted"
															],
															"nodeType": "FunctionCall",
															"src": "3869:211:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_memory_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1136_memory_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1342,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "3855:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3855:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$1136_storage_$returns$__$",
															"typeString": "function (struct PolyRockRewardPool.PoolInfo storage ref)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3855:226:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "3855:226:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1354,
													"name": "_isStarted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1330,
													"src": "4096:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1363,
												"nodeType": "IfStatement",
												"src": "4092:93:6",
												"trueBody": {
													"id": 1362,
													"nodeType": "Block",
													"src": "4108:77:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1355,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "4123:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1358,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1267,
																			"src": "4161:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1356,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "4141:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "4141:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4141:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4123:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1361,
															"nodeType": "ExpressionStatement",
															"src": "4123:50:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "96805e54",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1276,
											"modifierName": {
												"argumentTypes": null,
												"id": 1275,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2159,
												"src": "3058:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3058:12:6"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1365,
												"src": "2939:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1365,
												"src": "2969:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1268,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2969:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1365,
												"src": "2993:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2993:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "_lastRewardTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1365,
												"src": "3020:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2928:122:6"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3071:0:6"
									},
									"scope": 2106,
									"src": "2916:1276:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "4356:285:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1374,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "4367:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4367:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "4367:17:6"
											},
											{
												"assignments": [
													1378
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1404,
														"src": "4395:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRockRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1377,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "4395:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1382,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1379,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "4419:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1381,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1380,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "4428:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4419:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRockRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4395:38:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1383,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "4448:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isStarted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1135,
													"src": "4448:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1397,
												"nodeType": "IfStatement",
												"src": "4444:150:6",
												"trueBody": {
													"id": 1396,
													"nodeType": "Block",
													"src": "4464:130:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1385,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "4479:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1392,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1369,
																			"src": "4556:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1388,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1378,
																						"src": "4517:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																							"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																						}
																					},
																					"id": 1389,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1129,
																					"src": "4517:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1386,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1150,
																					"src": "4497:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "4497:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4497:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "4497:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4497:85:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4479:103:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1395,
															"nodeType": "ExpressionStatement",
															"src": "4479:103:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1398,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4604:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1129,
														"src": "4604:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1401,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "4622:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4604:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "4604:29:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1ab06ee5",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1372,
											"modifierName": {
												"argumentTypes": null,
												"id": 1371,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2159,
												"src": "4343:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4343:12:6"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "4301:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "4315:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4300:35:6"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4356:0:6"
									},
									"scope": 2106,
									"src": "4288:353:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "4812:559:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1414,
														"name": "_fromTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "4827:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1415,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "4840:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4827:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1419,
												"nodeType": "IfStatement",
												"src": "4823:34:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4856:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1413,
													"id": 1418,
													"nodeType": "Return",
													"src": "4849:8:6"
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1420,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "4872:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1421,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "4883:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4872:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1476,
													"nodeType": "Block",
													"src": "5137:227:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1450,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "5156:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1451,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "5167:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5156:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1455,
															"nodeType": "IfStatement",
															"src": "5152:38:6",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5189:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1413,
																"id": 1454,
																"nodeType": "Return",
																"src": "5182:8:6"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1456,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "5209:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1457,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "5222:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5209:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1467,
															"nodeType": "IfStatement",
															"src": "5205:84:6",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1464,
																			"name": "RockPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "5275:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1461,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1152,
																					"src": "5256:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1459,
																					"name": "_toTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1409,
																					"src": "5244:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "5244:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5244:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "5244:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5244:45:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1413,
																"id": 1466,
																"nodeType": "Return",
																"src": "5237:52:6"
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1473,
																		"name": "RockPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "5338:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1470,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "5323:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1468,
																				"name": "_toTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "5311:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 923,
																			"src": "5311:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5311:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "5311:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5311:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1413,
															"id": 1475,
															"nodeType": "Return",
															"src": "5304:48:6"
														}
													]
												},
												"id": 1477,
												"nodeType": "IfStatement",
												"src": "4868:496:6",
												"trueBody": {
													"id": 1449,
													"nodeType": "Block",
													"src": "4896:235:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1423,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "4915:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1424,
																	"name": "poolEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "4928:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4915:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1428,
															"nodeType": "IfStatement",
															"src": "4911:38:6",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4948:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1413,
																"id": 1427,
																"nodeType": "Return",
																"src": "4941:8:6"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1429,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "4968:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1430,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "4981:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4968:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1440,
															"nodeType": "IfStatement",
															"src": "4964:88:6",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1437,
																			"name": "RockPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "5038:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1434,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1152,
																					"src": "5019:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1432,
																					"name": "poolEndTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "5003:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "5003:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5003:30:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "5003:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5003:49:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1413,
																"id": 1439,
																"nodeType": "Return",
																"src": "4996:56:6"
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1446,
																		"name": "RockPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "5105:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1443,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "5090:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1441,
																				"name": "poolEndTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "5074:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 923,
																			"src": "5074:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5074:26:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "5074:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5074:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1413,
															"id": 1448,
															"nodeType": "Return",
															"src": "5067:52:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "231f0c6a",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneratedReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_fromTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1479,
												"src": "4746:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_toTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1479,
												"src": "4765:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4745:36:6"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1479,
												"src": "4803:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4802:9:6"
									},
									"scope": 2106,
									"src": "4718:653:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "5518:689:6",
										"statements": [
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1575,
														"src": "5529:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRockRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1488,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "5529:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1493,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1490,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "5553:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1492,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1491,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "5562:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5553:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRockRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5529:38:6"
											},
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1575,
														"src": "5578:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRockRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1494,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "5578:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1496,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "5602:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRockRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1498,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1497,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "5611:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5602:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyRockRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1500,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1499,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "5617:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5602:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyRockRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5578:45:6"
											},
											{
												"assignments": [
													1503
												],
												"declarations": [
													{
														"constant": false,
														"id": 1503,
														"mutability": "mutable",
														"name": "accRockPerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1575,
														"src": "5634:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1502,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5634:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1504,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "5660:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accRockPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1133,
													"src": "5660:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5634:46:6"
											},
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1575,
														"src": "5691:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5691:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1517,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1514,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "5742:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRockRewardPool_$2106",
																		"typeString": "contract PolyRockRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRockRewardPool_$2106",
																		"typeString": "contract PolyRockRewardPool"
																	}
																],
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5734:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1512,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5734:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5734:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1509,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "5713:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "5713:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "5713:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5713:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5691:57:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1518,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "5763:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5763:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1520,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "5781:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1131,
															"src": "5781:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5763:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1523,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "5804:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5819:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5804:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5763:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1561,
												"nodeType": "IfStatement",
												"src": "5759:360:6",
												"trueBody": {
													"id": 1560,
													"nodeType": "Block",
													"src": "5822:297:6",
													"statements": [
														{
															"assignments": [
																1528
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1528,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1560,
																	"src": "5837:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1527,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5837:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1535,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1530,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "5883:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1131,
																		"src": "5883:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1532,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "5904:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5904:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1529,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "5864:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5864:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5837:83:6"
														},
														{
															"assignments": [
																1537
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1537,
																	"mutability": "mutable",
																	"name": "_RockReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1560,
																	"src": "5935:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1536,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5935:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1546,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1544,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "5999:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1540,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1489,
																					"src": "5978:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1129,
																				"src": "5978:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1538,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "5957:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "5957:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5957:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 979,
																	"src": "5957:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5957:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5935:80:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1547,
																	"name": "accRockPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "6030:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1555,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1508,
																					"src": "6094:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 1552,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6084:4:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1550,
																							"name": "_RockReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1537,
																							"src": "6068:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "6068:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1553,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6068:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 979,
																				"src": "6068:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6068:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1548,
																			"name": "accRockPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "6048:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "6048:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6048:59:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6030:77:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1559,
															"nodeType": "ExpressionStatement",
															"src": "6030:77:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1571,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "6183:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																	"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "6183:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6173:4:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1565,
																			"name": "accRockPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "6152:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1562,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1495,
																				"src": "6136:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1563,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "6136:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "6136:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6136:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 979,
																"src": "6136:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6136:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "6136:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6136:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1574,
												"nodeType": "Return",
												"src": "6129:70:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "cf4b55cb",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingShare",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1576,
												"src": "5457:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1576,
												"src": "5471:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5471:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5456:29:6"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1576,
												"src": "5509:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5509:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5508:9:6"
									},
									"scope": 2106,
									"src": "5435:772:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "6324:146:6",
										"statements": [
											{
												"assignments": [
													1580
												],
												"declarations": [
													{
														"constant": false,
														"id": 1580,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1600,
														"src": "6335:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1579,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6335:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1583,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1581,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "6352:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6352:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6335:32:6"
											},
											{
												"body": {
													"id": 1598,
													"nodeType": "Block",
													"src": "6421:42:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1595,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1585,
																		"src": "6447:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1594,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "6436:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6436:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1597,
															"nodeType": "ExpressionStatement",
															"src": "6436:15:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1588,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "6400:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1589,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "6406:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6400:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1599,
												"initializationExpression": {
													"assignments": [
														1585
													],
													"declarations": [
														{
															"constant": false,
															"id": 1585,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1599,
															"src": "6383:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1584,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6383:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1587,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6397:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6383:15:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6414:5:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1591,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "6416:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1593,
													"nodeType": "ExpressionStatement",
													"src": "6414:5:6"
												},
												"nodeType": "ForStatement",
												"src": "6378:85:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "630b5ba1",
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6314:2:6"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6324:0:6"
									},
									"scope": 2106,
									"src": "6290:180:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "6587:867:6",
										"statements": [
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1711,
														"src": "6598:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRockRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1606,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "6598:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1611,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1608,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "6622:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1610,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1609,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "6631:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6622:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRockRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6598:38:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1612,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "6651:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6651:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1614,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "6670:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "6670:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6651:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1619,
												"nodeType": "IfStatement",
												"src": "6647:77:6",
												"trueBody": {
													"id": 1618,
													"nodeType": "Block",
													"src": "6691:33:6",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 1605,
															"id": 1617,
															"nodeType": "Return",
															"src": "6706:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1711,
														"src": "6734:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6734:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1627,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "6785:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRockRewardPool_$2106",
																		"typeString": "contract PolyRockRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRockRewardPool_$2106",
																		"typeString": "contract PolyRockRewardPool"
																	}
																],
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6777:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1625,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6777:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6777:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1622,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "6756:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "6756:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "6756:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6756:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6734:57:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1631,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "6806:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6821:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6806:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1643,
												"nodeType": "IfStatement",
												"src": "6802:107:6",
												"trueBody": {
													"id": 1642,
													"nodeType": "Block",
													"src": "6824:85:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1634,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "6839:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1131,
																	"src": "6839:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1637,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "6861:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6861:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6839:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1640,
															"nodeType": "ExpressionStatement",
															"src": "6839:37:6"
														},
														{
															"expression": null,
															"functionReturnParameters": 1605,
															"id": 1641,
															"nodeType": "Return",
															"src": "6891:7:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6923:15:6",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1644,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "6924:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "6924:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1662,
												"nodeType": "IfStatement",
												"src": "6919:138:6",
												"trueBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "6940:117:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1647,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "6955:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1135,
																	"src": "6955:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6972:4:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6955:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1652,
															"nodeType": "ExpressionStatement",
															"src": "6955:21:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1653,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "6991:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1656,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1607,
																				"src": "7029:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1129,
																			"src": "7029:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1654,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "7009:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "7009:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7009:36:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6991:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1660,
															"nodeType": "ExpressionStatement",
															"src": "6991:54:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1663,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "7071:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7089:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7071:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1703,
												"nodeType": "IfStatement",
												"src": "7067:332:6",
												"trueBody": {
													"id": 1702,
													"nodeType": "Block",
													"src": "7092:307:6",
													"statements": [
														{
															"assignments": [
																1667
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1667,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1702,
																	"src": "7107:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1666,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7107:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1674,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1669,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1607,
																			"src": "7153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1131,
																		"src": "7153:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1671,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "7174:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7174:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1668,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "7134:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7134:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7107:83:6"
														},
														{
															"assignments": [
																1676
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1676,
																	"mutability": "mutable",
																	"name": "_RockReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1702,
																	"src": "7205:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1675,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7205:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1685,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1683,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "7269:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1679,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1607,
																					"src": "7248:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1680,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1129,
																				"src": "7248:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1677,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1667,
																				"src": "7227:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "7227:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7227:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 979,
																	"src": "7227:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7227:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7205:80:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1686,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "7300:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accRockPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1133,
																	"src": "7300:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1697,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "7374:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 1694,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7364:4:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1692,
																							"name": "_RockReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1676,
																							"src": "7348:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1693,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "7348:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7348:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 979,
																				"src": "7348:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7348:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1689,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1607,
																				"src": "7323:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1690,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accRockPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1133,
																			"src": "7323:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "7323:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7323:64:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7300:87:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1701,
															"nodeType": "ExpressionStatement",
															"src": "7300:87:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1704,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "7409:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "7409:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1707,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "7431:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7431:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7409:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "7409:37:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "51eb05a6",
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1712,
												"src": "6566:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6566:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6565:14:6"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6587:0:6"
									},
									"scope": 2106,
									"src": "6546:908:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "7544:771:6",
										"statements": [
											{
												"assignments": [
													1720
												],
												"declarations": [
													{
														"constant": false,
														"id": 1720,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1827,
														"src": "7555:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7555:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1723,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1721,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "7573:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "7573:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7555:28:6"
											},
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1827,
														"src": "7594:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRockRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1724,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "7594:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1726,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7618:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1728,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1727,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "7627:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7618:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRockRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7594:38:6"
											},
											{
												"assignments": [
													1731
												],
												"declarations": [
													{
														"constant": false,
														"id": 1731,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1827,
														"src": "7643:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRockRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1730,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "7643:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1737,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1732,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "7667:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRockRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1734,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1733,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "7676:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7667:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyRockRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1736,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1735,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "7682:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7667:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyRockRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7643:47:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1739,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "7712:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1738,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "7701:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7701:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "7701:16:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1742,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "7732:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1122,
														"src": "7732:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7746:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7732:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1778,
												"nodeType": "IfStatement",
												"src": "7728:290:6",
												"trueBody": {
													"id": 1777,
													"nodeType": "Block",
													"src": "7749:269:6",
													"statements": [
														{
															"assignments": [
																1747
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1747,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1777,
																	"src": "7764:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1746,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7764:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1761,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1758,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "7835:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1124,
																		"src": "7835:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 1755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7825:4:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1751,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1725,
																							"src": "7799:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																								"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 1752,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accRockPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1133,
																						"src": "7799:20:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1748,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1731,
																							"src": "7783:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																								"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																							}
																						},
																						"id": 1749,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1122,
																						"src": "7783:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1750,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 957,
																					"src": "7783:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7783:37:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 979,
																			"src": "7783:41:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7783:47:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 923,
																	"src": "7783:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7783:68:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7764:87:6"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1762,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "7870:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7881:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7870:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1776,
															"nodeType": "IfStatement",
															"src": "7866:141:6",
															"trueBody": {
																"id": 1775,
																"nodeType": "Block",
																"src": "7884:123:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1766,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1720,
																					"src": "7920:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1767,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1747,
																					"src": "7929:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1765,
																				"name": "safeRockTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2040,
																				"src": "7903:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7903:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1769,
																		"nodeType": "ExpressionStatement",
																		"src": "7903:35:6"
																	},
																	{
																		"eventCall": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1771,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1720,
																					"src": "7973:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1772,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1747,
																					"src": "7982:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1770,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "7962:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7962:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1774,
																		"nodeType": "EmitStatement",
																		"src": "7957:34:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1779,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "8032:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8042:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8032:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1806,
												"nodeType": "IfStatement",
												"src": "8028:157:6",
												"trueBody": {
													"id": 1805,
													"nodeType": "Block",
													"src": "8045:140:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1787,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "8088:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1790,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "8105:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PolyRockRewardPool_$2106",
																					"typeString": "contract PolyRockRewardPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PolyRockRewardPool_$2106",
																					"typeString": "contract PolyRockRewardPool"
																				}
																			],
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8097:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1788,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8097:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8097:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1792,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "8112:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1782,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1725,
																			"src": "8060:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "8060:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 246,
																	"src": "8060:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8060:60:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1794,
															"nodeType": "ExpressionStatement",
															"src": "8060:60:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1795,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "8135:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																			"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "8135:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1801,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "8165:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1798,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1731,
																				"src": "8149:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "8149:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "8149:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8149:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8135:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1804,
															"nodeType": "ExpressionStatement",
															"src": "8135:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1807,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "8195:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "8195:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653138",
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8255:4:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1813,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1725,
																			"src": "8229:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accRockPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "8229:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1810,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "8213:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1122,
																		"src": "8213:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "8213:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8213:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "8213:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8213:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8195:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "8195:65:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1822,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "8284:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1823,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "8293:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1824,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "8299:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1821,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "8276:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8276:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "EmitStatement",
												"src": "8271:36:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e2bbb158",
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1828,
												"src": "7506:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7506:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1828,
												"src": "7520:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7505:31:6"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7544:0:6"
									},
									"scope": 2106,
									"src": "7489:826:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "8407:754:6",
										"statements": [
											{
												"assignments": [
													1836
												],
												"declarations": [
													{
														"constant": false,
														"id": 1836,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1941,
														"src": "8418:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1835,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8418:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1839,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1837,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "8436:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "8436:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8418:28:6"
											},
											{
												"assignments": [
													1841
												],
												"declarations": [
													{
														"constant": false,
														"id": 1841,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1941,
														"src": "8457:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRockRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1840,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "8457:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1845,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1842,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "8481:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1844,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1843,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "8490:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8481:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRockRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8457:38:6"
											},
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1941,
														"src": "8506:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRockRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1846,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "8506:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1853,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1848,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "8530:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRockRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1850,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1849,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "8539:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8530:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyRockRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1852,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1851,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "8545:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8530:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyRockRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8506:47:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1855,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "8572:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																		"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1122,
																"src": "8572:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1857,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "8587:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8572:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8596:20:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8564:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8564:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "8564:53:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1863,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "8639:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1862,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "8628:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8628:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1865,
												"nodeType": "ExpressionStatement",
												"src": "8628:16:6"
											},
											{
												"assignments": [
													1867
												],
												"declarations": [
													{
														"constant": false,
														"id": 1867,
														"mutability": "mutable",
														"name": "_pending",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1941,
														"src": "8655:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1866,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8655:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1881,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1878,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "8726:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																	"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "8726:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8716:4:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1871,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1841,
																				"src": "8690:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accRockPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1133,
																			"src": "8690:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1868,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1847,
																				"src": "8674:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "8674:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "8674:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8674:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 979,
																"src": "8674:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8674:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "8674:51:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8674:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8655:87:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1882,
														"name": "_pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "8757:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8768:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8757:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1896,
												"nodeType": "IfStatement",
												"src": "8753:129:6",
												"trueBody": {
													"id": 1895,
													"nodeType": "Block",
													"src": "8771:111:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1886,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "8803:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1887,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "8812:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1885,
																	"name": "safeRockTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2040,
																	"src": "8786:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8786:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1889,
															"nodeType": "ExpressionStatement",
															"src": "8786:35:6"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1891,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "8852:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1892,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "8861:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1890,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "8841:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8841:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1894,
															"nodeType": "EmitStatement",
															"src": "8836:34:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1897,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1832,
														"src": "8896:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8906:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8896:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1920,
												"nodeType": "IfStatement",
												"src": "8892:138:6",
												"trueBody": {
													"id": 1919,
													"nodeType": "Block",
													"src": "8909:121:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1900,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "8924:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																			"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1902,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "8924:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1906,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1832,
																			"src": "8954:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1903,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1847,
																				"src": "8938:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "8938:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 923,
																		"src": "8938:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8938:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8924:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1909,
															"nodeType": "ExpressionStatement",
															"src": "8924:38:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1915,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "9001:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1916,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "9010:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1910,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "8977:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "8977:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 221,
																	"src": "8977:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8977:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1918,
															"nodeType": "ExpressionStatement",
															"src": "8977:41:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1921,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "9040:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "9040:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653138",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9100:4:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1927,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "9074:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accRockPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "9074:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1924,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1847,
																			"src": "9058:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1122,
																		"src": "9058:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "9058:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9058:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "9058:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9058:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9040:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "9040:65:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1936,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "9130:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1937,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "9139:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1938,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "9145:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1935,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "9121:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9121:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "EmitStatement",
												"src": "9116:37:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "441a3e70",
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1942,
												"src": "8369:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8369:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1942,
												"src": "8383:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8383:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8368:31:6"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8407:0:6"
									},
									"scope": 2106,
									"src": "8351:810:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "9280:329:6",
										"statements": [
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1996,
														"src": "9291:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyRockRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1947,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "9291:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyRockRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1952,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1949,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "9315:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1951,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1950,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "9324:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9315:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyRockRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9291:38:6"
											},
											{
												"assignments": [
													1954
												],
												"declarations": [
													{
														"constant": false,
														"id": 1954,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1996,
														"src": "9340:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRockRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1953,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "9340:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1961,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1955,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "9364:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRockRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1957,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1956,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "9373:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9364:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyRockRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1960,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1958,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "9379:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9379:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9364:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyRockRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9340:50:6"
											},
											{
												"assignments": [
													1963
												],
												"declarations": [
													{
														"constant": false,
														"id": 1963,
														"mutability": "mutable",
														"name": "_amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1996,
														"src": "9401:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9401:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1966,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1964,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "9419:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1122,
													"src": "9419:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9401:29:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1967,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "9441:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1122,
														"src": "9441:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9455:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9441:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "9441:15:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1973,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "9467:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyRockRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1975,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "9467:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9485:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9467:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "9467:19:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1984,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9521:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9521:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1986,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "9533:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1979,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "9497:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "9497:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "9497:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "9497:44:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1990,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9575:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9575:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1992,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "9587:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1993,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "9593:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1989,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "9557:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9557:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "EmitStatement",
												"src": "9552:49:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5312ea8e",
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1997,
												"src": "9259:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9259:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9258:14:6"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9280:0:6"
									},
									"scope": 2106,
									"src": "9232:377:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "9788:284:6",
										"statements": [
											{
												"assignments": [
													2005
												],
												"declarations": [
													{
														"constant": false,
														"id": 2005,
														"mutability": "mutable",
														"name": "_RockBal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2039,
														"src": "9799:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9799:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2013,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2010,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "9841:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRockRewardPool_$2106",
																		"typeString": "contract PolyRockRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRockRewardPool_$2106",
																		"typeString": "contract PolyRockRewardPool"
																	}
																],
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9833:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2008,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9833:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9833:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2006,
															"name": "Rock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "9818:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "9818:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9818:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9799:48:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2014,
														"name": "_RockBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "9862:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9873:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9862:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2038,
												"nodeType": "IfStatement",
												"src": "9858:207:6",
												"trueBody": {
													"id": 2037,
													"nodeType": "Block",
													"src": "9876:189:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2017,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2001,
																	"src": "9895:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2018,
																	"name": "_RockBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "9905:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9895:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2035,
																"nodeType": "Block",
																"src": "9988:66:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2031,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1999,
																					"src": "10025:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2032,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2001,
																					"src": "10030:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2028,
																					"name": "Rock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "10007:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "10007:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10007:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2034,
																		"nodeType": "ExpressionStatement",
																		"src": "10007:31:6"
																	}
																]
															},
															"id": 2036,
															"nodeType": "IfStatement",
															"src": "9891:163:6",
															"trueBody": {
																"id": 2027,
																"nodeType": "Block",
																"src": "9915:67:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2023,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1999,
																					"src": "9952:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2024,
																					"name": "_RockBal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2005,
																					"src": "9957:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2020,
																					"name": "Rock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "9934:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "9934:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9934:32:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2026,
																		"nodeType": "ExpressionStatement",
																		"src": "9934:32:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeRockTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2040,
												"src": "9749:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9749:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2040,
												"src": "9762:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9762:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9748:30:6"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9788:0:6"
									},
									"scope": 2106,
									"src": "9723:349:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "10185:501:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2051,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "10200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2053,
															"name": "poolEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "10218:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3930",
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10232:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														"src": "10218:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10200:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2096,
												"nodeType": "IfStatement",
												"src": "10196:441:6",
												"trueBody": {
													"id": 2095,
													"nodeType": "Block",
													"src": "10241:396:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		},
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2058,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "10364:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2059,
																			"name": "Rock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "10374:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "10364:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "526f636b",
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10380:6:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2f3b358b892f3e0baae98bebb3c61b03f5c9eb68ba717978f8984a0f722d2aed",
																			"typeString": "literal_string \"Rock\""
																		},
																		"value": "Rock"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2f3b358b892f3e0baae98bebb3c61b03f5c9eb68ba717978f8984a0f722d2aed",
																			"typeString": "literal_string \"Rock\""
																		}
																	],
																	"id": 2057,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "10356:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10356:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2063,
															"nodeType": "ExpressionStatement",
															"src": "10356:31:6"
														},
														{
															"assignments": [
																2065
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2065,
																	"mutability": "mutable",
																	"name": "length",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2095,
																	"src": "10402:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2064,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10402:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2068,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2066,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "10419:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																		"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10419:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10402:32:6"
														},
														{
															"body": {
																"id": 2093,
																"nodeType": "Block",
																"src": "10492:134:6",
																"statements": [
																	{
																		"assignments": [
																			2080
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2080,
																				"mutability": "mutable",
																				"name": "pool",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2093,
																				"src": "10511:21:6",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyRockRewardPool.PoolInfo"
																				},
																				"typeName": {
																					"contractScope": null,
																					"id": 2079,
																					"name": "PoolInfo",
																					"nodeType": "UserDefinedTypeName",
																					"referencedDeclaration": 1136,
																					"src": "10511:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyRockRewardPool.PoolInfo"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2084,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2081,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "10535:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																					"typeString": "struct PolyRockRewardPool.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 2083,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2082,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2070,
																				"src": "10544:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10535:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
																				"typeString": "struct PolyRockRewardPool.PoolInfo storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10511:37:6"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					},
																					"id": 2089,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2086,
																						"name": "_token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2042,
																						"src": "10575:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$187",
																							"typeString": "contract IERC20"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2087,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2080,
																							"src": "10585:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																								"typeString": "struct PolyRockRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 2088,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1127,
																						"src": "10585:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$187",
																							"typeString": "contract IERC20"
																						}
																					},
																					"src": "10575:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "706f6f6c2e746f6b656e",
																					"id": 2090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10597:12:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					},
																					"value": "pool.token"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					}
																				],
																				"id": 2085,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "10567:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10567:43:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2092,
																		"nodeType": "ExpressionStatement",
																		"src": "10567:43:6"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2073,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "10471:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2074,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "10477:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10471:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2094,
															"initializationExpression": {
																"assignments": [
																	2070
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2070,
																		"mutability": "mutable",
																		"name": "pid",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 2094,
																		"src": "10454:11:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2069,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10454:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 2072,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10468:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10454:15:6"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "10485:5:6",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 2076,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "10487:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2078,
																"nodeType": "ExpressionStatement",
																"src": "10485:5:6"
															},
															"nodeType": "ForStatement",
															"src": "10449:177:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2100,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "10667:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2101,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "10671:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2097,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "10647:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "10647:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10647:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "10647:31:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "54575af4",
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2049,
											"modifierName": {
												"argumentTypes": null,
												"id": 2048,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2159,
												"src": "10172:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10172:12:6"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2105,
												"src": "10120:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2041,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "10120:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2105,
												"src": "10135:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2105,
												"src": "10151:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10151:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10119:43:6"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10185:0:6"
									},
									"scope": 2106,
									"src": "10082:604:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2107,
							"src": "462:10227:6"
						}
					],
					"src": "35:10656:6"
				},
				"id": 6
			},
			"contracts/owner/Operator.sol": {
				"ast": {
					"absolutePath": "contracts/owner/Operator.sol",
					"exportedSymbols": {
						"Operator": [
							2217
						]
					},
					"id": 2218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2108,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2109,
							"nodeType": "ImportDirective",
							"scope": 2218,
							"sourceUnit": 110,
							"src": "70:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2110,
							"nodeType": "ImportDirective",
							"scope": 2218,
							"sourceUnit": 720,
							"src": "124:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2111,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 719,
										"src": "209:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$719",
											"typeString": "contract Context"
										}
									},
									"id": 2112,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:7"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2113,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "218:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 2114,
									"nodeType": "InheritanceSpecifier",
									"src": "218:7:7"
								}
							],
							"contractDependencies": [
								109,
								719
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2217,
							"linearizedBaseContracts": [
								2217,
								109,
								719
							],
							"name": "Operator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2116,
									"mutability": "mutable",
									"name": "_operator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2217,
									"src": "233:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2115,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2122,
									"name": "OperatorTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOperator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2122,
												"src": "303:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOperator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2122,
												"src": "346:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "292:88:7"
									},
									"src": "267:114:7"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "412:101:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2125,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "423:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2126,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "435:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "435:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "423:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "423:24:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "491:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "483:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2131,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "483:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "483:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2135,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "495:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2130,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2122,
														"src": "463:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "463:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2137,
												"nodeType": "EmitStatement",
												"src": "458:47:7"
											}
										]
									},
									"documentation": null,
									"id": 2139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:7"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:7"
									},
									"scope": 2217,
									"src": "389:124:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "571:35:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2144,
													"name": "_operator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2116,
													"src": "589:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2143,
												"id": 2145,
												"nodeType": "Return",
												"src": "582:16:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "570ca735",
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:7"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2147,
												"src": "562:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "561:9:7"
									},
									"scope": 2217,
									"src": "521:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "638:140:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2150,
																"name": "_operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "671:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2151,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "684:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "684:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "671:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "709:38:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															},
															"value": "operator: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															}
														],
														"id": 2149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "649:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:109:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2156,
												"nodeType": "ExpressionStatement",
												"src": "649:109:7"
											},
											{
												"id": 2157,
												"nodeType": "PlaceholderStatement",
												"src": "769:1:7"
											}
										]
									},
									"documentation": null,
									"id": 2159,
									"name": "onlyOperator",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:7"
									},
									"src": "614:164:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "835:51:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2164,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "853:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "853:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2166,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "869:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "853:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2163,
												"id": 2168,
												"nodeType": "Return",
												"src": "846:32:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4456eda2",
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:7"
									},
									"returnParameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2170,
												"src": "829:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:6:7"
									},
									"scope": 2217,
									"src": "786:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "959:50:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2178,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "988:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2177,
														"name": "_transferOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "970:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2180,
												"nodeType": "ExpressionStatement",
												"src": "970:31:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "29605e77",
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2175,
											"modifierName": {
												"argumentTypes": null,
												"id": 2174,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "949:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "949:9:7"
										}
									],
									"name": "transferOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2182,
												"src": "920:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "919:22:7"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:7"
									},
									"scope": 2217,
									"src": "894:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2215,
										"nodeType": "Block",
										"src": "1075:286:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2188,
																"name": "newOperator_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "1108:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1132:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1124:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2189,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1124:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1124:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1108:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1149:47:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															},
															"value": "operator: zero address given for new operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															}
														],
														"id": 2187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1086:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "1086:121:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1251:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1243:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2198,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1243:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1243:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2202,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "1255:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2197,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2122,
														"src": "1223:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2204,
												"nodeType": "EmitStatement",
												"src": "1218:50:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2208,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "1305:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2205,
															"name": "Ownable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1279:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Ownable_$109_$",
																"typeString": "type(contract Ownable)"
															}
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "1279:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "1279:39:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2211,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "1329:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2212,
														"name": "newOperator_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "1341:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1329:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2214,
												"nodeType": "ExpressionStatement",
												"src": "1329:24:7"
											}
										]
									},
									"documentation": null,
									"id": 2216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2216,
												"src": "1044:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1043:22:7"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:0:7"
									},
									"scope": 2217,
									"src": "1017:344:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2218,
							"src": "179:1185:7"
						}
					],
					"src": "35:1331:7"
				},
				"id": 7
			}
		}
	}
}